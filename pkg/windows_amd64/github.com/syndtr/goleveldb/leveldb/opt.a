!<arch>
__.PKGDEF       0           0     0     644     9362      `
go object windows amd64 go1.4.2 X:precisestack

$$
package opt
	import runtime "runtime"
	import cache "github.com/syndtr/goleveldb/leveldb/cache"
	import filter "github.com/syndtr/goleveldb/leveldb/filter"
	import comparer "github.com/syndtr/goleveldb/leveldb/comparer"
	const @"".KiB = 0x400
	const @"".MiB = 0x100000
	const @"".GiB = 0x40000000
	const @"".DefaultBlockCacheSize = 0x800000
	const @"".DefaultBlockRestartInterval = 0x10
	const @"".DefaultBlockSize = 0x1000
	type @"".Compression uint
	func (@"".cÂ·2 @"".Compression) String () (? string)
	const @"".DefaultCompressionType @"".Compression = 0x2
	const @"".DefaultCachedOpenFiles = 0x1F4
	const @"".DefaultWriteBuffer = 0x400000
	type @"github.com/syndtr/goleveldb/leveldb/cache".DelFin func(@"github.com/syndtr/goleveldb/leveldb/cache".exist bool, @"github.com/syndtr/goleveldb/leveldb/cache".pending bool)
	type @"github.com/syndtr/goleveldb/leveldb/cache".Handle interface { Release(); Value() (? interface {}) }
	type @"github.com/syndtr/goleveldb/leveldb/cache".SetFunc func() (@"github.com/syndtr/goleveldb/leveldb/cache".charge int, @"github.com/syndtr/goleveldb/leveldb/cache".value interface {})
	type @"github.com/syndtr/goleveldb/leveldb/cache".PurgeFin func(@"github.com/syndtr/goleveldb/leveldb/cache".ns uint64, @"github.com/syndtr/goleveldb/leveldb/cache".key uint64)
	type @"github.com/syndtr/goleveldb/leveldb/cache".Namespace interface { Delete(@"github.com/syndtr/goleveldb/leveldb/cache".key uint64, @"github.com/syndtr/goleveldb/leveldb/cache".fin @"github.com/syndtr/goleveldb/leveldb/cache".DelFin) (? bool); Get(@"github.com/syndtr/goleveldb/leveldb/cache".key uint64, @"github.com/syndtr/goleveldb/leveldb/cache".setf @"github.com/syndtr/goleveldb/leveldb/cache".SetFunc) (? @"github.com/syndtr/goleveldb/leveldb/cache".Handle); Purge(@"github.com/syndtr/goleveldb/leveldb/cache".fin @"github.com/syndtr/goleveldb/leveldb/cache".PurgeFin); Zap() }
	type @"github.com/syndtr/goleveldb/leveldb/cache".Cache interface { Capacity() (? int); GetNamespace(@"github.com/syndtr/goleveldb/leveldb/cache".id uint64) (? @"github.com/syndtr/goleveldb/leveldb/cache".Namespace); NumObjects() (? int); Purge(@"github.com/syndtr/goleveldb/leveldb/cache".fin @"github.com/syndtr/goleveldb/leveldb/cache".PurgeFin); PurgeNamespace(@"github.com/syndtr/goleveldb/leveldb/cache".id uint64, @"github.com/syndtr/goleveldb/leveldb/cache".fin @"github.com/syndtr/goleveldb/leveldb/cache".PurgeFin); SetCapacity(@"github.com/syndtr/goleveldb/leveldb/cache".capacity int); Size() (? int); Used() (? int); Zap(); ZapNamespace(@"github.com/syndtr/goleveldb/leveldb/cache".id uint64) }
	var @"".NoCache @"github.com/syndtr/goleveldb/leveldb/cache".Cache
	const @"".DefaultCompression @"".Compression = 0x0
	const @"".NoCompression @"".Compression = 0x1
	const @"".SnappyCompression @"".Compression = 0x2
	type @"".Strict uint
	const @"".StrictManifest @"".Strict = 0x1
	const @"".StrictJournal @"".Strict = 0x2
	const @"".StrictJournalChecksum @"".Strict = 0x4
	const @"".StrictIterator @"".Strict = 0x8
	const @"".StrictBlockChecksum @"".Strict = 0x10
	const @"".StrictAll @"".Strict = 0x1F
	const @"".DefaultStrict @"".Strict = 0x14
	const @"".NoStrict @"".Strict = 0xFFFFFFFFFFFFFFE0
	type @"github.com/syndtr/goleveldb/leveldb/filter".Buffer interface { Alloc(@"github.com/syndtr/goleveldb/leveldb/filter".n int) (? []byte); Write(@"github.com/syndtr/goleveldb/leveldb/filter".p []byte) (@"github.com/syndtr/goleveldb/leveldb/filter".n int, @"github.com/syndtr/goleveldb/leveldb/filter".err error); WriteByte(@"github.com/syndtr/goleveldb/leveldb/filter".c byte) (? error) }
	type @"github.com/syndtr/goleveldb/leveldb/filter".FilterGenerator interface { Add(@"github.com/syndtr/goleveldb/leveldb/filter".key []byte); Generate(@"github.com/syndtr/goleveldb/leveldb/filter".b @"github.com/syndtr/goleveldb/leveldb/filter".Buffer) }
	type @"github.com/syndtr/goleveldb/leveldb/filter".Filter interface { Contains(@"github.com/syndtr/goleveldb/leveldb/filter".filter []byte, @"github.com/syndtr/goleveldb/leveldb/filter".key []byte) (? bool); Name() (? string); NewGenerator() (? @"github.com/syndtr/goleveldb/leveldb/filter".FilterGenerator) }
	type @"github.com/syndtr/goleveldb/leveldb/comparer".Comparer interface { Compare(@"github.com/syndtr/goleveldb/leveldb/comparer".a []byte, @"github.com/syndtr/goleveldb/leveldb/comparer".b []byte) (? int); Name() (? string); Separator(@"github.com/syndtr/goleveldb/leveldb/comparer".dst []byte, @"github.com/syndtr/goleveldb/leveldb/comparer".a []byte, @"github.com/syndtr/goleveldb/leveldb/comparer".b []byte) (? []byte); Successor(@"github.com/syndtr/goleveldb/leveldb/comparer".dst []byte, @"github.com/syndtr/goleveldb/leveldb/comparer".b []byte) (? []byte) }
	type @"".Options struct { AltFilters []@"github.com/syndtr/goleveldb/leveldb/filter".Filter; BlockCache @"github.com/syndtr/goleveldb/leveldb/cache".Cache; BlockRestartInterval int; BlockSize int; CachedOpenFiles int; Comparer @"github.com/syndtr/goleveldb/leveldb/comparer".Comparer; Compression @"".Compression; ErrorIfExist bool; ErrorIfMissing bool; Filter @"github.com/syndtr/goleveldb/leveldb/filter".Filter; Strict @"".Strict; WriteBuffer int }
	func (@"".oÂ·2 *@"".Options "esc:0x1") GetAltFilters () (? []@"github.com/syndtr/goleveldb/leveldb/filter".Filter) { if @"".oÂ·2 == nil { return nil }; return @"".oÂ·2.AltFilters }
	func (@"".oÂ·2 *@"".Options "esc:0x1") GetBlockCache () (? @"github.com/syndtr/goleveldb/leveldb/cache".Cache) { if @"".oÂ·2 == nil { return nil }; return @"".oÂ·2.BlockCache }
	func (@"".oÂ·2 *@"".Options "esc:0x0") GetBlockRestartInterval () (? int) { if @"".oÂ·2 == nil || @"".oÂ·2.BlockRestartInterval <= 0x0 { return 0x10 }; return @"".oÂ·2.BlockRestartInterval }
	func (@"".oÂ·2 *@"".Options "esc:0x0") GetBlockSize () (? int) { if @"".oÂ·2 == nil || @"".oÂ·2.BlockSize <= 0x0 { return 0x1000 }; return @"".oÂ·2.BlockSize }
	func (@"".oÂ·2 *@"".Options "esc:0x0") GetCachedOpenFiles () (? int) { if @"".oÂ·2 == nil || @"".oÂ·2.CachedOpenFiles == 0x0 { return 0x1F4 } else { if @"".oÂ·2.CachedOpenFiles < 0x0 { return 0x0 } }; return @"".oÂ·2.CachedOpenFiles }
	func (@"".oÂ·2 *@"".Options "esc:0x1") GetComparer () (? @"github.com/syndtr/goleveldb/leveldb/comparer".Comparer) { if @"".oÂ·2 == nil || @"".oÂ·2.Comparer == nil { return @"github.com/syndtr/goleveldb/leveldb/comparer".DefaultComparer }; return @"".oÂ·2.Comparer }
	func (@"".oÂ·2 *@"".Options "esc:0x0") GetCompression () (? @"".Compression) { if @"".oÂ·2 == nil || @"".oÂ·2.Compression <= @"".Compression(0x0) || @"".oÂ·2.Compression >= @"".Compression(0x3) { return @"".Compression(0x2) }; return @"".oÂ·2.Compression }
	func (@"".oÂ·2 *@"".Options "esc:0x0") GetErrorIfExist () (? bool) { if @"".oÂ·2 == nil { return false }; return @"".oÂ·2.ErrorIfExist }
	func (@"".oÂ·2 *@"".Options "esc:0x0") GetErrorIfMissing () (? bool) { if @"".oÂ·2 == nil { return false }; return @"".oÂ·2.ErrorIfMissing }
	func (@"".oÂ·2 *@"".Options "esc:0x1") GetFilter () (? @"github.com/syndtr/goleveldb/leveldb/filter".Filter) { if @"".oÂ·2 == nil { return nil }; return @"".oÂ·2.Filter }
	func (@"".oÂ·2 *@"".Options "esc:0x0") GetStrict (@"".strictÂ·3 @"".Strict) (? bool) { if @"".oÂ·2 == nil || @"".oÂ·2.Strict == @"".Strict(0x0) { return @"".Strict(0x14) & @"".strictÂ·3 != @"".Strict(0x0) }; return @"".oÂ·2.Strict & @"".strictÂ·3 != @"".Strict(0x0) }
	func (@"".oÂ·2 *@"".Options "esc:0x0") GetWriteBuffer () (? int) { if @"".oÂ·2 == nil || @"".oÂ·2.WriteBuffer <= 0x0 { return 0x400000 }; return @"".oÂ·2.WriteBuffer }
	type @"".ReadOptions struct { DontFillCache bool; Strict @"".Strict }
	func (@"".roÂ·2 *@"".ReadOptions "esc:0x0") GetDontFillCache () (? bool) { if @"".roÂ·2 == nil { return false }; return @"".roÂ·2.DontFillCache }
	func (@"".roÂ·2 *@"".ReadOptions "esc:0x0") GetStrict (@"".strictÂ·3 @"".Strict) (? bool) { if @"".roÂ·2 == nil { return false }; return @"".roÂ·2.Strict & @"".strictÂ·3 != @"".Strict(0x0) }
	type @"".WriteOptions struct { Sync bool }
	func (@"".woÂ·2 *@"".WriteOptions "esc:0x0") GetSync () (? bool) { if @"".woÂ·2 == nil { return false }; return @"".woÂ·2.Sync }
	func @"".init ()
	type @"github.com/syndtr/goleveldb/leveldb/comparer".bytesComparer struct {}
	func (? @"github.com/syndtr/goleveldb/leveldb/comparer".bytesComparer) Compare (@"github.com/syndtr/goleveldb/leveldb/comparer".aÂ·2 []byte "esc:0x0", @"github.com/syndtr/goleveldb/leveldb/comparer".bÂ·3 []byte "esc:0x0") (? int)
	func (? @"github.com/syndtr/goleveldb/leveldb/comparer".bytesComparer) Name () (? string) { return "leveldb.BytewiseComparator" }
	func (? @"github.com/syndtr/goleveldb/leveldb/comparer".bytesComparer) Separator (@"github.com/syndtr/goleveldb/leveldb/comparer".dstÂ·2 []byte "esc:0x2", @"github.com/syndtr/goleveldb/leveldb/comparer".aÂ·3 []byte "esc:0x0", @"github.com/syndtr/goleveldb/leveldb/comparer".bÂ·4 []byte "esc:0x0") (? []byte)
	func (? @"github.com/syndtr/goleveldb/leveldb/comparer".bytesComparer) Successor (@"github.com/syndtr/goleveldb/leveldb/comparer".dstÂ·2 []byte "esc:0x2", @"github.com/syndtr/goleveldb/leveldb/comparer".bÂ·3 []byte "esc:0x0") (? []byte)
	var @"github.com/syndtr/goleveldb/leveldb/comparer".DefaultComparer @"github.com/syndtr/goleveldb/leveldb/comparer".bytesComparer
	const @"".nCompression @"".Compression = 0x3

$$
_go_.6          0           0     0     644     80951     `
go object windows amd64 go1.4.2 X:precisestack

!
  go13ldVgithub.com/syndtr/goleveldb/leveldb/cache.a\github.com/syndtr/goleveldb/leveldb/comparer.aXgithub.com/syndtr/goleveldb/leveldb/filter.a þ,"".noCache.SetCapacity     Ã    "".capacity  type.int   D  TgclocalsÂ·5d05a78f811f5c3f62710534cdce0004 TgclocalsÂ·3280bececceccd33cb74587feedb1f9f   ®F:/WorkProjects/GoProjects/m_api/src/github.com/syndtr/goleveldb/leveldb/opt/options.goþ&"".noCache.Capacity     HÇD$    Ã    "".~r0  type.int   F  TgclocalsÂ·a7a3692b8e27e823add69ec4239ba55f TgclocalsÂ·3280bececceccd33cb74587feedb1f9f   ®F:/WorkProjects/GoProjects/m_api/src/github.com/syndtr/goleveldb/leveldb/opt/options.goþ"".noCache.Used     HÇD$    Ã    "".~r0  type.int   H  TgclocalsÂ·a7a3692b8e27e823add69ec4239ba55f TgclocalsÂ·3280bececceccd33cb74587feedb1f9f   ®F:/WorkProjects/GoProjects/m_api/src/github.com/syndtr/goleveldb/leveldb/opt/options.goþ"".noCache.Size     HÇD$    Ã    "".~r0  type.int   J  TgclocalsÂ·a7a3692b8e27e823add69ec4239ba55f TgclocalsÂ·3280bececceccd33cb74587feedb1f9f   ®F:/WorkProjects/GoProjects/m_api/src/github.com/syndtr/goleveldb/leveldb/opt/options.goþ*"".noCache.NumObjects     HÇD$    Ã    "".~r0  type.int   L  TgclocalsÂ·a7a3692b8e27e823add69ec4239ba55f TgclocalsÂ·3280bececceccd33cb74587feedb1f9f   ®F:/WorkProjects/GoProjects/m_api/src/github.com/syndtr/goleveldb/leveldb/opt/options.goþ."".noCache.GetNamespace  @  &HÇD$    HÇD$    Ã 0   "".~r1 ptype.github.com/syndtr/goleveldb/leveldb/cache.Namespace 
"".id  type.uint64     N   TgclocalsÂ·a73fd2a0c6f832642aa9216fd9c5e6be TgclocalsÂ·3280bececceccd33cb74587feedb1f9f   ®F:/WorkProjects/GoProjects/m_api/src/github.com/syndtr/goleveldb/leveldb/opt/options.goþ2"".noCache.PurgeNamespace     Ã     "".fin ntype.github.com/syndtr/goleveldb/leveldb/cache.PurgeFin 
"".id  type.uint64   P  TgclocalsÂ·a037fff0187c50f783b94becc61a2c3d TgclocalsÂ·3280bececceccd33cb74587feedb1f9f   ®F:/WorkProjects/GoProjects/m_api/src/github.com/syndtr/goleveldb/leveldb/opt/options.goþ."".noCache.ZapNamespace     Ã    
"".id  type.uint64   R  TgclocalsÂ·5d05a78f811f5c3f62710534cdce0004 TgclocalsÂ·3280bececceccd33cb74587feedb1f9f   ®F:/WorkProjects/GoProjects/m_api/src/github.com/syndtr/goleveldb/leveldb/opt/options.goþ "".noCache.Purge     Ã    "".fin  ntype.github.com/syndtr/goleveldb/leveldb/cache.PurgeFin   T  TgclocalsÂ·519efd86263089ddb84df3cfe7fd2992 TgclocalsÂ·3280bececceccd33cb74587feedb1f9f   ®F:/WorkProjects/GoProjects/m_api/src/github.com/syndtr/goleveldb/leveldb/opt/options.goþ"".noCache.Zap     Ã        V  TgclocalsÂ·3280bececceccd33cb74587feedb1f9f TgclocalsÂ·3280bececceccd33cb74587feedb1f9f   ®F:/WorkProjects/GoProjects/m_api/src/github.com/syndtr/goleveldb/leveldb/opt/options.goþ*"".Compression.String    öHD$Hø uH    H+Hl$HkHl$ÃHøuH    H+Hl$HkHl$ÃHøuH    H+Hl$HkHl$ÃH    H+Hl$HkHl$Ã  &go.string."default"   Z   go.string."none"     $go.string."snappy"   Ê  &go.string."invalid"   0   "".~r0 type.string "".c  &type."".Compression   "f  TgclocalsÂ·a73fd2a0c6f832642aa9216fd9c5e6be TgclocalsÂ·3280bececceccd33cb74587feedb1f9f   ®F:/WorkProjects/GoProjects/m_api/src/github.com/syndtr/goleveldb/leveldb/opt/options.goþ6"".(*Options).GetAltFilters     HD$1íH9èuHÇD$    HÇD$    HÇD$     ÃHø tH(Hl$HhHl$HhHl$ Ã ëá @   "".~r0 ptype.[]github.com/syndtr/goleveldb/leveldb/filter.Filter "".o   type.*"".Options P P ú(  TgclocalsÂ·13d3af77a5bf02af6db4588efb2ea811 TgclocalsÂ·3280bececceccd33cb74587feedb1f9f   ®F:/WorkProjects/GoProjects/m_api/src/github.com/syndtr/goleveldb/leveldb/opt/options.goþ6"".(*Options).GetBlockCache    xHD$1íH9èuHÇD$    HÇD$    ÃHø tHhHl$Hh Hl$Ã ëé 0   "".~r0 htype.github.com/syndtr/goleveldb/leveldb/cache.Cache "".o   type.*"".Options @ @ !  TgclocalsÂ·a08e9001cb8f9d822225de3b8e406515 TgclocalsÂ·3280bececceccd33cb74587feedb1f9f   ®F:/WorkProjects/GoProjects/m_api/src/github.com/syndtr/goleveldb/leveldb/opt/options.goþJ"".(*Options).GetBlockRestartInterval  `  THD$1íH9ètHX(Hû ~
Hh(Hl$ÃHÇD$   Ã     "".~r0 type.int "".o   type.*"".Options 0 0 
  TgclocalsÂ·06cab038d51064a089bda21fa03e00f7 TgclocalsÂ·3280bececceccd33cb74587feedb1f9f   ®F:/WorkProjects/GoProjects/m_api/src/github.com/syndtr/goleveldb/leveldb/opt/options.goþ4"".(*Options).GetBlockSize  `  THD$1íH9ètHX0Hû ~
Hh0Hl$ÃHÇD$   Ã     "".~r0 type.int "".o   type.*"".Options 0 0 ¤
  TgclocalsÂ·06cab038d51064a089bda21fa03e00f7 TgclocalsÂ·3280bececceccd33cb74587feedb1f9f   ®F:/WorkProjects/GoProjects/m_api/src/github.com/syndtr/goleveldb/leveldb/opt/options.goþ@"".(*Options).GetCachedOpenFiles    |HD$1íH9èt(HX8Hû tHX8Hû }
HÇD$    ÃHh8Hl$ÃHÇD$ô  Ã     "".~r0 type.int "".o   type.*"".Options @ @ ²


  TgclocalsÂ·06cab038d51064a089bda21fa03e00f7 TgclocalsÂ·3280bececceccd33cb74587feedb1f9f   ®F:/WorkProjects/GoProjects/m_api/src/github.com/syndtr/goleveldb/leveldb/opt/options.goþ2"".(*Options).GetComparer  à  ÔeH%(   H    H;awè    ëãHì0HD$8HÇD$@    HÇD$H    1íH9ètHx@ tHh@Hl$@HhHHl$HHÄ0ÃH    H$H    H\$H    H\$H    H\$è    H\$ H\$@H\$(H\$HHÄ0Ã      .  0runtime.morestack_noctxt   À  ~type.github.com/syndtr/goleveldb/leveldb/comparer.bytesComparer   Ö  ttype.github.com/syndtr/goleveldb/leveldb/comparer.Comparer   î  ðgo.itab.github.com/syndtr/goleveldb/leveldb/comparer.bytesComparer.github.com/syndtr/goleveldb/leveldb/comparer.Comparer     xgithub.com/syndtr/goleveldb/leveldb/comparer.DefaultComparer     runtime.convT2I   0`  "".~r0 ttype.github.com/syndtr/goleveldb/leveldb/comparer.Comparer "".o   type.*"".Options !`;_`L_ ° Ä8S  $ TgclocalsÂ·a08e9001cb8f9d822225de3b8e406515 TgclocalsÂ·3280bececceccd33cb74587feedb1f9f   ®F:/WorkProjects/GoProjects/m_api/src/github.com/syndtr/goleveldb/leveldb/opt/options.goþ8"".(*Options).GetCompression    hHD$1íH9ètHXPHû vHXPHûs
HhPHl$ÃHÇD$   Ã     "".~r0 &type."".Compression "".o   type.*"".Options @ @ Ò
  TgclocalsÂ·06cab038d51064a089bda21fa03e00f7 TgclocalsÂ·3280bececceccd33cb74587feedb1f9f   ®F:/WorkProjects/GoProjects/m_api/src/github.com/syndtr/goleveldb/leveldb/opt/options.goþ:"".(*Options).GetErrorIfExist  @  8HD$1íH9èuÆD$ Ã¶hX@l$Ã     "".~r0 type.bool "".o   type.*"".Options     à  TgclocalsÂ·06cab038d51064a089bda21fa03e00f7 TgclocalsÂ·3280bececceccd33cb74587feedb1f9f   ®F:/WorkProjects/GoProjects/m_api/src/github.com/syndtr/goleveldb/leveldb/opt/options.goþ>"".(*Options).GetErrorIfMissing  @  8HD$1íH9èuÆD$ Ã¶hY@l$Ã     "".~r0 type.bool "".o   type.*"".Options     î  TgclocalsÂ·06cab038d51064a089bda21fa03e00f7 TgclocalsÂ·3280bececceccd33cb74587feedb1f9f   ®F:/WorkProjects/GoProjects/m_api/src/github.com/syndtr/goleveldb/leveldb/opt/options.goþ."".(*Options).GetFilter    xHD$1íH9èuHÇD$    HÇD$    ÃHø tHh`Hl$HhhHl$Ã ëé 0   "".~r0 ltype.github.com/syndtr/goleveldb/leveldb/filter.Filter "".o   type.*"".Options @ @ ü!  TgclocalsÂ·a08e9001cb8f9d822225de3b8e406515 TgclocalsÂ·3280bececceccd33cb74587feedb1f9f   ®F:/WorkProjects/GoProjects/m_api/src/github.com/syndtr/goleveldb/leveldb/opt/options.goþ."".(*Options).GetStrict     HL$HD$1íH9èt$HXpHû tHXpH!ËHû uÆD$ ÃÆD$ëøHËHãHû uÆD$ ÃÆD$ëø 0   "".~r1  type.bool "".strict type."".Strict "".o   type.*"".Options P P 
  TgclocalsÂ·64b411f0f44be3f38c26e84fc3239091 TgclocalsÂ·3280bececceccd33cb74587feedb1f9f   ®F:/WorkProjects/GoProjects/m_api/src/github.com/syndtr/goleveldb/leveldb/opt/options.goþ8"".(*Options).GetWriteBuffer  `  THD$1íH9ètHXxHû ~
HhxHl$ÃHÇD$  @ Ã     "".~r0 type.int "".o   type.*"".Options 0 0 
  TgclocalsÂ·06cab038d51064a089bda21fa03e00f7 TgclocalsÂ·3280bececceccd33cb74587feedb1f9f   ®F:/WorkProjects/GoProjects/m_api/src/github.com/syndtr/goleveldb/leveldb/opt/options.goþD"".(*ReadOptions).GetDontFillCache  @  6HD$1íH9èuÆD$ Ã¶(@l$Ã     "".~r0 type.bool 
"".ro  (type.*"".ReadOptions     Ä  TgclocalsÂ·06cab038d51064a089bda21fa03e00f7 TgclocalsÂ·3280bececceccd33cb74587feedb1f9f   ®F:/WorkProjects/GoProjects/m_api/src/github.com/syndtr/goleveldb/leveldb/opt/options.goþ6"".(*ReadOptions).GetStrict    bHD$1íH9èuÆD$ ÃHXHl$H!ëHû uÆD$ ÃÆD$ëø 0   "".~r1  type.bool "".strict type."".Strict 
"".ro  (type.*"".ReadOptions @ @ Ò.  TgclocalsÂ·64b411f0f44be3f38c26e84fc3239091 TgclocalsÂ·3280bececceccd33cb74587feedb1f9f   ®F:/WorkProjects/GoProjects/m_api/src/github.com/syndtr/goleveldb/leveldb/opt/options.goþ4"".(*WriteOptions).GetSync  @  6HD$1íH9èuÆD$ Ã¶(@l$Ã     "".~r0 type.bool 
"".wo  *type.*"".WriteOptions       TgclocalsÂ·06cab038d51064a089bda21fa03e00f7 TgclocalsÂ·3280bececceccd33cb74587feedb1f9f   ®F:/WorkProjects/GoProjects/m_api/src/github.com/syndtr/goleveldb/leveldb/opt/options.goþ"".init     eH%(   H    H;awè    ëãHì0¶    û t¶    ûuHÄ0Ãè    Æ    è    è    è    H\$0H    H$H    H\$H    H\$H\$0H\$è    H\$ Hl$HïHÞH¥H¥H    H$è    Æ    HÄ0Ã       .  0runtime.morestack_noctxt   H  "".initdoneÂ·   `  "".initdoneÂ·   ~  "runtime.throwinit    "".initdoneÂ·     ^github.com/syndtr/goleveldb/leveldb/filter.init   ¤  bgithub.com/syndtr/goleveldb/leveldb/comparer.init   ®  \github.com/syndtr/goleveldb/leveldb/cache.init   Æ  type."".noCache   Ü  htype.github.com/syndtr/goleveldb/leveldb/cache.Cache   ô  go.itab."".noCache.github.com/syndtr/goleveldb/leveldb/cache.Cache     runtime.convT2I   Ò  "".NoCache   ä  2runtime.writebarrieriface   ð "".initdoneÂ·    `  "".autotmp_0001  type."".noCache !`_`_ Ð [³[´  > TgclocalsÂ·3280bececceccd33cb74587feedb1f9f TgclocalsÂ·3280bececceccd33cb74587feedb1f9f   ®F:/WorkProjects/GoProjects/m_api/src/github.com/syndtr/goleveldb/leveldb/opt/options.goþ0"".(*Compression).String     eH%(   H    H;awè    ëãHì0HY HÛtH|$8H9;uH#HÇD$@    HÇD$H    H\$81íH9ëuHH    H,$HïHÞH¥H¥H    Hl$HïHÞH¥H¥H    Hl$ HïHÞH¥H¥è    H\$8H+H,$è    HL$HD$HL$@HD$HHÄ0Ã      .  0runtime.morestack_noctxt   °  go.string."opt"   Ú  .go.string."Compression"     $go.string."String"   ®  "runtime.panicwrap   Ô  *"".Compression.String   0`  "".~r0 type.string ""..this  (type.*"".Compression !`¥_
 Ð Ð  : TgclocalsÂ·a08e9001cb8f9d822225de3b8e406515 TgclocalsÂ·3280bececceccd33cb74587feedb1f9f   <autogenerated>þ2type..hash."".ReadOptions À  ¸eH%(   H    H;awè    ëãHì H\$(H$H<$ tbHÇD$   H\$8H\$è    HD$H\$(H$H<$ t,H$HÇD$   HD$8HD$è    H\$H\$@HÄ Ã%    ëË%    ë      .  0runtime.morestack_noctxt     runtime.memhash   î  runtime.memhash   @@  
"".autotmp_0004  type.uintptr "".~r3 0type.uintptr "".h  type.uintptr "".s type.uintptr "".p  (type.*"".ReadOptions !@h?@     
 D\ TgclocalsÂ·2dc77d960dd3e4b3de2361f9cbd75783 TgclocalsÂ·3280bececceccd33cb74587feedb1f9f   ®F:/WorkProjects/GoProjects/m_api/src/github.com/syndtr/goleveldb/leveldb/opt/options.goþ.type..eq."".ReadOptions   hHL$HD$¶¶(@8ëtÆD$  ÃHYHhH9ëtÆD$  ÃÆD$ Ã @   "".~r3 0type.bool "".s  type.uintptr "".q (type.*"".ReadOptions "".p  (type.*"".ReadOptions @ @ @  TgclocalsÂ·9c703c5c7b9c1932c840b69f8ebce236 TgclocalsÂ·3280bececceccd33cb74587feedb1f9f   ®F:/WorkProjects/GoProjects/m_api/src/github.com/syndtr/goleveldb/leveldb/opt/options.goþ2"".(*noCache).SetCapacity à  ÌeH%(   H    H;awè    ëãHì0HY HÛtH|$8H9;uH#H\$81íH9ëuHH    H,$HïHÞH¥H¥H    Hl$HïHÞH¥H¥H    Hl$ HïHÞH¥H¥è    H|$8 t
H\$@HÄ0Ã%    ëí      .  0runtime.morestack_noctxt     go.string."opt"   ¶  &go.string."noCache"   â  .go.string."SetCapacity"     "runtime.panicwrap    `  "".capacity type.int ""..this   type.*"".noCache !`{_` ° °  , TgclocalsÂ·cd30d2bcfdea04ed7c49639580b4bd08 TgclocalsÂ·3280bececceccd33cb74587feedb1f9f   <autogenerated>þ,"".(*noCache).Capacity à  ÐeH%(   H    H;awè    ëãHì0HY HÛtH|$8H9;uH#H\$81íH9ëuHH    H,$HïHÞH¥H¥H    Hl$HïHÞH¥H¥H    Hl$ HïHÞH¥H¥è    H|$8 t1ÀHD$@HÄ0Ã%    ëë      .  0runtime.morestack_noctxt     go.string."opt"   ¶  &go.string."noCache"   â  (go.string."Capacity"     "runtime.panicwrap    `  "".~r0 type.int ""..this   type.*"".noCache !`}_` ° °  , TgclocalsÂ·06cab038d51064a089bda21fa03e00f7 TgclocalsÂ·3280bececceccd33cb74587feedb1f9f   <autogenerated>þ$"".(*noCache).Used à  ÐeH%(   H    H;awè    ëãHì0HY HÛtH|$8H9;uH#H\$81íH9ëuHH    H,$HïHÞH¥H¥H    Hl$HïHÞH¥H¥H    Hl$ HïHÞH¥H¥è    H|$8 t1ÀHD$@HÄ0Ã%    ëë      .  0runtime.morestack_noctxt     go.string."opt"   ¶  &go.string."noCache"   â   go.string."Used"     "runtime.panicwrap    `  "".~r0 type.int ""..this   type.*"".noCache !`}_` ° 
°  , TgclocalsÂ·06cab038d51064a089bda21fa03e00f7 TgclocalsÂ·3280bececceccd33cb74587feedb1f9f   <autogenerated>þ$"".(*noCache).Size à  ÐeH%(   H    H;awè    ëãHì0HY HÛtH|$8H9;uH#H\$81íH9ëuHH    H,$HïHÞH¥H¥H    Hl$HïHÞH¥H¥H    Hl$ HïHÞH¥H¥è    H|$8 t1ÀHD$@HÄ0Ã%    ëë      .  0runtime.morestack_noctxt     go.string."opt"   ¶  &go.string."noCache"   â   go.string."Size"     "runtime.panicwrap    `  "".~r0 type.int ""..this   type.*"".noCache !`}_` ° °  , TgclocalsÂ·06cab038d51064a089bda21fa03e00f7 TgclocalsÂ·3280bececceccd33cb74587feedb1f9f   <autogenerated>þ0"".(*noCache).NumObjects à  ÐeH%(   H    H;awè    ëãHì0HY HÛtH|$8H9;uH#H\$81íH9ëuHH    H,$HïHÞH¥H¥H    Hl$HïHÞH¥H¥H    Hl$ HïHÞH¥H¥è    H|$8 t1ÀHD$@HÄ0Ã%    ëë      .  0runtime.morestack_noctxt     go.string."opt"   ¶  &go.string."noCache"   â  ,go.string."NumObjects"     "runtime.panicwrap    `  "".~r0 type.int ""..this   type.*"".noCache !`}_` ° °  , TgclocalsÂ·06cab038d51064a089bda21fa03e00f7 TgclocalsÂ·3280bececceccd33cb74587feedb1f9f   <autogenerated>þ4"".(*noCache).GetNamespace   èeH%(   H    H;awè    ëãHì0HY HÛtH|$8H9;uH#H\$81íH9ëuHH    H,$HïHÞH¥H¥H    Hl$HïHÞH¥H¥H    Hl$ HïHÞH¥H¥è    H|$8 tH\$@1É1ÀHL$HHD$PHÄ0Ã%    ëß      .  0runtime.morestack_noctxt     go.string."opt"   ¶  &go.string."noCache"   â  0go.string."GetNamespace"     "runtime.panicwrap   @`  "".~r1  ptype.github.com/syndtr/goleveldb/leveldb/cache.Namespace 
"".id type.uint64 ""..this   type.*"".noCache !`_` À À  < TgclocalsÂ·6a2e5ab2d393a1bfd331903fbd0fd425 TgclocalsÂ·3280bececceccd33cb74587feedb1f9f   <autogenerated>þ8"".(*noCache).PurgeNamespace à  ÖeH%(   H    H;awè    ëãHì0HY HÛtH|$8H9;uH#H\$81íH9ëuHH    H,$HïHÞH¥H¥H    Hl$HïHÞH¥H¥H    Hl$ HïHÞH¥H¥è    H|$8 tH\$@H\$HHÄ0Ã%    ëè      .  0runtime.morestack_noctxt     go.string."opt"   ¶  &go.string."noCache"   â  4go.string."PurgeNamespace"     "runtime.panicwrap   0`  "".fin  ntype.github.com/syndtr/goleveldb/leveldb/cache.PurgeFin 
"".id type.uint64 ""..this   type.*"".noCache !`_` ° °  , TgclocalsÂ·c34189e3b824b0bbe5cf2ca4e567d435 TgclocalsÂ·3280bececceccd33cb74587feedb1f9f   <autogenerated>þ4"".(*noCache).ZapNamespace à  ÌeH%(   H    H;awè    ëãHì0HY HÛtH|$8H9;uH#H\$81íH9ëuHH    H,$HïHÞH¥H¥H    Hl$HïHÞH¥H¥H    Hl$ HïHÞH¥H¥è    H|$8 t
H\$@HÄ0Ã%    ëí      .  0runtime.morestack_noctxt     go.string."opt"   ¶  &go.string."noCache"   â  0go.string."ZapNamespace"     "runtime.panicwrap    `  
"".id type.uint64 ""..this   type.*"".noCache !`{_` ° °  , TgclocalsÂ·cd30d2bcfdea04ed7c49639580b4bd08 TgclocalsÂ·3280bececceccd33cb74587feedb1f9f   <autogenerated>þ&"".(*noCache).Purge à  ÌeH%(   H    H;awè    ëãHì0HY HÛtH|$8H9;uH#H\$81íH9ëuHH    H,$HïHÞH¥H¥H    Hl$HïHÞH¥H¥H    Hl$ HïHÞH¥H¥è    H|$8 t
H\$@HÄ0Ã%    ëí      .  0runtime.morestack_noctxt     go.string."opt"   ¶  &go.string."noCache"   â  "go.string."Purge"     "runtime.panicwrap    `  "".fin ntype.github.com/syndtr/goleveldb/leveldb/cache.PurgeFin ""..this   type.*"".noCache !`{_` ° °  , TgclocalsÂ·e8c55b930b09fa5028b5e4b78b8932dc TgclocalsÂ·3280bececceccd33cb74587feedb1f9f   <autogenerated>þ""".(*noCache).Zap à  ÂeH%(   H    H;awè    ëãHì0HY HÛtH|$8H9;uH#H\$81íH9ëuHH    H,$HïHÞH¥H¥H    Hl$HïHÞH¥H¥H    Hl$ HïHÞH¥H¥è    H|$8 tHÄ0Ã%    ëò      .  0runtime.morestack_noctxt     go.string."opt"   ¶  &go.string."noCache"   â  go.string."Zap"     "runtime.panicwrap   `  ""..this   type.*"".noCache !`v_` ° °  , TgclocalsÂ·519efd86263089ddb84df3cfe7fd2992 TgclocalsÂ·3280bececceccd33cb74587feedb1f9f   <autogenerated>þTgclocalsÂ·3280bececceccd33cb74587feedb1f9f           þTgclocalsÂ·5d05a78f811f5c3f62710534cdce0004             þTgclocalsÂ·3280bececceccd33cb74587feedb1f9f           þTgclocalsÂ·a7a3692b8e27e823add69ec4239ba55f              þTgclocalsÂ·3280bececceccd33cb74587feedb1f9f           þTgclocalsÂ·a7a3692b8e27e823add69ec4239ba55f              þTgclocalsÂ·3280bececceccd33cb74587feedb1f9f           þTgclocalsÂ·a7a3692b8e27e823add69ec4239ba55f              þTgclocalsÂ·3280bececceccd33cb74587feedb1f9f           þTgclocalsÂ·a7a3692b8e27e823add69ec4239ba55f              þTgclocalsÂ·3280bececceccd33cb74587feedb1f9f           þTgclocalsÂ·a73fd2a0c6f832642aa9216fd9c5e6be             þTgclocalsÂ·3280bececceccd33cb74587feedb1f9f           þTgclocalsÂ·a037fff0187c50f783b94becc61a2c3d         	    þTgclocalsÂ·3280bececceccd33cb74587feedb1f9f           þTgclocalsÂ·5d05a78f811f5c3f62710534cdce0004             þTgclocalsÂ·3280bececceccd33cb74587feedb1f9f           þTgclocalsÂ·519efd86263089ddb84df3cfe7fd2992             þTgclocalsÂ·3280bececceccd33cb74587feedb1f9f           þTgclocalsÂ·3280bececceccd33cb74587feedb1f9f           þ&go.string."default" 0  0               default    &go.string."default"   þ go.string."none" 0  *               none     go.string."none"   þ$go.string."snappy" 0  .               snappy    $go.string."snappy"   þ&go.string."invalid" 0  0               invalid    &go.string."invalid"   þTgclocalsÂ·3280bececceccd33cb74587feedb1f9f           þTgclocalsÂ·a73fd2a0c6f832642aa9216fd9c5e6be             þTgclocalsÂ·3280bececceccd33cb74587feedb1f9f           þTgclocalsÂ·13d3af77a5bf02af6db4588efb2ea811             þTgclocalsÂ·3280bececceccd33cb74587feedb1f9f           þTgclocalsÂ·a08e9001cb8f9d822225de3b8e406515             þTgclocalsÂ·3280bececceccd33cb74587feedb1f9f           þTgclocalsÂ·06cab038d51064a089bda21fa03e00f7             þTgclocalsÂ·3280bececceccd33cb74587feedb1f9f           þTgclocalsÂ·06cab038d51064a089bda21fa03e00f7             þTgclocalsÂ·3280bececceccd33cb74587feedb1f9f           þTgclocalsÂ·06cab038d51064a089bda21fa03e00f7             þ,ðgo.itab.github.com/syndtr/goleveldb/leveldb/comparer.bytesComparer.github.com/syndtr/goleveldb/leveldb/comparer.Comparer     þTgclocalsÂ·3280bececceccd33cb74587feedb1f9f           þTgclocalsÂ·a08e9001cb8f9d822225de3b8e406515             þTgclocalsÂ·3280bececceccd33cb74587feedb1f9f           þTgclocalsÂ·06cab038d51064a089bda21fa03e00f7             þTgclocalsÂ·3280bececceccd33cb74587feedb1f9f           þTgclocalsÂ·06cab038d51064a089bda21fa03e00f7             þTgclocalsÂ·3280bececceccd33cb74587feedb1f9f           þTgclocalsÂ·06cab038d51064a089bda21fa03e00f7             þTgclocalsÂ·3280bececceccd33cb74587feedb1f9f           þTgclocalsÂ·a08e9001cb8f9d822225de3b8e406515             þTgclocalsÂ·3280bececceccd33cb74587feedb1f9f           þTgclocalsÂ·64b411f0f44be3f38c26e84fc3239091             þTgclocalsÂ·3280bececceccd33cb74587feedb1f9f           þTgclocalsÂ·06cab038d51064a089bda21fa03e00f7             þTgclocalsÂ·3280bececceccd33cb74587feedb1f9f           þTgclocalsÂ·06cab038d51064a089bda21fa03e00f7             þTgclocalsÂ·3280bececceccd33cb74587feedb1f9f           þTgclocalsÂ·64b411f0f44be3f38c26e84fc3239091             þTgclocalsÂ·3280bececceccd33cb74587feedb1f9f           þTgclocalsÂ·06cab038d51064a089bda21fa03e00f7             þ,go.itab."".noCache.github.com/syndtr/goleveldb/leveldb/cache.Cache     þTgclocalsÂ·3280bececceccd33cb74587feedb1f9f           þTgclocalsÂ·3280bececceccd33cb74587feedb1f9f           þ*"".NoCache   htype.github.com/syndtr/goleveldb/leveldb/cache.Cache   þ,"".initdoneÂ·  type.uint8   þ2"".noCache.SetCapacityÂ·f              ,"".noCache.SetCapacity   þ,"".noCache.CapacityÂ·f              &"".noCache.Capacity   þ,runtime.throwreturnÂ·f              &runtime.throwreturn   þ$"".noCache.UsedÂ·f              "".noCache.Used   þ$"".noCache.SizeÂ·f              "".noCache.Size   þ0"".noCache.NumObjectsÂ·f              *"".noCache.NumObjects   þ4"".noCache.GetNamespaceÂ·f              ."".noCache.GetNamespace   þ8"".noCache.PurgeNamespaceÂ·f              2"".noCache.PurgeNamespace   þ4"".noCache.ZapNamespaceÂ·f              ."".noCache.ZapNamespace   þ&"".noCache.PurgeÂ·f               "".noCache.Purge   þ""".noCache.ZapÂ·f              "".noCache.Zap   þ0"".Compression.StringÂ·f              *"".Compression.String   þ<"".(*Options).GetAltFiltersÂ·f              6"".(*Options).GetAltFilters   þ<"".(*Options).GetBlockCacheÂ·f              6"".(*Options).GetBlockCache   þP"".(*Options).GetBlockRestartIntervalÂ·f              J"".(*Options).GetBlockRestartInterval   þ:"".(*Options).GetBlockSizeÂ·f              4"".(*Options).GetBlockSize   þF"".(*Options).GetCachedOpenFilesÂ·f              @"".(*Options).GetCachedOpenFiles   þ8"".(*Options).GetComparerÂ·f              2"".(*Options).GetComparer   þ$runtime.convT2IÂ·f              runtime.convT2I   þ>"".(*Options).GetCompressionÂ·f              8"".(*Options).GetCompression   þ@"".(*Options).GetErrorIfExistÂ·f              :"".(*Options).GetErrorIfExist   þD"".(*Options).GetErrorIfMissingÂ·f              >"".(*Options).GetErrorIfMissing   þ4"".(*Options).GetFilterÂ·f              ."".(*Options).GetFilter   þ4"".(*Options).GetStrictÂ·f              ."".(*Options).GetStrict   þ>"".(*Options).GetWriteBufferÂ·f              8"".(*Options).GetWriteBuffer   þJ"".(*ReadOptions).GetDontFillCacheÂ·f              D"".(*ReadOptions).GetDontFillCache   þ<"".(*ReadOptions).GetStrictÂ·f              6"".(*ReadOptions).GetStrict   þ:"".(*WriteOptions).GetSyncÂ·f              4"".(*WriteOptions).GetSync   þ"".initÂ·f              "".init   þ(runtime.throwinitÂ·f              "runtime.throwinit   þdgithub.com/syndtr/goleveldb/leveldb/filter.initÂ·f              ^github.com/syndtr/goleveldb/leveldb/filter.init   þhgithub.com/syndtr/goleveldb/leveldb/comparer.initÂ·f              bgithub.com/syndtr/goleveldb/leveldb/comparer.init   þbgithub.com/syndtr/goleveldb/leveldb/cache.initÂ·f              \github.com/syndtr/goleveldb/leveldb/cache.init   þ8runtime.writebarrierifaceÂ·f              2runtime.writebarrieriface   þbruntime.gcbits.0x88000000000000000000000000000000                     þ8go.string."*opt.Compression" P  B               *opt.Compression    8go.string."*opt.Compression"   þgo.string."opt" 0  (               opt    go.string."opt"   þ.go.string."Compression" @  8               Compression    .go.string."Compression"   þ$go.string."String" 0  .               String    $go.string."String"   þTgclocalsÂ·3280bececceccd33cb74587feedb1f9f           þTgclocalsÂ·a08e9001cb8f9d822225de3b8e406515             þRgo.string."func(*opt.Compression) string" `  \               func(*opt.Compression) string    Rgo.string."func(*opt.Compression) string"   þBtype.func(*"".Compression) string            «>© 3                                                                                                                               runtime.algarray   0  bruntime.gcbits.0x88000000000000000000000000000000   P  Rgo.string."func(*opt.Compression) string"   p  Tgo.weak.type.*func(*"".Compression) string     "runtime.zerovalue     Btype.func(*"".Compression) string   Ð Btype.func(*"".Compression) string     (type.*"".Compression     type.string   þ2go.string."func() string" @  <               func() string    2go.string."func() string"   þ$type.func() string          ¢mË 3                                                                                                                         runtime.algarray   0  bruntime.gcbits.0x88000000000000000000000000000000   P  2go.string."func() string"   p  6go.weak.type.*func() string     "runtime.zerovalue     $type.func() string   Ð $type.func() string     type.string   þ(type.*"".Compression  Ð  Ð       íL 6                                                                                                                                                          runtime.algarray   0  bruntime.gcbits.0x88000000000000000000000000000000   P  8go.string."*opt.Compression"   p  :go.weak.type.**"".Compression     "runtime.zerovalue     &type."".Compression   `  (type.*"".Compression   Àð (type.*"".Compression   ð  $go.string."String"     $type.func() string      Btype.func(*"".Compression) string   °  0"".(*Compression).String   À  0"".(*Compression).String   þ^runtime.gcbits.0x000000000000000000000000000000                      þ6go.string."opt.Compression" @  @               opt.Compression    6go.string."opt.Compression"   þPgo.string."func(opt.Compression) string" `  Z               func(opt.Compression) string    Pgo.string."func(opt.Compression) string"   þ@type.func("".Compression) string            êM 3                                                                                                                               runtime.algarray   0  bruntime.gcbits.0x88000000000000000000000000000000   P  Pgo.string."func(opt.Compression) string"   p  Rgo.weak.type.*func("".Compression) string     "runtime.zerovalue     @type.func("".Compression) string   Ð @type.func("".Compression) string     &type."".Compression     type.string   þ&type."".Compression  À  À       û+F                                                                                                                                                    runtime.algarray   0  ^runtime.gcbits.0x000000000000000000000000000000   P  6go.string."opt.Compression"   p  (type.*"".Compression     "runtime.zerovalue   ` &type."".Compression     .go.string."Compression"      "go.importpath."".   °à &type."".Compression   à  $go.string."String"     $type.func() string     @type.func("".Compression) string      0"".(*Compression).String   °  *"".Compression.String   þbruntime.gcbits.0x48844400000000000000000000000000     HD              þ6go.string."[]filter.Filter" @  @               []filter.Filter    6go.string."[]filter.Filter"   þptype.[]github.com/syndtr/goleveldb/leveldb/filter.Filter            ®¿S÷                                                                     runtime.algarray   0  bruntime.gcbits.0x48844400000000000000000000000000   P  6go.string."[]filter.Filter"   p  go.weak.type.*[]github.com/syndtr/goleveldb/leveldb/filter.Filter     "runtime.zerovalue     ltype.github.com/syndtr/goleveldb/leveldb/filter.Filter   þgo.typelink.[]filter.Filter/[]github.com/syndtr/goleveldb/leveldb/filter.Filter              ptype.[]github.com/syndtr/goleveldb/leveldb/filter.Filter   þ.go.string."*opt.Strict" @  8               *opt.Strict    .go.string."*opt.Strict"   þtype.*"".Strict             ñLÔ 6                                                                    runtime.algarray   0  bruntime.gcbits.0x88000000000000000000000000000000   P  .go.string."*opt.Strict"   p  0go.weak.type.**"".Strict     "runtime.zerovalue     type."".Strict   þ,go.string."opt.Strict" @  6        
       opt.Strict    ,go.string."opt.Strict"   þ$go.string."Strict" 0  .               Strict    $go.string."Strict"   þtype."".Strict  à  à       Æ¦Ö                                                                                                     runtime.algarray   0  ^runtime.gcbits.0x000000000000000000000000000000   P  ,go.string."opt.Strict"   p  type.*"".Strict     "runtime.zerovalue   ` type."".Strict     $go.string."Strict"      "go.importpath."".   °à type."".Strict   þbruntime.gcbits.0x48c448448c448c440000000000000000     HÄHDDD         þ.go.string."opt.Options" @  8               opt.Options    .go.string."opt.Options"   þ,go.string."AltFilters" @  6        
       AltFilters    ,go.string."AltFilters"   þ,go.string."BlockCache" @  6        
       BlockCache    ,go.string."BlockCache"   þ@go.string."BlockRestartInterval" P  J               BlockRestartInterval    @go.string."BlockRestartInterval"   þ*go.string."BlockSize" @  4        	       BlockSize    *go.string."BlockSize"   þ6go.string."CachedOpenFiles" @  @               CachedOpenFiles    6go.string."CachedOpenFiles"   þ(go.string."Comparer" @  2               Comparer    (go.string."Comparer"   þ0go.string."ErrorIfExist" @  :               ErrorIfExist    0go.string."ErrorIfExist"   þ4go.string."ErrorIfMissing" @  >               ErrorIfMissing    4go.string."ErrorIfMissing"   þ$go.string."Filter" 0  .               Filter    $go.string."Filter"   þ.go.string."WriteBuffer" @  8               WriteBuffer    .go.string."WriteBuffer"   þ&go.string."Options" 0  0               Options    &go.string."Options"   þtype."".Options  Ð	  Ð	       ¸! 5                                                                                                                                                                                              (                                       0                                       8                                       @                                       P                                       X                                       Y                                       `                                       p                                       x                                               D à  runtime.algarray   0  bruntime.gcbits.0x48c448448c448c440000000000000000   P  .go.string."opt.Options"   p   type.*"".Options     "runtime.zerovalue   À type."".Options   À  ,go.string."AltFilters"   à  ptype.[]github.com/syndtr/goleveldb/leveldb/filter.Filter     ,go.string."BlockCache"   °  htype.github.com/syndtr/goleveldb/leveldb/cache.Cache   à  @go.string."BlockRestartInterval"     type.int   °  *go.string."BlockSize"   Ð  type.int     6go.string."CachedOpenFiles"      type.int   Ð  (go.string."Comparer"   ð  ttype.github.com/syndtr/goleveldb/leveldb/comparer.Comparer      .go.string."Compression"   À  &type."".Compression   ð  0go.string."ErrorIfExist"     type.bool   À  4go.string."ErrorIfMissing"   à  type.bool     $go.string."Filter"   °  ltype.github.com/syndtr/goleveldb/leveldb/filter.Filter   à  $go.string."Strict"     type."".Strict   °  .go.string."WriteBuffer"   Ð  type.int   `	 type."".Options   	  &go.string."Options"   	  "go.importpath."".    	Ð	 type."".Options   þ0go.string."*opt.Options" @  :               *opt.Options    0go.string."*opt.Options"   þ\go.string."func(*opt.Options) []filter.Filter" p  f        "       func(*opt.Options) []filter.Filter    \go.string."func(*opt.Options) []filter.Filter"   þtype.func(*"".Options) []github.com/syndtr/goleveldb/leveldb/filter.Filter            òj  3                                                                                                                               runtime.algarray   0  bruntime.gcbits.0x88000000000000000000000000000000   P  \go.string."func(*opt.Options) []filter.Filter"   p  ¦go.weak.type.*func(*"".Options) []github.com/syndtr/goleveldb/leveldb/filter.Filter     "runtime.zerovalue     type.func(*"".Options) []github.com/syndtr/goleveldb/leveldb/filter.Filter   Ð type.func(*"".Options) []github.com/syndtr/goleveldb/leveldb/filter.Filter      type.*"".Options     ptype.[]github.com/syndtr/goleveldb/leveldb/filter.Filter   þTgo.string."func(*opt.Options) cache.Cache" `  ^               func(*opt.Options) cache.Cache    Tgo.string."func(*opt.Options) cache.Cache"   þtype.func(*"".Options) github.com/syndtr/goleveldb/leveldb/cache.Cache            I 3                                                                                                                               runtime.algarray   0  bruntime.gcbits.0x88000000000000000000000000000000   P  Tgo.string."func(*opt.Options) cache.Cache"   p  go.weak.type.*func(*"".Options) github.com/syndtr/goleveldb/leveldb/cache.Cache     "runtime.zerovalue     type.func(*"".Options) github.com/syndtr/goleveldb/leveldb/cache.Cache   Ð type.func(*"".Options) github.com/syndtr/goleveldb/leveldb/cache.Cache      type.*"".Options     htype.github.com/syndtr/goleveldb/leveldb/cache.Cache   þDgo.string."func(*opt.Options) int" P  N               func(*opt.Options) int    Dgo.string."func(*opt.Options) int"   þ4type.func(*"".Options) int            % 3                                                                                                                               runtime.algarray   0  bruntime.gcbits.0x88000000000000000000000000000000   P  Dgo.string."func(*opt.Options) int"   p  Fgo.weak.type.*func(*"".Options) int     "runtime.zerovalue     4type.func(*"".Options) int   Ð 4type.func(*"".Options) int      type.*"".Options     type.int   þ`go.string."func(*opt.Options) comparer.Comparer" p  j        $       func(*opt.Options) comparer.Comparer    `go.string."func(*opt.Options) comparer.Comparer"   þtype.func(*"".Options) github.com/syndtr/goleveldb/leveldb/comparer.Comparer            ¡u> 3                                                                                                                               runtime.algarray   0  bruntime.gcbits.0x88000000000000000000000000000000   P  `go.string."func(*opt.Options) comparer.Comparer"   p  ªgo.weak.type.*func(*"".Options) github.com/syndtr/goleveldb/leveldb/comparer.Comparer     "runtime.zerovalue     type.func(*"".Options) github.com/syndtr/goleveldb/leveldb/comparer.Comparer   Ð type.func(*"".Options) github.com/syndtr/goleveldb/leveldb/comparer.Comparer      type.*"".Options     ttype.github.com/syndtr/goleveldb/leveldb/comparer.Comparer   þ\go.string."func(*opt.Options) opt.Compression" p  f        "       func(*opt.Options) opt.Compression    \go.string."func(*opt.Options) opt.Compression"   þJtype.func(*"".Options) "".Compression            m¢_ 3                                                                                                                               runtime.algarray   0  bruntime.gcbits.0x88000000000000000000000000000000   P  \go.string."func(*opt.Options) opt.Compression"   p  \go.weak.type.*func(*"".Options) "".Compression     "runtime.zerovalue     Jtype.func(*"".Options) "".Compression   Ð Jtype.func(*"".Options) "".Compression      type.*"".Options     &type."".Compression   þFgo.string."func(*opt.Options) bool" P  P               func(*opt.Options) bool    Fgo.string."func(*opt.Options) bool"   þ6type.func(*"".Options) bool            Êî 3                                                                                                                               runtime.algarray   0  bruntime.gcbits.0x88000000000000000000000000000000   P  Fgo.string."func(*opt.Options) bool"   p  Hgo.weak.type.*func(*"".Options) bool     "runtime.zerovalue     6type.func(*"".Options) bool   Ð 6type.func(*"".Options) bool      type.*"".Options     type.bool   þXgo.string."func(*opt.Options) filter.Filter" p  b                func(*opt.Options) filter.Filter    Xgo.string."func(*opt.Options) filter.Filter"   þtype.func(*"".Options) github.com/syndtr/goleveldb/leveldb/filter.Filter            Mß 3                                                                                                                               runtime.algarray   0  bruntime.gcbits.0x88000000000000000000000000000000   P  Xgo.string."func(*opt.Options) filter.Filter"   p  ¢go.weak.type.*func(*"".Options) github.com/syndtr/goleveldb/leveldb/filter.Filter     "runtime.zerovalue     type.func(*"".Options) github.com/syndtr/goleveldb/leveldb/filter.Filter   Ð type.func(*"".Options) github.com/syndtr/goleveldb/leveldb/filter.Filter      type.*"".Options     ltype.github.com/syndtr/goleveldb/leveldb/filter.Filter   þ^go.string."func(*opt.Options, opt.Strict) bool" p  h        #       func(*opt.Options, opt.Strict) bool    ^go.string."func(*opt.Options, opt.Strict) bool"   þLtype.func(*"".Options, "".Strict) bool °  °       Âk0, 3                                                                                                                                       runtime.algarray   0  bruntime.gcbits.0x88000000000000000000000000000000   P  ^go.string."func(*opt.Options, opt.Strict) bool"   p  ^go.weak.type.*func(*"".Options, "".Strict) bool     "runtime.zerovalue     Ltype.func(*"".Options, "".Strict) bool   Ð  Ltype.func(*"".Options, "".Strict) bool      type.*"".Options     type."".Strict      type.bool   þ2go.string."GetAltFilters" @  <               GetAltFilters    2go.string."GetAltFilters"   þDgo.string."func() []filter.Filter" P  N               func() []filter.Filter    Dgo.string."func() []filter.Filter"   þ~type.func() []github.com/syndtr/goleveldb/leveldb/filter.Filter          ®Ñ 3                                                                                                                         runtime.algarray   0  bruntime.gcbits.0x88000000000000000000000000000000   P  Dgo.string."func() []filter.Filter"   p  go.weak.type.*func() []github.com/syndtr/goleveldb/leveldb/filter.Filter     "runtime.zerovalue     ~type.func() []github.com/syndtr/goleveldb/leveldb/filter.Filter   Ð ~type.func() []github.com/syndtr/goleveldb/leveldb/filter.Filter     ptype.[]github.com/syndtr/goleveldb/leveldb/filter.Filter   þ2go.string."GetBlockCache" @  <               GetBlockCache    2go.string."GetBlockCache"   þ<go.string."func() cache.Cache" P  F               func() cache.Cache    <go.string."func() cache.Cache"   þvtype.func() github.com/syndtr/goleveldb/leveldb/cache.Cache          t²; 3                                                                                                                         runtime.algarray   0  bruntime.gcbits.0x88000000000000000000000000000000   P  <go.string."func() cache.Cache"   p  go.weak.type.*func() github.com/syndtr/goleveldb/leveldb/cache.Cache     "runtime.zerovalue     vtype.func() github.com/syndtr/goleveldb/leveldb/cache.Cache   Ð vtype.func() github.com/syndtr/goleveldb/leveldb/cache.Cache     htype.github.com/syndtr/goleveldb/leveldb/cache.Cache   þFgo.string."GetBlockRestartInterval" P  P               GetBlockRestartInterval    Fgo.string."GetBlockRestartInterval"   þ,go.string."func() int" @  6        
       func() int    ,go.string."func() int"   þtype.func() int          å9à 3                                                                                                                         runtime.algarray   0  bruntime.gcbits.0x88000000000000000000000000000000   P  ,go.string."func() int"   p  0go.weak.type.*func() int     "runtime.zerovalue     type.func() int   Ð type.func() int     type.int   þ0go.string."GetBlockSize" @  :               GetBlockSize    0go.string."GetBlockSize"   þ<go.string."GetCachedOpenFiles" P  F               GetCachedOpenFiles    <go.string."GetCachedOpenFiles"   þ.go.string."GetComparer" @  8               GetComparer    .go.string."GetComparer"   þHgo.string."func() comparer.Comparer" `  R               func() comparer.Comparer    Hgo.string."func() comparer.Comparer"   þtype.func() github.com/syndtr/goleveldb/leveldb/comparer.Comparer          JÑñ 3                                                                                                                         runtime.algarray   0  bruntime.gcbits.0x88000000000000000000000000000000   P  Hgo.string."func() comparer.Comparer"   p  go.weak.type.*func() github.com/syndtr/goleveldb/leveldb/comparer.Comparer     "runtime.zerovalue     type.func() github.com/syndtr/goleveldb/leveldb/comparer.Comparer   Ð type.func() github.com/syndtr/goleveldb/leveldb/comparer.Comparer     ttype.github.com/syndtr/goleveldb/leveldb/comparer.Comparer   þ4go.string."GetCompression" @  >               GetCompression    4go.string."GetCompression"   þDgo.string."func() opt.Compression" P  N               func() opt.Compression    Dgo.string."func() opt.Compression"   þ4type.func() "".Compression          ü­ 3                                                                                                                         runtime.algarray   0  bruntime.gcbits.0x88000000000000000000000000000000   P  Dgo.string."func() opt.Compression"   p  Fgo.weak.type.*func() "".Compression     "runtime.zerovalue     4type.func() "".Compression   Ð 4type.func() "".Compression     &type."".Compression   þ6go.string."GetErrorIfExist" @  @               GetErrorIfExist    6go.string."GetErrorIfExist"   þ.go.string."func() bool" @  8               func() bool    .go.string."func() bool"   þ type.func() bool          TËx 3                                                                                                                         runtime.algarray   0  bruntime.gcbits.0x88000000000000000000000000000000   P  .go.string."func() bool"   p  2go.weak.type.*func() bool     "runtime.zerovalue      type.func() bool   Ð  type.func() bool     type.bool   þ:go.string."GetErrorIfMissing" P  D               GetErrorIfMissing    :go.string."GetErrorIfMissing"   þ*go.string."GetFilter" @  4        	       GetFilter    *go.string."GetFilter"   þ@go.string."func() filter.Filter" P  J               func() filter.Filter    @go.string."func() filter.Filter"   þztype.func() github.com/syndtr/goleveldb/leveldb/filter.Filter          ^ 3                                                                                                                         runtime.algarray   0  bruntime.gcbits.0x88000000000000000000000000000000   P  @go.string."func() filter.Filter"   p  go.weak.type.*func() github.com/syndtr/goleveldb/leveldb/filter.Filter     "runtime.zerovalue     ztype.func() github.com/syndtr/goleveldb/leveldb/filter.Filter   Ð ztype.func() github.com/syndtr/goleveldb/leveldb/filter.Filter     ltype.github.com/syndtr/goleveldb/leveldb/filter.Filter   þ*go.string."GetStrict" @  4        	       GetStrict    *go.string."GetStrict"   þBgo.string."func(opt.Strict) bool" P  L               func(opt.Strict) bool    Bgo.string."func(opt.Strict) bool"   þ2type.func("".Strict) bool            cpah 3                                                                                                                               runtime.algarray   0  bruntime.gcbits.0x88000000000000000000000000000000   P  Bgo.string."func(opt.Strict) bool"   p  Dgo.weak.type.*func("".Strict) bool     "runtime.zerovalue     2type.func("".Strict) bool   Ð 2type.func("".Strict) bool     type."".Strict     type.bool   þ4go.string."GetWriteBuffer" @  >               GetWriteBuffer    4go.string."GetWriteBuffer"   þ type.*"".Options  ð
  ð
       3uÑ 6                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                          runtime.algarray   0  bruntime.gcbits.0x88000000000000000000000000000000   P  0go.string."*opt.Options"   p  2go.weak.type.**"".Options     "runtime.zerovalue     type."".Options   `   type.*"".Options   Àð  type.*"".Options   ð  2go.string."GetAltFilters"     ~type.func() []github.com/syndtr/goleveldb/leveldb/filter.Filter      type.func(*"".Options) []github.com/syndtr/goleveldb/leveldb/filter.Filter   °  6"".(*Options).GetAltFilters   À  6"".(*Options).GetAltFilters   Ð  2go.string."GetBlockCache"   ð  vtype.func() github.com/syndtr/goleveldb/leveldb/cache.Cache     type.func(*"".Options) github.com/syndtr/goleveldb/leveldb/cache.Cache     6"".(*Options).GetBlockCache      6"".(*Options).GetBlockCache   °  Fgo.string."GetBlockRestartInterval"   Ð  type.func() int   à  4type.func(*"".Options) int   ð  J"".(*Options).GetBlockRestartInterval     J"".(*Options).GetBlockRestartInterval     0go.string."GetBlockSize"   °  type.func() int   À  4type.func(*"".Options) int   Ð  4"".(*Options).GetBlockSize   à  4"".(*Options).GetBlockSize   ð  <go.string."GetCachedOpenFiles"     type.func() int      4type.func(*"".Options) int   °  @"".(*Options).GetCachedOpenFiles   À  @"".(*Options).GetCachedOpenFiles   Ð  .go.string."GetComparer"   ð  type.func() github.com/syndtr/goleveldb/leveldb/comparer.Comparer     type.func(*"".Options) github.com/syndtr/goleveldb/leveldb/comparer.Comparer     2"".(*Options).GetComparer      2"".(*Options).GetComparer   °  4go.string."GetCompression"   Ð  4type.func() "".Compression   à  Jtype.func(*"".Options) "".Compression   ð  8"".(*Options).GetCompression     8"".(*Options).GetCompression     6go.string."GetErrorIfExist"   °   type.func() bool   À  6type.func(*"".Options) bool   Ð  :"".(*Options).GetErrorIfExist   à  :"".(*Options).GetErrorIfExist   ð  :go.string."GetErrorIfMissing"      type.func() bool      6type.func(*"".Options) bool   °  >"".(*Options).GetErrorIfMissing   À  >"".(*Options).GetErrorIfMissing   Ð  *go.string."GetFilter"   ð  ztype.func() github.com/syndtr/goleveldb/leveldb/filter.Filter   	  type.func(*"".Options) github.com/syndtr/goleveldb/leveldb/filter.Filter   	  ."".(*Options).GetFilter    	  ."".(*Options).GetFilter   °	  *go.string."GetStrict"   Ð	  2type.func("".Strict) bool   à	  Ltype.func(*"".Options, "".Strict) bool   ð	  ."".(*Options).GetStrict   
  ."".(*Options).GetStrict   
  4go.string."GetWriteBuffer"   °
  type.func() int   À
  4type.func(*"".Options) int   Ð
  8"".(*Options).GetWriteBuffer   à
  8"".(*Options).GetWriteBuffer   þTgclocalsÂ·3280bececceccd33cb74587feedb1f9f           þTgclocalsÂ·2dc77d960dd3e4b3de2361f9cbd75783             þTgclocalsÂ·3280bececceccd33cb74587feedb1f9f           þTgclocalsÂ·9c703c5c7b9c1932c840b69f8ebce236             þ:type..hashfunc."".ReadOptions              2type..hash."".ReadOptions   þ6type..eqfunc."".ReadOptions              .type..eq."".ReadOptions   þ0type..alg."".ReadOptions                        :type..hashfunc."".ReadOptions     6type..eqfunc."".ReadOptions   þ6go.string."opt.ReadOptions" @  @               opt.ReadOptions    6go.string."opt.ReadOptions"   þ2go.string."DontFillCache" @  <               DontFillCache    2go.string."DontFillCache"   þ.go.string."ReadOptions" @  8               ReadOptions    .go.string."ReadOptions"   þ&type."".ReadOptions  °  °       y0½                                                                                                                                                                                                         0type..alg."".ReadOptions   0  ^runtime.gcbits.0x000000000000000000000000000000   P  6go.string."opt.ReadOptions"   p  (type.*"".ReadOptions     "runtime.zerovalue   À &type."".ReadOptions   À  2go.string."DontFillCache"   à  type.bool     $go.string."Strict"   °  type."".Strict   `à &type."".ReadOptions   à  .go.string."ReadOptions"   ð  "go.importpath."".   ° &type."".ReadOptions   þ8go.string."*opt.ReadOptions" P  B               *opt.ReadOptions    8go.string."*opt.ReadOptions"   þNgo.string."func(*opt.ReadOptions) bool" `  X               func(*opt.ReadOptions) bool    Ngo.string."func(*opt.ReadOptions) bool"   þ>type.func(*"".ReadOptions) bool            {R» 3                                                                                                                               runtime.algarray   0  bruntime.gcbits.0x88000000000000000000000000000000   P  Ngo.string."func(*opt.ReadOptions) bool"   p  Pgo.weak.type.*func(*"".ReadOptions) bool     "runtime.zerovalue     >type.func(*"".ReadOptions) bool   Ð >type.func(*"".ReadOptions) bool     (type.*"".ReadOptions     type.bool   þfgo.string."func(*opt.ReadOptions, opt.Strict) bool" p  p        '       func(*opt.ReadOptions, opt.Strict) bool    fgo.string."func(*opt.ReadOptions, opt.Strict) bool"   þTtype.func(*"".ReadOptions, "".Strict) bool °  °       ~n 3                                                                                                                                       runtime.algarray   0  bruntime.gcbits.0x88000000000000000000000000000000   P  fgo.string."func(*opt.ReadOptions, opt.Strict) bool"   p  fgo.weak.type.*func(*"".ReadOptions, "".Strict) bool     "runtime.zerovalue     Ttype.func(*"".ReadOptions, "".Strict) bool   Ð  Ttype.func(*"".ReadOptions, "".Strict) bool     (type.*"".ReadOptions     type."".Strict      type.bool   þ8go.string."GetDontFillCache" P  B               GetDontFillCache    8go.string."GetDontFillCache"   þ(type.*"".ReadOptions  °  °       ®ýÄÚ 6                                                                                                                                                                                                      $    runtime.algarray   0  bruntime.gcbits.0x88000000000000000000000000000000   P  8go.string."*opt.ReadOptions"   p  :go.weak.type.**"".ReadOptions     "runtime.zerovalue     &type."".ReadOptions   `  (type.*"".ReadOptions   Àð (type.*"".ReadOptions   ð  8go.string."GetDontFillCache"      type.func() bool      >type.func(*"".ReadOptions) bool   °  D"".(*ReadOptions).GetDontFillCache   À  D"".(*ReadOptions).GetDontFillCache   Ð  *go.string."GetStrict"   ð  2type.func("".Strict) bool     Ttype.func(*"".ReadOptions, "".Strict) bool     6"".(*ReadOptions).GetStrict      6"".(*ReadOptions).GetStrict   þ8go.string."opt.WriteOptions" P  B               opt.WriteOptions    8go.string."opt.WriteOptions"   þ go.string."Sync" 0  *               Sync     go.string."Sync"   þ0go.string."WriteOptions" @  :               WriteOptions    0go.string."WriteOptions"   þ(type."".WriteOptions  à  à       oÏ¦                                                                                                                                                                @  runtime.algarray   0  ^runtime.gcbits.0x000000000000000000000000000000   P  8go.string."opt.WriteOptions"   p  *type.*"".WriteOptions     "runtime.zerovalue   À (type."".WriteOptions   À   go.string."Sync"   à  type.bool   ` (type."".WriteOptions     0go.string."WriteOptions"      "go.importpath."".   °à (type."".WriteOptions   þ:go.string."*opt.WriteOptions" P  D               *opt.WriteOptions    :go.string."*opt.WriteOptions"   þPgo.string."func(*opt.WriteOptions) bool" `  Z               func(*opt.WriteOptions) bool    Pgo.string."func(*opt.WriteOptions) bool"   þ@type.func(*"".WriteOptions) bool            ¦Á 3                                                                                                                               runtime.algarray   0  bruntime.gcbits.0x88000000000000000000000000000000   P  Pgo.string."func(*opt.WriteOptions) bool"   p  Rgo.weak.type.*func(*"".WriteOptions) bool     "runtime.zerovalue     @type.func(*"".WriteOptions) bool   Ð @type.func(*"".WriteOptions) bool     *type.*"".WriteOptions     type.bool   þ&go.string."GetSync" 0  0               GetSync    &go.string."GetSync"   þ*type.*"".WriteOptions  Ð  Ð       ÀØÙÃ 6                                                                                                                                                          runtime.algarray   0  bruntime.gcbits.0x88000000000000000000000000000000   P  :go.string."*opt.WriteOptions"   p  <go.weak.type.**"".WriteOptions     "runtime.zerovalue     (type."".WriteOptions   `  *type.*"".WriteOptions   Àð *type.*"".WriteOptions   ð  &go.string."GetSync"      type.func() bool      @type.func(*"".WriteOptions) bool   °  4"".(*WriteOptions).GetSync   À  4"".(*WriteOptions).GetSync   þ0go.string."*opt.noCache" @  :               *opt.noCache    0go.string."*opt.noCache"   þ&go.string."noCache" 0  0               noCache    &go.string."noCache"   þ.go.string."SetCapacity" @  8               SetCapacity    .go.string."SetCapacity"   þTgclocalsÂ·3280bececceccd33cb74587feedb1f9f           þTgclocalsÂ·cd30d2bcfdea04ed7c49639580b4bd08             þ(go.string."Capacity" @  2               Capacity    (go.string."Capacity"   þTgclocalsÂ·3280bececceccd33cb74587feedb1f9f           þTgclocalsÂ·06cab038d51064a089bda21fa03e00f7             þ go.string."Used" 0  *               Used     go.string."Used"   þTgclocalsÂ·3280bececceccd33cb74587feedb1f9f           þTgclocalsÂ·06cab038d51064a089bda21fa03e00f7             þ go.string."Size" 0  *               Size     go.string."Size"   þTgclocalsÂ·3280bececceccd33cb74587feedb1f9f           þTgclocalsÂ·06cab038d51064a089bda21fa03e00f7             þ,go.string."NumObjects" @  6        
       NumObjects    ,go.string."NumObjects"   þTgclocalsÂ·3280bececceccd33cb74587feedb1f9f           þTgclocalsÂ·06cab038d51064a089bda21fa03e00f7             þ0go.string."GetNamespace" @  :               GetNamespace    0go.string."GetNamespace"   þTgclocalsÂ·3280bececceccd33cb74587feedb1f9f           þTgclocalsÂ·6a2e5ab2d393a1bfd331903fbd0fd425             þ4go.string."PurgeNamespace" @  >               PurgeNamespace    4go.string."PurgeNamespace"   þTgclocalsÂ·3280bececceccd33cb74587feedb1f9f           þTgclocalsÂ·c34189e3b824b0bbe5cf2ca4e567d435         &    þ0go.string."ZapNamespace" @  :               ZapNamespace    0go.string."ZapNamespace"   þTgclocalsÂ·3280bececceccd33cb74587feedb1f9f           þTgclocalsÂ·cd30d2bcfdea04ed7c49639580b4bd08             þ"go.string."Purge" 0  ,               Purge    "go.string."Purge"   þTgclocalsÂ·3280bececceccd33cb74587feedb1f9f           þTgclocalsÂ·e8c55b930b09fa5028b5e4b78b8932dc         
    þgo.string."Zap" 0  (               Zap    go.string."Zap"   þTgclocalsÂ·3280bececceccd33cb74587feedb1f9f           þTgclocalsÂ·519efd86263089ddb84df3cfe7fd2992             þDgo.string."func(*opt.noCache) int" P  N               func(*opt.noCache) int    Dgo.string."func(*opt.noCache) int"   þ4type.func(*"".noCache) int            ìØËë 3                                                                                                                               runtime.algarray   0  bruntime.gcbits.0x88000000000000000000000000000000   P  Dgo.string."func(*opt.noCache) int"   p  Fgo.weak.type.*func(*"".noCache) int     "runtime.zerovalue     4type.func(*"".noCache) int   Ð 4type.func(*"".noCache) int      type.*"".noCache     type.int   þlgo.string."func(*opt.noCache, uint64) cache.Namespace"   v        *       func(*opt.noCache, uint64) cache.Namespace    lgo.string."func(*opt.noCache, uint64) cache.Namespace"   þ¤type.func(*"".noCache, uint64) github.com/syndtr/goleveldb/leveldb/cache.Namespace °  °       AD 3                                                                                                                                       runtime.algarray   0  bruntime.gcbits.0x88000000000000000000000000000000   P  lgo.string."func(*opt.noCache, uint64) cache.Namespace"   p  ¶go.weak.type.*func(*"".noCache, uint64) github.com/syndtr/goleveldb/leveldb/cache.Namespace     "runtime.zerovalue     ¤type.func(*"".noCache, uint64) github.com/syndtr/goleveldb/leveldb/cache.Namespace   Ð  ¤type.func(*"".noCache, uint64) github.com/syndtr/goleveldb/leveldb/cache.Namespace      type.*"".noCache     type.uint64      ptype.github.com/syndtr/goleveldb/leveldb/cache.Namespace   þ\go.string."func(*opt.noCache, cache.PurgeFin)" p  f        "       func(*opt.noCache, cache.PurgeFin)    \go.string."func(*opt.noCache, cache.PurgeFin)"   þtype.func(*"".noCache, github.com/syndtr/goleveldb/leveldb/cache.PurgeFin)            ù 3                                                                                                                                 runtime.algarray   0  bruntime.gcbits.0x88000000000000000000000000000000   P  \go.string."func(*opt.noCache, cache.PurgeFin)"   p  ¦go.weak.type.*func(*"".noCache, github.com/syndtr/goleveldb/leveldb/cache.PurgeFin)     "runtime.zerovalue     type.func(*"".noCache, github.com/syndtr/goleveldb/leveldb/cache.PurgeFin)   Ð  type.func(*"".noCache, github.com/syndtr/goleveldb/leveldb/cache.PurgeFin)      type.*"".noCache     ntype.github.com/syndtr/goleveldb/leveldb/cache.PurgeFin   þlgo.string."func(*opt.noCache, uint64, cache.PurgeFin)"   v        *       func(*opt.noCache, uint64, cache.PurgeFin)    lgo.string."func(*opt.noCache, uint64, cache.PurgeFin)"   þ¤type.func(*"".noCache, uint64, github.com/syndtr/goleveldb/leveldb/cache.PurgeFin) °  °       a9 3                                                                                                                                         runtime.algarray   0  bruntime.gcbits.0x88000000000000000000000000000000   P  lgo.string."func(*opt.noCache, uint64, cache.PurgeFin)"   p  ¶go.weak.type.*func(*"".noCache, uint64, github.com/syndtr/goleveldb/leveldb/cache.PurgeFin)     "runtime.zerovalue     ¤type.func(*"".noCache, uint64, github.com/syndtr/goleveldb/leveldb/cache.PurgeFin)   Ð° ¤type.func(*"".noCache, uint64, github.com/syndtr/goleveldb/leveldb/cache.PurgeFin)      type.*"".noCache     type.uint64      ntype.github.com/syndtr/goleveldb/leveldb/cache.PurgeFin   þFgo.string."func(*opt.noCache, int)" P  P               func(*opt.noCache, int)    Fgo.string."func(*opt.noCache, int)"   þ6type.func(*"".noCache, int)            #ôó¬ 3                                                                                                                                 runtime.algarray   0  bruntime.gcbits.0x88000000000000000000000000000000   P  Fgo.string."func(*opt.noCache, int)"   p  Hgo.weak.type.*func(*"".noCache, int)     "runtime.zerovalue     6type.func(*"".noCache, int)   Ð  6type.func(*"".noCache, int)      type.*"".noCache     type.int   þ<go.string."func(*opt.noCache)" P  F               func(*opt.noCache)    <go.string."func(*opt.noCache)"   þ,type.func(*"".noCache)          Ú§ 3                                                                                                                         runtime.algarray   0  bruntime.gcbits.0x88000000000000000000000000000000   P  <go.string."func(*opt.noCache)"   p  >go.weak.type.*func(*"".noCache)     "runtime.zerovalue     ,type.func(*"".noCache)   Ð ,type.func(*"".noCache)      type.*"".noCache   þLgo.string."func(*opt.noCache, uint64)" `  V               func(*opt.noCache, uint64)    Lgo.string."func(*opt.noCache, uint64)"   þ<type.func(*"".noCache, uint64)            °2Ö 3                                                                                                                                 runtime.algarray   0  bruntime.gcbits.0x88000000000000000000000000000000   P  Lgo.string."func(*opt.noCache, uint64)"   p  Ngo.weak.type.*func(*"".noCache, uint64)     "runtime.zerovalue     <type.func(*"".noCache, uint64)   Ð  <type.func(*"".noCache, uint64)      type.*"".noCache     type.uint64   þPgo.string."func(uint64) cache.Namespace" `  Z               func(uint64) cache.Namespace    Pgo.string."func(uint64) cache.Namespace"   þtype.func(uint64) github.com/syndtr/goleveldb/leveldb/cache.Namespace            QÏ 3                                                                                                                               runtime.algarray   0  bruntime.gcbits.0x88000000000000000000000000000000   P  Pgo.string."func(uint64) cache.Namespace"   p  go.weak.type.*func(uint64) github.com/syndtr/goleveldb/leveldb/cache.Namespace     "runtime.zerovalue     type.func(uint64) github.com/syndtr/goleveldb/leveldb/cache.Namespace   Ð type.func(uint64) github.com/syndtr/goleveldb/leveldb/cache.Namespace     type.uint64     ptype.github.com/syndtr/goleveldb/leveldb/cache.Namespace   þ@go.string."func(cache.PurgeFin)" P  J               func(cache.PurgeFin)    @go.string."func(cache.PurgeFin)"   þztype.func(github.com/syndtr/goleveldb/leveldb/cache.PurgeFin)          !Ì&¬ 3                                                                                                                         runtime.algarray   0  bruntime.gcbits.0x88000000000000000000000000000000   P  @go.string."func(cache.PurgeFin)"   p  go.weak.type.*func(github.com/syndtr/goleveldb/leveldb/cache.PurgeFin)     "runtime.zerovalue     ztype.func(github.com/syndtr/goleveldb/leveldb/cache.PurgeFin)   Ð ztype.func(github.com/syndtr/goleveldb/leveldb/cache.PurgeFin)     ntype.github.com/syndtr/goleveldb/leveldb/cache.PurgeFin   þPgo.string."func(uint64, cache.PurgeFin)" `  Z               func(uint64, cache.PurgeFin)    Pgo.string."func(uint64, cache.PurgeFin)"   þtype.func(uint64, github.com/syndtr/goleveldb/leveldb/cache.PurgeFin)            «çO 3                                                                                                                                 runtime.algarray   0  bruntime.gcbits.0x88000000000000000000000000000000   P  Pgo.string."func(uint64, cache.PurgeFin)"   p  go.weak.type.*func(uint64, github.com/syndtr/goleveldb/leveldb/cache.PurgeFin)     "runtime.zerovalue     type.func(uint64, github.com/syndtr/goleveldb/leveldb/cache.PurgeFin)   Ð  type.func(uint64, github.com/syndtr/goleveldb/leveldb/cache.PurgeFin)     type.uint64     ntype.github.com/syndtr/goleveldb/leveldb/cache.PurgeFin   þ*go.string."func(int)" @  4        	       func(int)    *go.string."func(int)"   þtype.func(int)          æñ 3                                                                                                                         runtime.algarray   0  bruntime.gcbits.0x88000000000000000000000000000000   P  *go.string."func(int)"   p  .go.weak.type.*func(int)     "runtime.zerovalue     type.func(int)   Ð type.func(int)     type.int   þ$go.string."func()" 0  .               func()    $go.string."func()"   þtype.func()          ö¼ö 3                                                                                                                   runtime.algarray   0  bruntime.gcbits.0x88000000000000000000000000000000   P  $go.string."func()"   p  (go.weak.type.*func()     "runtime.zerovalue     type.func()   Ð type.func()   þ0go.string."func(uint64)" @  :               func(uint64)    0go.string."func(uint64)"   þ"type.func(uint64)          G'Ö 3                                                                                                                         runtime.algarray   0  bruntime.gcbits.0x88000000000000000000000000000000   P  0go.string."func(uint64)"   p  4go.weak.type.*func(uint64)     "runtime.zerovalue     "type.func(uint64)   Ð "type.func(uint64)     type.uint64   þ type.*"".noCache  °	  °	       þ;ÏJ 6                                                                                        
       
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                       t    runtime.algarray   0  bruntime.gcbits.0x88000000000000000000000000000000   P  0go.string."*opt.noCache"   p  2go.weak.type.**"".noCache     "runtime.zerovalue     type."".noCache   `   type.*"".noCache   Àð  type.*"".noCache   ð  (go.string."Capacity"     type.func() int      4type.func(*"".noCache) int   °  ,"".(*noCache).Capacity   À  ,"".(*noCache).Capacity   Ð  0go.string."GetNamespace"   ð  type.func(uint64) github.com/syndtr/goleveldb/leveldb/cache.Namespace     ¤type.func(*"".noCache, uint64) github.com/syndtr/goleveldb/leveldb/cache.Namespace     4"".(*noCache).GetNamespace      4"".(*noCache).GetNamespace   °  ,go.string."NumObjects"   Ð  type.func() int   à  4type.func(*"".noCache) int   ð  0"".(*noCache).NumObjects     0"".(*noCache).NumObjects     "go.string."Purge"   °  ztype.func(github.com/syndtr/goleveldb/leveldb/cache.PurgeFin)   À  type.func(*"".noCache, github.com/syndtr/goleveldb/leveldb/cache.PurgeFin)   Ð  &"".(*noCache).Purge   à  &"".(*noCache).Purge   ð  4go.string."PurgeNamespace"     type.func(uint64, github.com/syndtr/goleveldb/leveldb/cache.PurgeFin)      ¤type.func(*"".noCache, uint64, github.com/syndtr/goleveldb/leveldb/cache.PurgeFin)   °  8"".(*noCache).PurgeNamespace   À  8"".(*noCache).PurgeNamespace   Ð  .go.string."SetCapacity"   ð  type.func(int)     6type.func(*"".noCache, int)     2"".(*noCache).SetCapacity      2"".(*noCache).SetCapacity   °   go.string."Size"   Ð  type.func() int   à  4type.func(*"".noCache) int   ð  $"".(*noCache).Size     $"".(*noCache).Size      go.string."Used"   °  type.func() int   À  4type.func(*"".noCache) int   Ð  $"".(*noCache).Used   à  $"".(*noCache).Used   ð  go.string."Zap"     type.func()      ,type.func(*"".noCache)   °  """.(*noCache).Zap   À  """.(*noCache).Zap   Ð  0go.string."ZapNamespace"   ð  "type.func(uint64)   	  <type.func(*"".noCache, uint64)   	  4"".(*noCache).ZapNamespace    	  4"".(*noCache).ZapNamespace   þ.go.string."opt.noCache" @  8               opt.noCache    .go.string."opt.noCache"   þBgo.string."func(opt.noCache) int" P  L               func(opt.noCache) int    Bgo.string."func(opt.noCache) int"   þ2type.func("".noCache) int            Ûn@~ 3                                                                                                                               runtime.algarray   0  bruntime.gcbits.0x88000000000000000000000000000000   P  Bgo.string."func(opt.noCache) int"   p  Dgo.weak.type.*func("".noCache) int     "runtime.zerovalue     2type.func("".noCache) int   Ð 2type.func("".noCache) int     type."".noCache     type.int   þjgo.string."func(opt.noCache, uint64) cache.Namespace"   t        )       func(opt.noCache, uint64) cache.Namespace    jgo.string."func(opt.noCache, uint64) cache.Namespace"   þ¢type.func("".noCache, uint64) github.com/syndtr/goleveldb/leveldb/cache.Namespace °  °       ï 3                                                                                                                                       runtime.algarray   0  bruntime.gcbits.0x88000000000000000000000000000000   P  jgo.string."func(opt.noCache, uint64) cache.Namespace"   p  ´go.weak.type.*func("".noCache, uint64) github.com/syndtr/goleveldb/leveldb/cache.Namespace     "runtime.zerovalue     ¢type.func("".noCache, uint64) github.com/syndtr/goleveldb/leveldb/cache.Namespace   Ð  ¢type.func("".noCache, uint64) github.com/syndtr/goleveldb/leveldb/cache.Namespace     type."".noCache     type.uint64      ptype.github.com/syndtr/goleveldb/leveldb/cache.Namespace   þZgo.string."func(opt.noCache, cache.PurgeFin)" p  d        !       func(opt.noCache, cache.PurgeFin)    Zgo.string."func(opt.noCache, cache.PurgeFin)"   þtype.func("".noCache, github.com/syndtr/goleveldb/leveldb/cache.PurgeFin)            IçH 3                                                                                                                                 runtime.algarray   0  bruntime.gcbits.0x88000000000000000000000000000000   P  Zgo.string."func(opt.noCache, cache.PurgeFin)"   p  ¤go.weak.type.*func("".noCache, github.com/syndtr/goleveldb/leveldb/cache.PurgeFin)     "runtime.zerovalue     type.func("".noCache, github.com/syndtr/goleveldb/leveldb/cache.PurgeFin)   Ð  type.func("".noCache, github.com/syndtr/goleveldb/leveldb/cache.PurgeFin)     type."".noCache     ntype.github.com/syndtr/goleveldb/leveldb/cache.PurgeFin   þjgo.string."func(opt.noCache, uint64, cache.PurgeFin)"   t        )       func(opt.noCache, uint64, cache.PurgeFin)    jgo.string."func(opt.noCache, uint64, cache.PurgeFin)"   þ¢type.func("".noCache, uint64, github.com/syndtr/goleveldb/leveldb/cache.PurgeFin) °  °       ­ß 3                                                                                                                                         runtime.algarray   0  bruntime.gcbits.0x88000000000000000000000000000000   P  jgo.string."func(opt.noCache, uint64, cache.PurgeFin)"   p  ´go.weak.type.*func("".noCache, uint64, github.com/syndtr/goleveldb/leveldb/cache.PurgeFin)     "runtime.zerovalue     ¢type.func("".noCache, uint64, github.com/syndtr/goleveldb/leveldb/cache.PurgeFin)   Ð° ¢type.func("".noCache, uint64, github.com/syndtr/goleveldb/leveldb/cache.PurgeFin)     type."".noCache     type.uint64      ntype.github.com/syndtr/goleveldb/leveldb/cache.PurgeFin   þDgo.string."func(opt.noCache, int)" P  N               func(opt.noCache, int)    Dgo.string."func(opt.noCache, int)"   þ4type.func("".noCache, int)            º)± 3                                                                                                                                 runtime.algarray   0  bruntime.gcbits.0x88000000000000000000000000000000   P  Dgo.string."func(opt.noCache, int)"   p  Fgo.weak.type.*func("".noCache, int)     "runtime.zerovalue     4type.func("".noCache, int)   Ð  4type.func("".noCache, int)     type."".noCache     type.int   þ:go.string."func(opt.noCache)" P  D               func(opt.noCache)    :go.string."func(opt.noCache)"   þ*type.func("".noCache)          Ø©£ 3                                                                                                                         runtime.algarray   0  bruntime.gcbits.0x88000000000000000000000000000000   P  :go.string."func(opt.noCache)"   p  <go.weak.type.*func("".noCache)     "runtime.zerovalue     *type.func("".noCache)   Ð *type.func("".noCache)     type."".noCache   þJgo.string."func(opt.noCache, uint64)" `  T               func(opt.noCache, uint64)    Jgo.string."func(opt.noCache, uint64)"   þ:type.func("".noCache, uint64)            M?jW 3                                                                                                                                 runtime.algarray   0  bruntime.gcbits.0x88000000000000000000000000000000   P  Jgo.string."func(opt.noCache, uint64)"   p  Lgo.weak.type.*func("".noCache, uint64)     "runtime.zerovalue     :type.func("".noCache, uint64)   Ð  :type.func("".noCache, uint64)     type."".noCache     type.uint64   þtype."".noCache  Ð	  Ð	        ßH\                                                                                                         
       
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                       x    runtime.algarray   0  ^runtime.gcbits.0x000000000000000000000000000000   P  .go.string."opt.noCache"   p   type.*"".noCache     "runtime.zerovalue   À type."".noCache   `À type."".noCache   À  &go.string."noCache"   Ð  "go.importpath."".   à type."".noCache     (go.string."Capacity"   °  type.func() int   À  2type.func("".noCache) int   Ð  ,"".(*noCache).Capacity   à  &"".noCache.Capacity   ð  0go.string."GetNamespace"     type.func(uint64) github.com/syndtr/goleveldb/leveldb/cache.Namespace      ¢type.func("".noCache, uint64) github.com/syndtr/goleveldb/leveldb/cache.Namespace   °  4"".(*noCache).GetNamespace   À  ."".noCache.GetNamespace   Ð  ,go.string."NumObjects"   ð  type.func() int     2type.func("".noCache) int     0"".(*noCache).NumObjects      *"".noCache.NumObjects   °  "go.string."Purge"   Ð  ztype.func(github.com/syndtr/goleveldb/leveldb/cache.PurgeFin)   à  type.func("".noCache, github.com/syndtr/goleveldb/leveldb/cache.PurgeFin)   ð  &"".(*noCache).Purge      "".noCache.Purge     4go.string."PurgeNamespace"   °  type.func(uint64, github.com/syndtr/goleveldb/leveldb/cache.PurgeFin)   À  ¢type.func("".noCache, uint64, github.com/syndtr/goleveldb/leveldb/cache.PurgeFin)   Ð  8"".(*noCache).PurgeNamespace   à  2"".noCache.PurgeNamespace   ð  .go.string."SetCapacity"     type.func(int)      4type.func("".noCache, int)   °  2"".(*noCache).SetCapacity   À  ,"".noCache.SetCapacity   Ð   go.string."Size"   ð  type.func() int     2type.func("".noCache) int     $"".(*noCache).Size      "".noCache.Size   °   go.string."Used"   Ð  type.func() int   à  2type.func("".noCache) int   ð  $"".(*noCache).Used     "".noCache.Used     go.string."Zap"   °  type.func()   À  *type.func("".noCache)   Ð  """.(*noCache).Zap   à  "".noCache.Zap   ð  0go.string."ZapNamespace"   	  "type.func(uint64)    	  :type.func("".noCache, uint64)   °	  4"".(*noCache).ZapNamespace   À	  ."".noCache.ZapNamespace   þ&go.string."runtime" 0  0               runtime    &go.string."runtime"   þ,go.importpath.runtime.                       &go.string."runtime"   þjgo.string."github.com/syndtr/goleveldb/leveldb/cache"   t        )       github.com/syndtr/goleveldb/leveldb/cache    jgo.string."github.com/syndtr/goleveldb/leveldb/cache"   þpgo.importpath.github.com/syndtr/goleveldb/leveldb/cache.             )          jgo.string."github.com/syndtr/goleveldb/leveldb/cache"   þlgo.string."github.com/syndtr/goleveldb/leveldb/filter"   v        *       github.com/syndtr/goleveldb/leveldb/filter    lgo.string."github.com/syndtr/goleveldb/leveldb/filter"   þrgo.importpath.github.com/syndtr/goleveldb/leveldb/filter.             *          lgo.string."github.com/syndtr/goleveldb/leveldb/filter"   þpgo.string."github.com/syndtr/goleveldb/leveldb/comparer"   z        ,       github.com/syndtr/goleveldb/leveldb/comparer    pgo.string."github.com/syndtr/goleveldb/leveldb/comparer"   þvgo.importpath.github.com/syndtr/goleveldb/leveldb/comparer.             ,          pgo.string."github.com/syndtr/goleveldb/leveldb/comparer"   þ6"".(*Compression).StringÂ·f              0"".(*Compression).String   þ(runtime.panicwrapÂ·f              "runtime.panicwrap   þ8type..hash."".ReadOptionsÂ·f              2type..hash."".ReadOptions   þ$runtime.memhashÂ·f              runtime.memhash   þ4type..eq."".ReadOptionsÂ·f              .type..eq."".ReadOptions   þ8"".(*noCache).SetCapacityÂ·f              2"".(*noCache).SetCapacity   þ2"".(*noCache).CapacityÂ·f              ,"".(*noCache).Capacity   þ*"".(*noCache).UsedÂ·f              $"".(*noCache).Used   þ*"".(*noCache).SizeÂ·f              $"".(*noCache).Size   þ6"".(*noCache).NumObjectsÂ·f              0"".(*noCache).NumObjects   þ:"".(*noCache).GetNamespaceÂ·f              4"".(*noCache).GetNamespace   þ>"".(*noCache).PurgeNamespaceÂ·f              8"".(*noCache).PurgeNamespace   þ:"".(*noCache).ZapNamespaceÂ·f              4"".(*noCache).ZapNamespace   þ,"".(*noCache).PurgeÂ·f              &"".(*noCache).Purge   þ("".(*noCache).ZapÂ·f              """.(*noCache).Zap   þ"runtime.zerovalue      ÿÿgo13ld 