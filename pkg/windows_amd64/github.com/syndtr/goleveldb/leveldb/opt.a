!<arch>
__.PKGDEF       0           0     0     644     9362      `
go object windows amd64 go1.3.3 X:precisestack

$$
package opt
	import runtime "runtime"
	import cache "github.com/syndtr/goleveldb/leveldb/cache"
	import filter "github.com/syndtr/goleveldb/leveldb/filter"
	import comparer "github.com/syndtr/goleveldb/leveldb/comparer"
	const @"".KiB = 0x400
	const @"".MiB = 0x100000
	const @"".GiB = 0x40000000
	const @"".DefaultBlockCacheSize = 0x800000
	const @"".DefaultBlockRestartInterval = 0x10
	const @"".DefaultBlockSize = 0x1000
	type @"".Compression uint
	func (@"".cÂ·2 @"".Compression) String () (? string)
	const @"".DefaultCompressionType @"".Compression = 0x2
	const @"".DefaultCachedOpenFiles = 0x1F4
	const @"".DefaultWriteBuffer = 0x400000
	type @"github.com/syndtr/goleveldb/leveldb/cache".DelFin func(@"github.com/syndtr/goleveldb/leveldb/cache".exist bool, @"github.com/syndtr/goleveldb/leveldb/cache".pending bool)
	type @"github.com/syndtr/goleveldb/leveldb/cache".Handle interface { Release(); Value() (? interface {}) }
	type @"github.com/syndtr/goleveldb/leveldb/cache".SetFunc func() (@"github.com/syndtr/goleveldb/leveldb/cache".charge int, @"github.com/syndtr/goleveldb/leveldb/cache".value interface {})
	type @"github.com/syndtr/goleveldb/leveldb/cache".PurgeFin func(@"github.com/syndtr/goleveldb/leveldb/cache".ns uint64, @"github.com/syndtr/goleveldb/leveldb/cache".key uint64)
	type @"github.com/syndtr/goleveldb/leveldb/cache".Namespace interface { Delete(@"github.com/syndtr/goleveldb/leveldb/cache".key uint64, @"github.com/syndtr/goleveldb/leveldb/cache".fin @"github.com/syndtr/goleveldb/leveldb/cache".DelFin) (? bool); Get(@"github.com/syndtr/goleveldb/leveldb/cache".key uint64, @"github.com/syndtr/goleveldb/leveldb/cache".setf @"github.com/syndtr/goleveldb/leveldb/cache".SetFunc) (? @"github.com/syndtr/goleveldb/leveldb/cache".Handle); Purge(@"github.com/syndtr/goleveldb/leveldb/cache".fin @"github.com/syndtr/goleveldb/leveldb/cache".PurgeFin); Zap() }
	type @"github.com/syndtr/goleveldb/leveldb/cache".Cache interface { Capacity() (? int); GetNamespace(@"github.com/syndtr/goleveldb/leveldb/cache".id uint64) (? @"github.com/syndtr/goleveldb/leveldb/cache".Namespace); NumObjects() (? int); Purge(@"github.com/syndtr/goleveldb/leveldb/cache".fin @"github.com/syndtr/goleveldb/leveldb/cache".PurgeFin); PurgeNamespace(@"github.com/syndtr/goleveldb/leveldb/cache".id uint64, @"github.com/syndtr/goleveldb/leveldb/cache".fin @"github.com/syndtr/goleveldb/leveldb/cache".PurgeFin); SetCapacity(@"github.com/syndtr/goleveldb/leveldb/cache".capacity int); Size() (? int); Used() (? int); Zap(); ZapNamespace(@"github.com/syndtr/goleveldb/leveldb/cache".id uint64) }
	var @"".NoCache @"github.com/syndtr/goleveldb/leveldb/cache".Cache
	const @"".DefaultCompression @"".Compression = 0x0
	const @"".NoCompression @"".Compression = 0x1
	const @"".SnappyCompression @"".Compression = 0x2
	type @"".Strict uint
	const @"".StrictManifest @"".Strict = 0x1
	const @"".StrictJournal @"".Strict = 0x2
	const @"".StrictJournalChecksum @"".Strict = 0x4
	const @"".StrictIterator @"".Strict = 0x8
	const @"".StrictBlockChecksum @"".Strict = 0x10
	const @"".StrictAll @"".Strict = 0x1F
	const @"".DefaultStrict @"".Strict = 0x14
	const @"".NoStrict @"".Strict = 0xFFFFFFFFFFFFFFE0
	type @"github.com/syndtr/goleveldb/leveldb/filter".Buffer interface { Alloc(@"github.com/syndtr/goleveldb/leveldb/filter".n int) (? []byte); Write(@"github.com/syndtr/goleveldb/leveldb/filter".p []byte) (@"github.com/syndtr/goleveldb/leveldb/filter".n int, @"github.com/syndtr/goleveldb/leveldb/filter".err error); WriteByte(@"github.com/syndtr/goleveldb/leveldb/filter".c byte) (? error) }
	type @"github.com/syndtr/goleveldb/leveldb/filter".FilterGenerator interface { Add(@"github.com/syndtr/goleveldb/leveldb/filter".key []byte); Generate(@"github.com/syndtr/goleveldb/leveldb/filter".b @"github.com/syndtr/goleveldb/leveldb/filter".Buffer) }
	type @"github.com/syndtr/goleveldb/leveldb/filter".Filter interface { Contains(@"github.com/syndtr/goleveldb/leveldb/filter".filter []byte, @"github.com/syndtr/goleveldb/leveldb/filter".key []byte) (? bool); Name() (? string); NewGenerator() (? @"github.com/syndtr/goleveldb/leveldb/filter".FilterGenerator) }
	type @"github.com/syndtr/goleveldb/leveldb/comparer".Comparer interface { Compare(@"github.com/syndtr/goleveldb/leveldb/comparer".a []byte, @"github.com/syndtr/goleveldb/leveldb/comparer".b []byte) (? int); Name() (? string); Separator(@"github.com/syndtr/goleveldb/leveldb/comparer".dst []byte, @"github.com/syndtr/goleveldb/leveldb/comparer".a []byte, @"github.com/syndtr/goleveldb/leveldb/comparer".b []byte) (? []byte); Successor(@"github.com/syndtr/goleveldb/leveldb/comparer".dst []byte, @"github.com/syndtr/goleveldb/leveldb/comparer".b []byte) (? []byte) }
	type @"".Options struct { AltFilters []@"github.com/syndtr/goleveldb/leveldb/filter".Filter; BlockCache @"github.com/syndtr/goleveldb/leveldb/cache".Cache; BlockRestartInterval int; BlockSize int; CachedOpenFiles int; Comparer @"github.com/syndtr/goleveldb/leveldb/comparer".Comparer; Compression @"".Compression; ErrorIfExist bool; ErrorIfMissing bool; Filter @"github.com/syndtr/goleveldb/leveldb/filter".Filter; Strict @"".Strict; WriteBuffer int }
	func (@"".oÂ·2 *@"".Options "esc:0x1") GetAltFilters () (? []@"github.com/syndtr/goleveldb/leveldb/filter".Filter) { if @"".oÂ·2 == nil { return nil }; return @"".oÂ·2.AltFilters }
	func (@"".oÂ·2 *@"".Options "esc:0x1") GetBlockCache () (? @"github.com/syndtr/goleveldb/leveldb/cache".Cache) { if @"".oÂ·2 == nil { return nil }; return @"".oÂ·2.BlockCache }
	func (@"".oÂ·2 *@"".Options "esc:0x0") GetBlockRestartInterval () (? int) { if @"".oÂ·2 == nil || @"".oÂ·2.BlockRestartInterval <= 0x0 { return 0x10 }; return @"".oÂ·2.BlockRestartInterval }
	func (@"".oÂ·2 *@"".Options "esc:0x0") GetBlockSize () (? int) { if @"".oÂ·2 == nil || @"".oÂ·2.BlockSize <= 0x0 { return 0x1000 }; return @"".oÂ·2.BlockSize }
	func (@"".oÂ·2 *@"".Options "esc:0x0") GetCachedOpenFiles () (? int) { if @"".oÂ·2 == nil || @"".oÂ·2.CachedOpenFiles == 0x0 { return 0x1F4 } else { if @"".oÂ·2.CachedOpenFiles < 0x0 { return 0x0 } }; return @"".oÂ·2.CachedOpenFiles }
	func (@"".oÂ·2 *@"".Options "esc:0x1") GetComparer () (? @"github.com/syndtr/goleveldb/leveldb/comparer".Comparer) { if @"".oÂ·2 == nil || @"".oÂ·2.Comparer == nil { return @"github.com/syndtr/goleveldb/leveldb/comparer".DefaultComparer }; return @"".oÂ·2.Comparer }
	func (@"".oÂ·2 *@"".Options "esc:0x0") GetCompression () (? @"".Compression) { if @"".oÂ·2 == nil || @"".oÂ·2.Compression <= @"".Compression(0x0) || @"".oÂ·2.Compression >= @"".Compression(0x3) { return @"".Compression(0x2) }; return @"".oÂ·2.Compression }
	func (@"".oÂ·2 *@"".Options "esc:0x0") GetErrorIfExist () (? bool) { if @"".oÂ·2 == nil { return false }; return @"".oÂ·2.ErrorIfExist }
	func (@"".oÂ·2 *@"".Options "esc:0x0") GetErrorIfMissing () (? bool) { if @"".oÂ·2 == nil { return false }; return @"".oÂ·2.ErrorIfMissing }
	func (@"".oÂ·2 *@"".Options "esc:0x1") GetFilter () (? @"github.com/syndtr/goleveldb/leveldb/filter".Filter) { if @"".oÂ·2 == nil { return nil }; return @"".oÂ·2.Filter }
	func (@"".oÂ·2 *@"".Options "esc:0x0") GetStrict (@"".strictÂ·3 @"".Strict) (? bool) { if @"".oÂ·2 == nil || @"".oÂ·2.Strict == @"".Strict(0x0) { return @"".Strict(0x14) & @"".strictÂ·3 != @"".Strict(0x0) }; return @"".oÂ·2.Strict & @"".strictÂ·3 != @"".Strict(0x0) }
	func (@"".oÂ·2 *@"".Options "esc:0x0") GetWriteBuffer () (? int) { if @"".oÂ·2 == nil || @"".oÂ·2.WriteBuffer <= 0x0 { return 0x400000 }; return @"".oÂ·2.WriteBuffer }
	type @"".ReadOptions struct { DontFillCache bool; Strict @"".Strict }
	func (@"".roÂ·2 *@"".ReadOptions "esc:0x0") GetDontFillCache () (? bool) { if @"".roÂ·2 == nil { return false }; return @"".roÂ·2.DontFillCache }
	func (@"".roÂ·2 *@"".ReadOptions "esc:0x0") GetStrict (@"".strictÂ·3 @"".Strict) (? bool) { if @"".roÂ·2 == nil { return false }; return @"".roÂ·2.Strict & @"".strictÂ·3 != @"".Strict(0x0) }
	type @"".WriteOptions struct { Sync bool }
	func (@"".woÂ·2 *@"".WriteOptions "esc:0x0") GetSync () (? bool) { if @"".woÂ·2 == nil { return false }; return @"".woÂ·2.Sync }
	func @"".init ()
	type @"github.com/syndtr/goleveldb/leveldb/comparer".bytesComparer struct {}
	func (? @"github.com/syndtr/goleveldb/leveldb/comparer".bytesComparer) Compare (@"github.com/syndtr/goleveldb/leveldb/comparer".aÂ·2 []byte "esc:0x0", @"github.com/syndtr/goleveldb/leveldb/comparer".bÂ·3 []byte "esc:0x0") (? int)
	func (? @"github.com/syndtr/goleveldb/leveldb/comparer".bytesComparer) Name () (? string) { return "leveldb.BytewiseComparator" }
	func (? @"github.com/syndtr/goleveldb/leveldb/comparer".bytesComparer) Separator (@"github.com/syndtr/goleveldb/leveldb/comparer".dstÂ·2 []byte "esc:0x2", @"github.com/syndtr/goleveldb/leveldb/comparer".aÂ·3 []byte "esc:0x0", @"github.com/syndtr/goleveldb/leveldb/comparer".bÂ·4 []byte "esc:0x0") (? []byte)
	func (? @"github.com/syndtr/goleveldb/leveldb/comparer".bytesComparer) Successor (@"github.com/syndtr/goleveldb/leveldb/comparer".dstÂ·2 []byte "esc:0x2", @"github.com/syndtr/goleveldb/leveldb/comparer".bÂ·3 []byte "esc:0x0") (? []byte)
	var @"github.com/syndtr/goleveldb/leveldb/comparer".DefaultComparer @"github.com/syndtr/goleveldb/leveldb/comparer".bytesComparer
	const @"".nCompression @"".Compression = 0x3

$$
_go_.6          0           0     0     644     91715     `
go object windows amd64 go1.3.3 X:precisestack

!
  go13ldVgithub.com/syndtr/goleveldb/leveldb/cache.a\github.com/syndtr/goleveldb/leveldb/comparer.aXgithub.com/syndtr/goleveldb/leveldb/filter.a þ,"".noCache.SetCapacity     Ã    "".capacity  type.int   D      TgclocalsÂ·5d05a78f811f5c3f62710534cdce0004 TgclocalsÂ·3280bececceccd33cb74587feedb1f9f     ®D:/My Documents/GoProjects/m_api/src/github.com/syndtr/goleveldb/leveldb/opt/options.goþ&"".noCache.Capacity     HÇD$    Ã    "".~r0  type.int   F      TgclocalsÂ·a7a3692b8e27e823add69ec4239ba55f TgclocalsÂ·3280bececceccd33cb74587feedb1f9f     ®D:/My Documents/GoProjects/m_api/src/github.com/syndtr/goleveldb/leveldb/opt/options.goþ"".noCache.Used     HÇD$    Ã    "".~r0  type.int   H      TgclocalsÂ·a7a3692b8e27e823add69ec4239ba55f TgclocalsÂ·3280bececceccd33cb74587feedb1f9f     ®D:/My Documents/GoProjects/m_api/src/github.com/syndtr/goleveldb/leveldb/opt/options.goþ"".noCache.Size     HÇD$    Ã    "".~r0  type.int   J      TgclocalsÂ·a7a3692b8e27e823add69ec4239ba55f TgclocalsÂ·3280bececceccd33cb74587feedb1f9f     ®D:/My Documents/GoProjects/m_api/src/github.com/syndtr/goleveldb/leveldb/opt/options.goþ*"".noCache.NumObjects     HÇD$    Ã    "".~r0  type.int   L      TgclocalsÂ·a7a3692b8e27e823add69ec4239ba55f TgclocalsÂ·3280bececceccd33cb74587feedb1f9f     ®D:/My Documents/GoProjects/m_api/src/github.com/syndtr/goleveldb/leveldb/opt/options.goþ."".noCache.GetNamespace  @  &HÇD$    HÇD$    Ã 0   "".~r1 ptype.github.com/syndtr/goleveldb/leveldb/cache.Namespace 
"".id  type.uint64     N       TgclocalsÂ·a73fd2a0c6f832642aa9216fd9c5e6be TgclocalsÂ·3280bececceccd33cb74587feedb1f9f     ®D:/My Documents/GoProjects/m_api/src/github.com/syndtr/goleveldb/leveldb/opt/options.goþ2"".noCache.PurgeNamespace     Ã     "".fin ntype.github.com/syndtr/goleveldb/leveldb/cache.PurgeFin 
"".id  type.uint64   P      TgclocalsÂ·a037fff0187c50f783b94becc61a2c3d TgclocalsÂ·3280bececceccd33cb74587feedb1f9f     ®D:/My Documents/GoProjects/m_api/src/github.com/syndtr/goleveldb/leveldb/opt/options.goþ."".noCache.ZapNamespace     Ã    
"".id  type.uint64   R      TgclocalsÂ·5d05a78f811f5c3f62710534cdce0004 TgclocalsÂ·3280bececceccd33cb74587feedb1f9f     ®D:/My Documents/GoProjects/m_api/src/github.com/syndtr/goleveldb/leveldb/opt/options.goþ "".noCache.Purge     Ã    "".fin  ntype.github.com/syndtr/goleveldb/leveldb/cache.PurgeFin   T      TgclocalsÂ·519efd86263089ddb84df3cfe7fd2992 TgclocalsÂ·3280bececceccd33cb74587feedb1f9f     ®D:/My Documents/GoProjects/m_api/src/github.com/syndtr/goleveldb/leveldb/opt/options.goþ"".noCache.Zap     Ã        V      TgclocalsÂ·3280bececceccd33cb74587feedb1f9f TgclocalsÂ·3280bececceccd33cb74587feedb1f9f     ®D:/My Documents/GoProjects/m_api/src/github.com/syndtr/goleveldb/leveldb/opt/options.goþ*"".Compression.String    þHD$Hø uH%    H+Hl$HkHl$ÃHøuH%    H+Hl$HkHl$ÃHøuH%    H+Hl$HkHl$ÃH%    H+Hl$HkHl$Ã  &go.string."default"   ^   go.string."none"     $go.string."snappy"   Ò  &go.string."invalid"   0   "".~r0 type.string "".c  &type."".Compression   "f      TgclocalsÂ·a73fd2a0c6f832642aa9216fd9c5e6be TgclocalsÂ·3280bececceccd33cb74587feedb1f9f     ®D:/My Documents/GoProjects/m_api/src/github.com/syndtr/goleveldb/leveldb/opt/options.goþ6"".(*Options).GetAltFilters     HD$H1íH9èuHÇD$    HÇD$    HÇD$     ÃHø tH(Hl$HhHl$HhHl$ Ã ëá @   "".~r0 ptype.[]github.com/syndtr/goleveldb/leveldb/filter.Filter "".o   type.*"".Options P P ú'      TgclocalsÂ·13d3af77a5bf02af6db4588efb2ea811 TgclocalsÂ·3280bececceccd33cb74587feedb1f9f     ®D:/My Documents/GoProjects/m_api/src/github.com/syndtr/goleveldb/leveldb/opt/options.goþ6"".(*Options).GetBlockCache    zHD$H1íH9èuHÇD$    HÇD$    ÃHø tHhHl$Hh Hl$Ã ëé 0   "".~r0 htype.github.com/syndtr/goleveldb/leveldb/cache.Cache "".o   type.*"".Options @ @        TgclocalsÂ·a08e9001cb8f9d822225de3b8e406515 TgclocalsÂ·3280bececceccd33cb74587feedb1f9f     ®D:/My Documents/GoProjects/m_api/src/github.com/syndtr/goleveldb/leveldb/opt/options.goþJ"".(*Options).GetBlockRestartInterval  `  VHD$H1íH9ètHX(Hû ~
Hh(Hl$ÃHÇD$   Ã     "".~r0 type.int "".o   type.*"".Options 0 0 
      TgclocalsÂ·06cab038d51064a089bda21fa03e00f7 TgclocalsÂ·3280bececceccd33cb74587feedb1f9f     ®D:/My Documents/GoProjects/m_api/src/github.com/syndtr/goleveldb/leveldb/opt/options.goþ4"".(*Options).GetBlockSize  `  VHD$H1íH9ètHX0Hû ~
Hh0Hl$ÃHÇD$   Ã     "".~r0 type.int "".o   type.*"".Options 0 0 ¤
      TgclocalsÂ·06cab038d51064a089bda21fa03e00f7 TgclocalsÂ·3280bececceccd33cb74587feedb1f9f     ®D:/My Documents/GoProjects/m_api/src/github.com/syndtr/goleveldb/leveldb/opt/options.goþ@"".(*Options).GetCachedOpenFiles    ~HD$H1íH9èt(HX8Hû tHX8Hû }
HÇD$    ÃHh8Hl$ÃHÇD$ô  Ã     "".~r0 type.int "".o   type.*"".Options @ @ ²


      TgclocalsÂ·06cab038d51064a089bda21fa03e00f7 TgclocalsÂ·3280bececceccd33cb74587feedb1f9f     ®D:/My Documents/GoProjects/m_api/src/github.com/syndtr/goleveldb/leveldb/opt/options.goþ2"".(*Options).GetComparer  à  ÄeH%(   H    H;!wè    ëäHì0HD$8HÇD$@    HÇD$H    H1íH9ètHx@ tHh@Hl$@HhHHl$HHÄ0ÃHÇ$    HÇD$    HÇD$    H%    H\$è    H\$ H\$@H\$(H\$HHÄ0Ã      ,  4runtime.morestack24_noctxt   Â  ~type.github.com/syndtr/goleveldb/leveldb/comparer.bytesComparer   Ô  ttype.github.com/syndtr/goleveldb/leveldb/comparer.Comparer   æ  ðgo.itab.github.com/syndtr/goleveldb/leveldb/comparer.bytesComparer.github.com/syndtr/goleveldb/leveldb/comparer.Comparer   ö  xgithub.com/syndtr/goleveldb/leveldb/comparer.DefaultComparer     runtime.convT2I   0`  "".~r0 ttype.github.com/syndtr/goleveldb/leveldb/comparer.Comparer "".o   type.*"".Options  `<_`D_ ° Ä7S  ba'  ,     TgclocalsÂ·a08e9001cb8f9d822225de3b8e406515 TgclocalsÂ·3280bececceccd33cb74587feedb1f9f     ®D:/My Documents/GoProjects/m_api/src/github.com/syndtr/goleveldb/leveldb/opt/options.goþ8"".(*Options).GetCompression    jHD$H1íH9ètHXPHû vHXPHûs
HhPHl$ÃHÇD$   Ã     "".~r0 &type."".Compression "".o   type.*"".Options @ @ Ò
      TgclocalsÂ·06cab038d51064a089bda21fa03e00f7 TgclocalsÂ·3280bececceccd33cb74587feedb1f9f     ®D:/My Documents/GoProjects/m_api/src/github.com/syndtr/goleveldb/leveldb/opt/options.goþ:"".(*Options).GetErrorIfExist  @  <HD$H1íH9èuÆD$ ÃH¶hX@l$Ã     "".~r0 type.bool "".o   type.*"".Options     à      TgclocalsÂ·06cab038d51064a089bda21fa03e00f7 TgclocalsÂ·3280bececceccd33cb74587feedb1f9f     ®D:/My Documents/GoProjects/m_api/src/github.com/syndtr/goleveldb/leveldb/opt/options.goþ>"".(*Options).GetErrorIfMissing  @  <HD$H1íH9èuÆD$ ÃH¶hY@l$Ã     "".~r0 type.bool "".o   type.*"".Options     î      TgclocalsÂ·06cab038d51064a089bda21fa03e00f7 TgclocalsÂ·3280bececceccd33cb74587feedb1f9f     ®D:/My Documents/GoProjects/m_api/src/github.com/syndtr/goleveldb/leveldb/opt/options.goþ."".(*Options).GetFilter    zHD$H1íH9èuHÇD$    HÇD$    ÃHø tHh`Hl$HhhHl$Ã ëé 0   "".~r0 ltype.github.com/syndtr/goleveldb/leveldb/filter.Filter "".o   type.*"".Options @ @ ü       TgclocalsÂ·a08e9001cb8f9d822225de3b8e406515 TgclocalsÂ·3280bececceccd33cb74587feedb1f9f     ®D:/My Documents/GoProjects/m_api/src/github.com/syndtr/goleveldb/leveldb/opt/options.goþ."".(*Options).GetStrict      HL$HD$H1íH9èt$HXpHû tHXpH!ËHû uÆD$ ÃÆD$ëøHËHãHû uÆD$ ÃÆD$ëø 0   "".~r1  type.bool "".strict type."".Strict "".o   type.*"".Options P P 
      TgclocalsÂ·64b411f0f44be3f38c26e84fc3239091 TgclocalsÂ·3280bececceccd33cb74587feedb1f9f     ®D:/My Documents/GoProjects/m_api/src/github.com/syndtr/goleveldb/leveldb/opt/options.goþ8"".(*Options).GetWriteBuffer  `  VHD$H1íH9ètHXxHû ~
HhxHl$ÃHÇD$  @ Ã     "".~r0 type.int "".o   type.*"".Options 0 0 
      TgclocalsÂ·06cab038d51064a089bda21fa03e00f7 TgclocalsÂ·3280bececceccd33cb74587feedb1f9f     ®D:/My Documents/GoProjects/m_api/src/github.com/syndtr/goleveldb/leveldb/opt/options.goþD"".(*ReadOptions).GetDontFillCache  @  :HD$H1íH9èuÆD$ ÃH¶(@l$Ã     "".~r0 type.bool 
"".ro  (type.*"".ReadOptions     Ä      TgclocalsÂ·06cab038d51064a089bda21fa03e00f7 TgclocalsÂ·3280bececceccd33cb74587feedb1f9f     ®D:/My Documents/GoProjects/m_api/src/github.com/syndtr/goleveldb/leveldb/opt/options.goþ6"".(*ReadOptions).GetStrict    dHD$H1íH9èuÆD$ ÃHXHl$H!ëHû uÆD$ ÃÆD$ëø 0   "".~r1  type.bool "".strict type."".Strict 
"".ro  (type.*"".ReadOptions @ @ Ò-      TgclocalsÂ·64b411f0f44be3f38c26e84fc3239091 TgclocalsÂ·3280bececceccd33cb74587feedb1f9f     ®D:/My Documents/GoProjects/m_api/src/github.com/syndtr/goleveldb/leveldb/opt/options.goþ4"".(*WriteOptions).GetSync  @  :HD$H1íH9èuÆD$ ÃH¶(@l$Ã     "".~r0 type.bool 
"".wo  *type.*"".WriteOptions           TgclocalsÂ·06cab038d51064a089bda21fa03e00f7 TgclocalsÂ·3280bececceccd33cb74587feedb1f9f     ®D:/My Documents/GoProjects/m_api/src/github.com/syndtr/goleveldb/leveldb/opt/options.goþ"".init    øeH%(   H    H;!wè    ëäHì0H¶%    û tH¶%    ûuHÄ0Ãè    Æ%    è    è    è    H\$0H%    HÇ$    HÇD$    HÇD$    H\$0H\$è    H\$ H%    H\$(H%    Æ%    HÄ0Ã"      ,  4runtime.morestack00_noctxt   J  "".initdoneÂ·   f  "".initdoneÂ·     "runtime.throwinit     "".initdoneÂ·   ¢  ^github.com/syndtr/goleveldb/leveldb/filter.init   ¬  bgithub.com/syndtr/goleveldb/leveldb/comparer.init   ¶  \github.com/syndtr/goleveldb/leveldb/cache.init   Ð  """.statictmp_0002   à  type."".noCache   ò  htype.github.com/syndtr/goleveldb/leveldb/cache.Cache     go.itab."".noCache.github.com/syndtr/goleveldb/leveldb/cache.Cache   ¢  runtime.convT2I   ¼  "".NoCache   Ö "".NoCache   ä  "".initdoneÂ·    `  "".autotmp_0001  type."".noCache  ` _`z_ À _³P´  AO`a+ 
 A     TgclocalsÂ·3280bececceccd33cb74587feedb1f9f TgclocalsÂ·3280bececceccd33cb74587feedb1f9f     ®D:/My Documents/GoProjects/m_api/src/github.com/syndtr/goleveldb/leveldb/opt/options.goþ0"".(*Compression).String     eH%(   H    H;!wè    ëäHì0A8HÇD$@    HÇD$H    H\$8H1íH9ëuKH%    H,$HïHÞH¥H¥H%    Hl$HïHÞH¥H¥H%    Hl$ HïHÞH¥H¥è    H\$8H+H,$è    HL$HD$HL$@HD$HeH%(   H    i8HÄ0Ã      ,  4runtime.morestack24_noctxt     go.string."opt"   º  .go.string."Compression"   è  $go.string."String"     "runtime.panicwrap   ¶  *"".Compression.String   þ      0`  "".~r0 type.string ""..this  (type.*"".Compression  `«_ Ð Ð  bI  I     TgclocalsÂ·a08e9001cb8f9d822225de3b8e406515 TgclocalsÂ·3280bececceccd33cb74587feedb1f9f     <autogenerated>þ2type..hash."".ReadOptions    eH%(   H    H;!wè    ëäHìH\$ H$HÇD$   H\$0H\$H|$ tBè    H\$ H$HÇD$   H\$0H\$H|$ tHD$è    HÄÃ%    ëç%    ëµ      ,  4runtime.morestack24_noctxt     runtime.memhash   è  runtime.memhash   00  "".p  (type.*"".ReadOptions "".s type.uintptr "".h  type.*uintptr  0\/0    D21*21 
 DL     TgclocalsÂ·c34189e3b824b0bbe5cf2ca4e567d435 TgclocalsÂ·3280bececceccd33cb74587feedb1f9f     ®D:/My Documents/GoProjects/m_api/src/github.com/syndtr/goleveldb/leveldb/opt/options.goþ.type..eq."".ReadOptions   jHT$HL$ HD$H¶H¶)@8ëtÆ  ÃHZHiH9ëtÆ  ÃÆ Ã @   "".q 0(type.*"".ReadOptions "".p  (type.*"".ReadOptions "".s type.uintptr 
"".eq  type.*bool @ @ @      TgclocalsÂ·42ea2d2340f90cf3f379f66fe4b2d382 TgclocalsÂ·3280bececceccd33cb74587feedb1f9f     ®D:/My Documents/GoProjects/m_api/src/github.com/syndtr/goleveldb/leveldb/opt/options.goþ2"".(*noCache).SetCapacity à  ÖeH%(   H    H;!wè    ëäHì0A8H\$8H1íH9ëuKH%    H,$HïHÞH¥H¥H%    Hl$HïHÞH¥H¥H%    Hl$ HïHÞH¥H¥è    H|$8 tH\$@eH%(   H    i8HÄ0Ã%    ëÙ      ,  4runtime.morestack16_noctxt   j  go.string."opt"     &go.string."noCache"   Ä  .go.string."SetCapacity"   ì  "runtime.panicwrap   ª       `  "".capacity type.int ""..this   type.*"".noCache  `_` ° ° 
 ub; 
 u;     TgclocalsÂ·cd30d2bcfdea04ed7c49639580b4bd08 TgclocalsÂ·3280bececceccd33cb74587feedb1f9f     <autogenerated>þ,"".(*noCache).Capacity à  ÜeH%(   H    H;!wè    ëäHì8A@H\$@H1íH9ëuKH%    H,$HïHÞH¥H¥H%    Hl$HïHÞH¥H¥H%    Hl$ HïHÞH¥H¥è    H|$@ t!H1ÀHD$HeH%(   H    i@HÄ8Ã%    ëÖ      ,  4runtime.morestack16_noctxt   j  go.string."opt"     &go.string."noCache"   Ä  (go.string."Capacity"   ì  "runtime.panicwrap   °       p  "".~r0 type.int "".~r0 type.int ""..this   type.*"".noCache  pop ° ° 
 ub; 
 u;     TgclocalsÂ·06cab038d51064a089bda21fa03e00f7 TgclocalsÂ·3280bececceccd33cb74587feedb1f9f     <autogenerated>þ$"".(*noCache).Used à  ÜeH%(   H    H;!wè    ëäHì8A@H\$@H1íH9ëuKH%    H,$HïHÞH¥H¥H%    Hl$HïHÞH¥H¥H%    Hl$ HïHÞH¥H¥è    H|$@ t!H1ÀHD$HeH%(   H    i@HÄ8Ã%    ëÖ      ,  4runtime.morestack16_noctxt   j  go.string."opt"     &go.string."noCache"   Ä   go.string."Used"   ì  "runtime.panicwrap   °       p  "".~r0 type.int "".~r0 type.int ""..this   type.*"".noCache  pop ° 
° 
 ub; 
 u;     TgclocalsÂ·06cab038d51064a089bda21fa03e00f7 TgclocalsÂ·3280bececceccd33cb74587feedb1f9f     <autogenerated>þ$"".(*noCache).Size à  ÜeH%(   H    H;!wè    ëäHì8A@H\$@H1íH9ëuKH%    H,$HïHÞH¥H¥H%    Hl$HïHÞH¥H¥H%    Hl$ HïHÞH¥H¥è    H|$@ t!H1ÀHD$HeH%(   H    i@HÄ8Ã%    ëÖ      ,  4runtime.morestack16_noctxt   j  go.string."opt"     &go.string."noCache"   Ä   go.string."Size"   ì  "runtime.panicwrap   °       p  "".~r0 type.int "".~r0 type.int ""..this   type.*"".noCache  pop ° ° 
 ub; 
 u;     TgclocalsÂ·06cab038d51064a089bda21fa03e00f7 TgclocalsÂ·3280bececceccd33cb74587feedb1f9f     <autogenerated>þ0"".(*noCache).NumObjects à  ÜeH%(   H    H;!wè    ëäHì8A@H\$@H1íH9ëuKH%    H,$HïHÞH¥H¥H%    Hl$HïHÞH¥H¥H%    Hl$ HïHÞH¥H¥è    H|$@ t!H1ÀHD$HeH%(   H    i@HÄ8Ã%    ëÖ      ,  4runtime.morestack16_noctxt   j  go.string."opt"     &go.string."noCache"   Ä  ,go.string."NumObjects"   ì  "runtime.panicwrap   °       p  "".~r0 type.int "".~r0 type.int ""..this   type.*"".noCache  pop ° ° 
 ub; 
 u;     TgclocalsÂ·06cab038d51064a089bda21fa03e00f7 TgclocalsÂ·3280bececceccd33cb74587feedb1f9f     <autogenerated>þ4"".(*noCache).GetNamespace   öeH%(   H    H;!wè    ëäHì@AHH\$HH1íH9ëuKH%    H,$HïHÞH¥H¥H%    Hl$HïHÞH¥H¥H%    Hl$ HïHÞH¥H¥è    H|$H t.H\$PH1ÉH1ÀHL$XHD$`eH%(   H    iHHÄ@Ã%    ëÉ      ,  4runtime.morestack32_noctxt   j  go.string."opt"     &go.string."noCache"   Ä  0go.string."GetNamespace"   ì  "runtime.panicwrap   Ê      @  "".~r1 ptype.github.com/syndtr/goleveldb/leveldb/cache.Namespace "".~r1  ptype.github.com/syndtr/goleveldb/leveldb/cache.Namespace 
"".id type.uint64 ""..this   type.*"".noCache   À À 
 ubK 
 uK     TgclocalsÂ·6a2e5ab2d393a1bfd331903fbd0fd425 TgclocalsÂ·d64e51a4c4bfeaa840e480961ec6b0b3     <autogenerated>þ8"".(*noCache).PurgeNamespace à  àeH%(   H    H;!wè    ëäHì0A8H\$8H1íH9ëuKH%    H,$HïHÞH¥H¥H%    Hl$HïHÞH¥H¥H%    Hl$ HïHÞH¥H¥è    H|$8 t#H\$@H\$HeH%(   H    i8HÄ0Ã%    ëÔ      ,  4runtime.morestack24_noctxt   j  go.string."opt"     &go.string."noCache"   Ä  4go.string."PurgeNamespace"   ì  "runtime.panicwrap   ´      0`  "".fin  ntype.github.com/syndtr/goleveldb/leveldb/cache.PurgeFin 
"".id type.uint64 ""..this   type.*"".noCache  `_`	 ° ° 
 ub; 
 u;     TgclocalsÂ·c34189e3b824b0bbe5cf2ca4e567d435 TgclocalsÂ·3280bececceccd33cb74587feedb1f9f     <autogenerated>þ4"".(*noCache).ZapNamespace à  ÖeH%(   H    H;!wè    ëäHì0A8H\$8H1íH9ëuKH%    H,$HïHÞH¥H¥H%    Hl$HïHÞH¥H¥H%    Hl$ HïHÞH¥H¥è    H|$8 tH\$@eH%(   H    i8HÄ0Ã%    ëÙ      ,  4runtime.morestack16_noctxt   j  go.string."opt"     &go.string."noCache"   Ä  0go.string."ZapNamespace"   ì  "runtime.panicwrap   ª       `  
"".id type.uint64 ""..this   type.*"".noCache  `_` ° ° 
 ub; 
 u;     TgclocalsÂ·cd30d2bcfdea04ed7c49639580b4bd08 TgclocalsÂ·3280bececceccd33cb74587feedb1f9f     <autogenerated>þ&"".(*noCache).Purge à  ÖeH%(   H    H;!wè    ëäHì0A8H\$8H1íH9ëuKH%    H,$HïHÞH¥H¥H%    Hl$HïHÞH¥H¥H%    Hl$ HïHÞH¥H¥è    H|$8 tH\$@eH%(   H    i8HÄ0Ã%    ëÙ      ,  4runtime.morestack16_noctxt   j  go.string."opt"     &go.string."noCache"   Ä  "go.string."Purge"   ì  "runtime.panicwrap   ª       `  "".fin ntype.github.com/syndtr/goleveldb/leveldb/cache.PurgeFin ""..this   type.*"".noCache  `_` ° ° 
 ub; 
 u;     TgclocalsÂ·e8c55b930b09fa5028b5e4b78b8932dc TgclocalsÂ·3280bececceccd33cb74587feedb1f9f     <autogenerated>þ""".(*noCache).Zap à  ÌeH%(   H    H;!wè    ëäHì0A8H\$8H1íH9ëuKH%    H,$HïHÞH¥H¥H%    Hl$HïHÞH¥H¥H%    Hl$ HïHÞH¥H¥è    H|$8 teH%(   H    i8HÄ0Ã%    ëÞ      ,  2runtime.morestack8_noctxt   j  go.string."opt"     &go.string."noCache"   Ä  go.string."Zap"   ì  "runtime.panicwrap          `  ""..this   type.*"".noCache  `|_` ° ° 
 ub; 
 u;     TgclocalsÂ·519efd86263089ddb84df3cfe7fd2992 TgclocalsÂ·3280bececceccd33cb74587feedb1f9f     <autogenerated>þ2"".noCache.SetCapacityÂ·i `  \eH%(   H    AH\$eH%(   H    iÃ      J          "".capacity type.int ""..pad  type.[8]uint8 ""..this  type."".noCache 0 0 0      TgclocalsÂ·b7bb1decaed4396e7ccc4ad632a53ab8 TgclocalsÂ·3280bececceccd33cb74587feedb1f9f     <autogenerated>þ,"".noCache.CapacityÂ·i   reH%(   H    HìAH1ÀHD$eH%(   H    iHÄÃ      X         "".~r0 type.int "".~r0 type.int ""..pad  type.[8]uint8 ""..this  type."".noCache $ @ @      TgclocalsÂ·9308e7ef08d2cc2f72ae1228688dacf9 TgclocalsÂ·3280bececceccd33cb74587feedb1f9f     <autogenerated>þ$"".noCache.UsedÂ·i   reH%(   H    HìAH1ÀHD$eH%(   H    iHÄÃ      X         "".~r0 type.int "".~r0 type.int ""..pad  type.[8]uint8 ""..this  type."".noCache $ @ @      TgclocalsÂ·9308e7ef08d2cc2f72ae1228688dacf9 TgclocalsÂ·3280bececceccd33cb74587feedb1f9f     <autogenerated>þ$"".noCache.SizeÂ·i   reH%(   H    HìAH1ÀHD$eH%(   H    iHÄÃ      X         "".~r0 type.int "".~r0 type.int ""..pad  type.[8]uint8 ""..this  type."".noCache $ @  @      TgclocalsÂ·9308e7ef08d2cc2f72ae1228688dacf9 TgclocalsÂ·3280bececceccd33cb74587feedb1f9f     <autogenerated>þ0"".noCache.NumObjectsÂ·i   reH%(   H    HìAH1ÀHD$eH%(   H    iHÄÃ      X         "".~r0 type.int "".~r0 type.int ""..pad  type.[8]uint8 ""..this  type."".noCache $ @ "@      TgclocalsÂ·9308e7ef08d2cc2f72ae1228688dacf9 TgclocalsÂ·3280bececceccd33cb74587feedb1f9f     <autogenerated>þ4"".noCache.GetNamespaceÂ·i    eH%(   H    HìAH\$ H1ÉH1ÀHL$(HD$0eH%(   H    iHÄÃ      r      @   
"".~r1 ptype.github.com/syndtr/goleveldb/leveldb/cache.Namespace "".~r1  ptype.github.com/syndtr/goleveldb/leveldb/cache.Namespace 
"".id type.uint64 ""..pad  type.[8]uint8 ""..this  type."".noCache  1 P $P      TgclocalsÂ·693fd2e6f4da98598ef49a51d91c93cd TgclocalsÂ·d64e51a4c4bfeaa840e480961ec6b0b3     <autogenerated>þ8"".noCache.PurgeNamespaceÂ·i   feH%(   H    AH\$H\$eH%(   H    iÃ      T      0   "".fin  ntype.github.com/syndtr/goleveldb/leveldb/cache.PurgeFin 
"".id type.uint64 ""..pad  type.[8]uint8 ""..this  type."".noCache @ @ &@      TgclocalsÂ·791c81008460df34b82004848a9f44bf TgclocalsÂ·3280bececceccd33cb74587feedb1f9f     <autogenerated>þ4"".noCache.ZapNamespaceÂ·i `  \eH%(   H    AH\$eH%(   H    iÃ      J          
"".id type.uint64 ""..pad  type.[8]uint8 ""..this  type."".noCache 0 0 (0      TgclocalsÂ·b7bb1decaed4396e7ccc4ad632a53ab8 TgclocalsÂ·3280bececceccd33cb74587feedb1f9f     <autogenerated>þ&"".noCache.PurgeÂ·i `  \eH%(   H    AH\$eH%(   H    iÃ      J          "".fin ntype.github.com/syndtr/goleveldb/leveldb/cache.PurgeFin ""..pad  type.[8]uint8 ""..this  type."".noCache 0 0 *0      TgclocalsÂ·a037fff0187c50f783b94becc61a2c3d TgclocalsÂ·3280bececceccd33cb74587feedb1f9f     <autogenerated>þ""".noCache.ZapÂ·i `  ReH%(   H    AeH%(   H    iÃ      @         ""..pad  type.[8]uint8 ""..this  type."".noCache 0 0 ,0      TgclocalsÂ·5d05a78f811f5c3f62710534cdce0004 TgclocalsÂ·3280bececceccd33cb74587feedb1f9f     <autogenerated>þTgclocalsÂ·3280bececceccd33cb74587feedb1f9f           þTgclocalsÂ·5d05a78f811f5c3f62710534cdce0004             þTgclocalsÂ·3280bececceccd33cb74587feedb1f9f           þTgclocalsÂ·a7a3692b8e27e823add69ec4239ba55f              þTgclocalsÂ·3280bececceccd33cb74587feedb1f9f           þTgclocalsÂ·a7a3692b8e27e823add69ec4239ba55f              þTgclocalsÂ·3280bececceccd33cb74587feedb1f9f           þTgclocalsÂ·a7a3692b8e27e823add69ec4239ba55f              þTgclocalsÂ·3280bececceccd33cb74587feedb1f9f           þTgclocalsÂ·a7a3692b8e27e823add69ec4239ba55f              þTgclocalsÂ·3280bececceccd33cb74587feedb1f9f           þTgclocalsÂ·a73fd2a0c6f832642aa9216fd9c5e6be             þTgclocalsÂ·3280bececceccd33cb74587feedb1f9f           þTgclocalsÂ·a037fff0187c50f783b94becc61a2c3d         	    þTgclocalsÂ·3280bececceccd33cb74587feedb1f9f           þTgclocalsÂ·5d05a78f811f5c3f62710534cdce0004             þTgclocalsÂ·3280bececceccd33cb74587feedb1f9f           þTgclocalsÂ·519efd86263089ddb84df3cfe7fd2992             þTgclocalsÂ·3280bececceccd33cb74587feedb1f9f           þTgclocalsÂ·3280bececceccd33cb74587feedb1f9f           þ&go.string."default" 0  0               default    &go.string."default"   þ go.string."none" 0  *               none     go.string."none"   þ$go.string."snappy" 0  .               snappy    $go.string."snappy"   þ&go.string."invalid" 0  0               invalid    &go.string."invalid"   þTgclocalsÂ·3280bececceccd33cb74587feedb1f9f           þTgclocalsÂ·a73fd2a0c6f832642aa9216fd9c5e6be             þTgclocalsÂ·3280bececceccd33cb74587feedb1f9f           þTgclocalsÂ·13d3af77a5bf02af6db4588efb2ea811             þTgclocalsÂ·3280bececceccd33cb74587feedb1f9f           þTgclocalsÂ·a08e9001cb8f9d822225de3b8e406515             þTgclocalsÂ·3280bececceccd33cb74587feedb1f9f           þTgclocalsÂ·06cab038d51064a089bda21fa03e00f7             þTgclocalsÂ·3280bececceccd33cb74587feedb1f9f           þTgclocalsÂ·06cab038d51064a089bda21fa03e00f7             þTgclocalsÂ·3280bececceccd33cb74587feedb1f9f           þTgclocalsÂ·06cab038d51064a089bda21fa03e00f7             þ*ðgo.itab.github.com/syndtr/goleveldb/leveldb/comparer.bytesComparer.github.com/syndtr/goleveldb/leveldb/comparer.Comparer     þTgclocalsÂ·3280bececceccd33cb74587feedb1f9f           þTgclocalsÂ·a08e9001cb8f9d822225de3b8e406515             þTgclocalsÂ·3280bececceccd33cb74587feedb1f9f           þTgclocalsÂ·06cab038d51064a089bda21fa03e00f7             þTgclocalsÂ·3280bececceccd33cb74587feedb1f9f           þTgclocalsÂ·06cab038d51064a089bda21fa03e00f7             þTgclocalsÂ·3280bececceccd33cb74587feedb1f9f           þTgclocalsÂ·06cab038d51064a089bda21fa03e00f7             þTgclocalsÂ·3280bececceccd33cb74587feedb1f9f           þTgclocalsÂ·a08e9001cb8f9d822225de3b8e406515             þTgclocalsÂ·3280bececceccd33cb74587feedb1f9f           þTgclocalsÂ·64b411f0f44be3f38c26e84fc3239091             þTgclocalsÂ·3280bececceccd33cb74587feedb1f9f           þTgclocalsÂ·06cab038d51064a089bda21fa03e00f7             þTgclocalsÂ·3280bececceccd33cb74587feedb1f9f           þTgclocalsÂ·06cab038d51064a089bda21fa03e00f7             þTgclocalsÂ·3280bececceccd33cb74587feedb1f9f           þTgclocalsÂ·64b411f0f44be3f38c26e84fc3239091             þTgclocalsÂ·3280bececceccd33cb74587feedb1f9f           þTgclocalsÂ·06cab038d51064a089bda21fa03e00f7             þ*go.itab."".noCache.github.com/syndtr/goleveldb/leveldb/cache.Cache     þTgclocalsÂ·3280bececceccd33cb74587feedb1f9f           þTgclocalsÂ·3280bececceccd33cb74587feedb1f9f           þ*"".NoCache   htype.github.com/syndtr/goleveldb/leveldb/cache.Cache   þ,"".initdoneÂ·  type.uint8   þ""".statictmp_0002   type."".noCache   þ2"".noCache.SetCapacityÂ·f              ,"".noCache.SetCapacity   þ,"".noCache.CapacityÂ·f              &"".noCache.Capacity   þ,runtime.throwreturnÂ·f              &runtime.throwreturn   þ$"".noCache.UsedÂ·f              "".noCache.Used   þ$"".noCache.SizeÂ·f              "".noCache.Size   þ0"".noCache.NumObjectsÂ·f              *"".noCache.NumObjects   þ4"".noCache.GetNamespaceÂ·f              ."".noCache.GetNamespace   þ8"".noCache.PurgeNamespaceÂ·f              2"".noCache.PurgeNamespace   þ4"".noCache.ZapNamespaceÂ·f              ."".noCache.ZapNamespace   þ&"".noCache.PurgeÂ·f               "".noCache.Purge   þ""".noCache.ZapÂ·f              "".noCache.Zap   þ0"".Compression.StringÂ·f              *"".Compression.String   þ<"".(*Options).GetAltFiltersÂ·f              6"".(*Options).GetAltFilters   þ<"".(*Options).GetBlockCacheÂ·f              6"".(*Options).GetBlockCache   þP"".(*Options).GetBlockRestartIntervalÂ·f              J"".(*Options).GetBlockRestartInterval   þ:"".(*Options).GetBlockSizeÂ·f              4"".(*Options).GetBlockSize   þF"".(*Options).GetCachedOpenFilesÂ·f              @"".(*Options).GetCachedOpenFiles   þ8"".(*Options).GetComparerÂ·f              2"".(*Options).GetComparer   þ$runtime.convT2IÂ·f              runtime.convT2I   þ>"".(*Options).GetCompressionÂ·f              8"".(*Options).GetCompression   þ@"".(*Options).GetErrorIfExistÂ·f              :"".(*Options).GetErrorIfExist   þD"".(*Options).GetErrorIfMissingÂ·f              >"".(*Options).GetErrorIfMissing   þ4"".(*Options).GetFilterÂ·f              ."".(*Options).GetFilter   þ4"".(*Options).GetStrictÂ·f              ."".(*Options).GetStrict   þ>"".(*Options).GetWriteBufferÂ·f              8"".(*Options).GetWriteBuffer   þJ"".(*ReadOptions).GetDontFillCacheÂ·f              D"".(*ReadOptions).GetDontFillCache   þ<"".(*ReadOptions).GetStrictÂ·f              6"".(*ReadOptions).GetStrict   þ:"".(*WriteOptions).GetSyncÂ·f              4"".(*WriteOptions).GetSync   þ"".initÂ·f              "".init   þ(runtime.throwinitÂ·f              "runtime.throwinit   þdgithub.com/syndtr/goleveldb/leveldb/filter.initÂ·f              ^github.com/syndtr/goleveldb/leveldb/filter.init   þhgithub.com/syndtr/goleveldb/leveldb/comparer.initÂ·f              bgithub.com/syndtr/goleveldb/leveldb/comparer.init   þbgithub.com/syndtr/goleveldb/leveldb/cache.initÂ·f              \github.com/syndtr/goleveldb/leveldb/cache.init   þ0type..gc.*"".Compression @  @                               þ8go.string."*opt.Compression" P  B               *opt.Compression    8go.string."*opt.Compression"   þgo.string."opt" 0  (               opt    go.string."opt"   þ.go.string."Compression" @  8               Compression    .go.string."Compression"   þ$go.string."String" 0  .               String    $go.string."String"   þTgclocalsÂ·3280bececceccd33cb74587feedb1f9f           þTgclocalsÂ·a08e9001cb8f9d822225de3b8e406515             þJtype..gc.func(*"".Compression) string @  @                               þRgo.string."func(*opt.Compression) string" `  \               func(*opt.Compression) string    Rgo.string."func(*opt.Compression) string"   þBtype.func(*"".Compression) string          «>©                                                                                                                      À  runtime.algarray   0  Jtype..gc.func(*"".Compression) string   @  Rgo.string."func(*opt.Compression) string"   `  Tgo.weak.type.*func(*"".Compression) string   p  "runtime.zerovalue   ð Btype.func(*"".Compression) string   À Btype.func(*"".Compression) string   ð  (type.*"".Compression     type.string   þ,type..gc.func() string @  @                               þ2go.string."func() string" @  <               func() string    2go.string."func() string"   þ$type.func() string          ¢mË                                                                                                                À  runtime.algarray   0  ,type..gc.func() string   @  2go.string."func() string"   `  6go.weak.type.*func() string   p  "runtime.zerovalue   ð $type.func() string   Àð $type.func() string   ð  type.string   þ(type.*"".Compression  À  À       íL                                                                                                                                                À  runtime.algarray   0  0type..gc.*"".Compression   @  8go.string."*opt.Compression"   `  :go.weak.type.**"".Compression   p  "runtime.zerovalue     &type."".Compression   P (type.*"".Compression   °à (type.*"".Compression   à  $go.string."String"     $type.func() string     Btype.func(*"".Compression) string      0"".(*Compression).String   °  0"".(*Compression).String   þ.type..gc."".Compression                     þ6go.string."opt.Compression" @  @               opt.Compression    6go.string."opt.Compression"   þHtype..gc.func("".Compression) string @  @                               þPgo.string."func(opt.Compression) string" `  Z               func(opt.Compression) string    Pgo.string."func(opt.Compression) string"   þ@type.func("".Compression) string          êM                                                                                                                      À  runtime.algarray   0  Htype..gc.func("".Compression) string   @  Pgo.string."func(opt.Compression) string"   `  Rgo.weak.type.*func("".Compression) string   p  "runtime.zerovalue   ð @type.func("".Compression) string   À @type.func("".Compression) string   ð  &type."".Compression     type.string   þ&type."".Compression  °  °       û+F                                                                                                                                         À  runtime.algarray   0  .type..gc."".Compression   @  6go.string."opt.Compression"   `  (type.*"".Compression   p  "runtime.zerovalue   P &type."".Compression     .go.string."Compression"     "go.importpath."".    Ð &type."".Compression   Ð  $go.string."String"   ð  $type.func() string     @type.func("".Compression) string     *"".Compression.String      *"".Compression.String   þttype..gc.github.com/syndtr/goleveldb/leveldb/filter.Filter @  @       	                        þxtype..gc.[]github.com/syndtr/goleveldb/leveldb/filter.Filter P  P       
                               0  ttype..gc.github.com/syndtr/goleveldb/leveldb/filter.Filter   þ6go.string."[]filter.Filter" @  @               []filter.Filter    6go.string."[]filter.Filter"   þptype.[]github.com/syndtr/goleveldb/leveldb/filter.Filter          ®¿S÷                                                          À  runtime.algarray   0  xtype..gc.[]github.com/syndtr/goleveldb/leveldb/filter.Filter   @  6go.string."[]filter.Filter"   `  go.weak.type.*[]github.com/syndtr/goleveldb/leveldb/filter.Filter   p  "runtime.zerovalue     ltype.github.com/syndtr/goleveldb/leveldb/filter.Filter   þgo.typelink.[]filter.Filter/[]github.com/syndtr/goleveldb/leveldb/filter.Filter              ptype.[]github.com/syndtr/goleveldb/leveldb/filter.Filter   þ&type..gc.*"".Strict @  @                               þ.go.string."*opt.Strict" @  8               *opt.Strict    .go.string."*opt.Strict"   þtype.*"".Strict           ñLÔ                                                          À  runtime.algarray   0  &type..gc.*"".Strict   @  .go.string."*opt.Strict"   `  0go.weak.type.**"".Strict   p  "runtime.zerovalue     type."".Strict   þ$type..gc."".Strict                     þ,go.string."opt.Strict" @  6        
       opt.Strict    ,go.string."opt.Strict"   þ$go.string."Strict" 0  .               Strict    $go.string."Strict"   þtype."".Strict  Ð  Ð       Æ¦Ö                                                                                          À  runtime.algarray   0  $type..gc."".Strict   @  ,go.string."opt.Strict"   `  type.*"".Strict   p  "runtime.zerovalue   P type."".Strict     $go.string."Strict"     "go.importpath."".    Ð type."".Strict   þ&type..gc."".Options °  °       
                       	              	       @       	       `               0  ttype..gc.github.com/syndtr/goleveldb/leveldb/filter.Filter   þ.go.string."opt.Options" @  8               opt.Options    .go.string."opt.Options"   þ,go.string."AltFilters" @  6        
       AltFilters    ,go.string."AltFilters"   þ,go.string."BlockCache" @  6        
       BlockCache    ,go.string."BlockCache"   þ@go.string."BlockRestartInterval" P  J               BlockRestartInterval    @go.string."BlockRestartInterval"   þ*go.string."BlockSize" @  4        	       BlockSize    *go.string."BlockSize"   þ6go.string."CachedOpenFiles" @  @               CachedOpenFiles    6go.string."CachedOpenFiles"   þ(go.string."Comparer" @  2               Comparer    (go.string."Comparer"   þ0go.string."ErrorIfExist" @  :               ErrorIfExist    0go.string."ErrorIfExist"   þ4go.string."ErrorIfMissing" @  >               ErrorIfMissing    4go.string."ErrorIfMissing"   þ$go.string."Filter" 0  .               Filter    $go.string."Filter"   þ.go.string."WriteBuffer" @  8               WriteBuffer    .go.string."WriteBuffer"   þ&go.string."Options" 0  0               Options    &go.string."Options"   þtype."".Options  À	  À	       ¸! 5                                                                                                                                                                                      (                                       0                                       8                                       @                                       P                                       X                                       Y                                       `                                       p                                       x                                               D À  runtime.algarray   0  &type..gc."".Options   @  .go.string."opt.Options"   `   type.*"".Options   p  "runtime.zerovalue   ° type."".Options   °  ,go.string."AltFilters"   Ð  ptype.[]github.com/syndtr/goleveldb/leveldb/filter.Filter     ,go.string."BlockCache"      htype.github.com/syndtr/goleveldb/leveldb/cache.Cache   Ð  @go.string."BlockRestartInterval"   ð  type.int      *go.string."BlockSize"   À  type.int   ð  6go.string."CachedOpenFiles"     type.int   À  (go.string."Comparer"   à  ttype.github.com/syndtr/goleveldb/leveldb/comparer.Comparer     .go.string."Compression"   °  &type."".Compression   à  0go.string."ErrorIfExist"     type.bool   °  4go.string."ErrorIfMissing"   Ð  type.bool     $go.string."Filter"      ltype.github.com/syndtr/goleveldb/leveldb/filter.Filter   Ð  $go.string."Strict"   ð  type."".Strict      .go.string."WriteBuffer"   À  type.int   Pð type."".Options   ð  &go.string."Options"   	  "go.importpath."".   	À	 type."".Options   þ(type..gc.*"".Options P  P                                      0  &type..gc."".Options   þ0go.string."*opt.Options" @  :               *opt.Options    0go.string."*opt.Options"   þtype..gc.func(*"".Options) []github.com/syndtr/goleveldb/leveldb/filter.Filter @  @                               þ\go.string."func(*opt.Options) []filter.Filter" p  f        "       func(*opt.Options) []filter.Filter    \go.string."func(*opt.Options) []filter.Filter"   þtype.func(*"".Options) []github.com/syndtr/goleveldb/leveldb/filter.Filter          òj                                                                                                                       À  runtime.algarray   0  type..gc.func(*"".Options) []github.com/syndtr/goleveldb/leveldb/filter.Filter   @  \go.string."func(*opt.Options) []filter.Filter"   `  ¦go.weak.type.*func(*"".Options) []github.com/syndtr/goleveldb/leveldb/filter.Filter   p  "runtime.zerovalue   ð type.func(*"".Options) []github.com/syndtr/goleveldb/leveldb/filter.Filter   À type.func(*"".Options) []github.com/syndtr/goleveldb/leveldb/filter.Filter   ð   type.*"".Options     ptype.[]github.com/syndtr/goleveldb/leveldb/filter.Filter   þtype..gc.func(*"".Options) github.com/syndtr/goleveldb/leveldb/cache.Cache @  @                               þTgo.string."func(*opt.Options) cache.Cache" `  ^               func(*opt.Options) cache.Cache    Tgo.string."func(*opt.Options) cache.Cache"   þtype.func(*"".Options) github.com/syndtr/goleveldb/leveldb/cache.Cache          I                                                                                                                      À  runtime.algarray   0  type..gc.func(*"".Options) github.com/syndtr/goleveldb/leveldb/cache.Cache   @  Tgo.string."func(*opt.Options) cache.Cache"   `  go.weak.type.*func(*"".Options) github.com/syndtr/goleveldb/leveldb/cache.Cache   p  "runtime.zerovalue   ð type.func(*"".Options) github.com/syndtr/goleveldb/leveldb/cache.Cache   À type.func(*"".Options) github.com/syndtr/goleveldb/leveldb/cache.Cache   ð   type.*"".Options     htype.github.com/syndtr/goleveldb/leveldb/cache.Cache   þ<type..gc.func(*"".Options) int @  @                               þDgo.string."func(*opt.Options) int" P  N               func(*opt.Options) int    Dgo.string."func(*opt.Options) int"   þ4type.func(*"".Options) int          %                                                                                                                      À  runtime.algarray   0  <type..gc.func(*"".Options) int   @  Dgo.string."func(*opt.Options) int"   `  Fgo.weak.type.*func(*"".Options) int   p  "runtime.zerovalue   ð 4type.func(*"".Options) int   À 4type.func(*"".Options) int   ð   type.*"".Options     type.int   þ type..gc.func(*"".Options) github.com/syndtr/goleveldb/leveldb/comparer.Comparer @  @                               þ`go.string."func(*opt.Options) comparer.Comparer" p  j        $       func(*opt.Options) comparer.Comparer    `go.string."func(*opt.Options) comparer.Comparer"   þtype.func(*"".Options) github.com/syndtr/goleveldb/leveldb/comparer.Comparer          ¡u>                                                                                                                      À  runtime.algarray   0   type..gc.func(*"".Options) github.com/syndtr/goleveldb/leveldb/comparer.Comparer   @  `go.string."func(*opt.Options) comparer.Comparer"   `  ªgo.weak.type.*func(*"".Options) github.com/syndtr/goleveldb/leveldb/comparer.Comparer   p  "runtime.zerovalue   ð type.func(*"".Options) github.com/syndtr/goleveldb/leveldb/comparer.Comparer   À type.func(*"".Options) github.com/syndtr/goleveldb/leveldb/comparer.Comparer   ð   type.*"".Options     ttype.github.com/syndtr/goleveldb/leveldb/comparer.Comparer   þRtype..gc.func(*"".Options) "".Compression @  @                               þ\go.string."func(*opt.Options) opt.Compression" p  f        "       func(*opt.Options) opt.Compression    \go.string."func(*opt.Options) opt.Compression"   þJtype.func(*"".Options) "".Compression          m¢_                                                                                                                      À  runtime.algarray   0  Rtype..gc.func(*"".Options) "".Compression   @  \go.string."func(*opt.Options) opt.Compression"   `  \go.weak.type.*func(*"".Options) "".Compression   p  "runtime.zerovalue   ð Jtype.func(*"".Options) "".Compression   À Jtype.func(*"".Options) "".Compression   ð   type.*"".Options     &type."".Compression   þ>type..gc.func(*"".Options) bool @  @                               þFgo.string."func(*opt.Options) bool" P  P               func(*opt.Options) bool    Fgo.string."func(*opt.Options) bool"   þ6type.func(*"".Options) bool          Êî                                                                                                                      À  runtime.algarray   0  >type..gc.func(*"".Options) bool   @  Fgo.string."func(*opt.Options) bool"   `  Hgo.weak.type.*func(*"".Options) bool   p  "runtime.zerovalue   ð 6type.func(*"".Options) bool   À 6type.func(*"".Options) bool   ð   type.*"".Options     type.bool   þtype..gc.func(*"".Options) github.com/syndtr/goleveldb/leveldb/filter.Filter @  @                               þXgo.string."func(*opt.Options) filter.Filter" p  b                func(*opt.Options) filter.Filter    Xgo.string."func(*opt.Options) filter.Filter"   þtype.func(*"".Options) github.com/syndtr/goleveldb/leveldb/filter.Filter          Mß                                                                                                                      À  runtime.algarray   0  type..gc.func(*"".Options) github.com/syndtr/goleveldb/leveldb/filter.Filter   @  Xgo.string."func(*opt.Options) filter.Filter"   `  ¢go.weak.type.*func(*"".Options) github.com/syndtr/goleveldb/leveldb/filter.Filter   p  "runtime.zerovalue   ð type.func(*"".Options) github.com/syndtr/goleveldb/leveldb/filter.Filter   À type.func(*"".Options) github.com/syndtr/goleveldb/leveldb/filter.Filter   ð   type.*"".Options     ltype.github.com/syndtr/goleveldb/leveldb/filter.Filter   þTtype..gc.func(*"".Options, "".Strict) bool @  @                               þ^go.string."func(*opt.Options, opt.Strict) bool" p  h        #       func(*opt.Options, opt.Strict) bool    ^go.string."func(*opt.Options, opt.Strict) bool"   þLtype.func(*"".Options, "".Strict) bool            Âk0,                                                                                                                              À  runtime.algarray   0  Ttype..gc.func(*"".Options, "".Strict) bool   @  ^go.string."func(*opt.Options, opt.Strict) bool"   `  ^go.weak.type.*func(*"".Options, "".Strict) bool   p  "runtime.zerovalue   ð Ltype.func(*"".Options, "".Strict) bool   À Ltype.func(*"".Options, "".Strict) bool   ð   type.*"".Options     type."".Strict     type.bool   þ2go.string."GetAltFilters" @  <               GetAltFilters    2go.string."GetAltFilters"   þtype..gc.func() []github.com/syndtr/goleveldb/leveldb/filter.Filter @  @                               þDgo.string."func() []filter.Filter" P  N               func() []filter.Filter    Dgo.string."func() []filter.Filter"   þ~type.func() []github.com/syndtr/goleveldb/leveldb/filter.Filter          ®Ñ                                                                                                                À  runtime.algarray   0  type..gc.func() []github.com/syndtr/goleveldb/leveldb/filter.Filter   @  Dgo.string."func() []filter.Filter"   `  go.weak.type.*func() []github.com/syndtr/goleveldb/leveldb/filter.Filter   p  "runtime.zerovalue   ð ~type.func() []github.com/syndtr/goleveldb/leveldb/filter.Filter   Àð ~type.func() []github.com/syndtr/goleveldb/leveldb/filter.Filter   ð  ptype.[]github.com/syndtr/goleveldb/leveldb/filter.Filter   þ2go.string."GetBlockCache" @  <               GetBlockCache    2go.string."GetBlockCache"   þ~type..gc.func() github.com/syndtr/goleveldb/leveldb/cache.Cache @  @                               þ<go.string."func() cache.Cache" P  F               func() cache.Cache    <go.string."func() cache.Cache"   þvtype.func() github.com/syndtr/goleveldb/leveldb/cache.Cache          t²;                                                                                                                À  runtime.algarray   0  ~type..gc.func() github.com/syndtr/goleveldb/leveldb/cache.Cache   @  <go.string."func() cache.Cache"   `  go.weak.type.*func() github.com/syndtr/goleveldb/leveldb/cache.Cache   p  "runtime.zerovalue   ð vtype.func() github.com/syndtr/goleveldb/leveldb/cache.Cache   Àð vtype.func() github.com/syndtr/goleveldb/leveldb/cache.Cache   ð  htype.github.com/syndtr/goleveldb/leveldb/cache.Cache   þFgo.string."GetBlockRestartInterval" P  P               GetBlockRestartInterval    Fgo.string."GetBlockRestartInterval"   þ&type..gc.func() int @  @                               þ,go.string."func() int" @  6        
       func() int    ,go.string."func() int"   þtype.func() int          å9à                                                                                                                À  runtime.algarray   0  &type..gc.func() int   @  ,go.string."func() int"   `  0go.weak.type.*func() int   p  "runtime.zerovalue   ð type.func() int   Àð type.func() int   ð  type.int   þ0go.string."GetBlockSize" @  :               GetBlockSize    0go.string."GetBlockSize"   þ<go.string."GetCachedOpenFiles" P  F               GetCachedOpenFiles    <go.string."GetCachedOpenFiles"   þ.go.string."GetComparer" @  8               GetComparer    .go.string."GetComparer"   þtype..gc.func() github.com/syndtr/goleveldb/leveldb/comparer.Comparer @  @                               þHgo.string."func() comparer.Comparer" `  R               func() comparer.Comparer    Hgo.string."func() comparer.Comparer"   þtype.func() github.com/syndtr/goleveldb/leveldb/comparer.Comparer          JÑñ                                                                                                                À  runtime.algarray   0  type..gc.func() github.com/syndtr/goleveldb/leveldb/comparer.Comparer   @  Hgo.string."func() comparer.Comparer"   `  go.weak.type.*func() github.com/syndtr/goleveldb/leveldb/comparer.Comparer   p  "runtime.zerovalue   ð type.func() github.com/syndtr/goleveldb/leveldb/comparer.Comparer   Àð type.func() github.com/syndtr/goleveldb/leveldb/comparer.Comparer   ð  ttype.github.com/syndtr/goleveldb/leveldb/comparer.Comparer   þ4go.string."GetCompression" @  >               GetCompression    4go.string."GetCompression"   þ<type..gc.func() "".Compression @  @                               þDgo.string."func() opt.Compression" P  N               func() opt.Compression    Dgo.string."func() opt.Compression"   þ4type.func() "".Compression          ü­                                                                                                                À  runtime.algarray   0  <type..gc.func() "".Compression   @  Dgo.string."func() opt.Compression"   `  Fgo.weak.type.*func() "".Compression   p  "runtime.zerovalue   ð 4type.func() "".Compression   Àð 4type.func() "".Compression   ð  &type."".Compression   þ6go.string."GetErrorIfExist" @  @               GetErrorIfExist    6go.string."GetErrorIfExist"   þ(type..gc.func() bool @  @                               þ.go.string."func() bool" @  8               func() bool    .go.string."func() bool"   þ type.func() bool          TËx                                                                                                                À  runtime.algarray   0  (type..gc.func() bool   @  .go.string."func() bool"   `  2go.weak.type.*func() bool   p  "runtime.zerovalue   ð  type.func() bool   Àð  type.func() bool   ð  type.bool   þ:go.string."GetErrorIfMissing" P  D               GetErrorIfMissing    :go.string."GetErrorIfMissing"   þ*go.string."GetFilter" @  4        	       GetFilter    *go.string."GetFilter"   þtype..gc.func() github.com/syndtr/goleveldb/leveldb/filter.Filter @  @                               þ@go.string."func() filter.Filter" P  J               func() filter.Filter    @go.string."func() filter.Filter"   þztype.func() github.com/syndtr/goleveldb/leveldb/filter.Filter          ^                                                                                                                À  runtime.algarray   0  type..gc.func() github.com/syndtr/goleveldb/leveldb/filter.Filter   @  @go.string."func() filter.Filter"   `  go.weak.type.*func() github.com/syndtr/goleveldb/leveldb/filter.Filter   p  "runtime.zerovalue   ð ztype.func() github.com/syndtr/goleveldb/leveldb/filter.Filter   Àð ztype.func() github.com/syndtr/goleveldb/leveldb/filter.Filter   ð  ltype.github.com/syndtr/goleveldb/leveldb/filter.Filter   þ*go.string."GetStrict" @  4        	       GetStrict    *go.string."GetStrict"   þ:type..gc.func("".Strict) bool @  @                               þBgo.string."func(opt.Strict) bool" P  L               func(opt.Strict) bool    Bgo.string."func(opt.Strict) bool"   þ2type.func("".Strict) bool          cpah                                                                                                                      À  runtime.algarray   0  :type..gc.func("".Strict) bool   @  Bgo.string."func(opt.Strict) bool"   `  Dgo.weak.type.*func("".Strict) bool   p  "runtime.zerovalue   ð 2type.func("".Strict) bool   À 2type.func("".Strict) bool   ð  type."".Strict     type.bool   þ4go.string."GetWriteBuffer" @  >               GetWriteBuffer    4go.string."GetWriteBuffer"   þ type.*"".Options  à
  à
       3uÑ                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                À  runtime.algarray   0  (type..gc.*"".Options   @  0go.string."*opt.Options"   `  2go.weak.type.**"".Options   p  "runtime.zerovalue     type."".Options   P  type.*"".Options   °à  type.*"".Options   à  2go.string."GetAltFilters"     ~type.func() []github.com/syndtr/goleveldb/leveldb/filter.Filter     type.func(*"".Options) []github.com/syndtr/goleveldb/leveldb/filter.Filter      6"".(*Options).GetAltFilters   °  6"".(*Options).GetAltFilters   À  2go.string."GetBlockCache"   à  vtype.func() github.com/syndtr/goleveldb/leveldb/cache.Cache   ð  type.func(*"".Options) github.com/syndtr/goleveldb/leveldb/cache.Cache     6"".(*Options).GetBlockCache     6"".(*Options).GetBlockCache      Fgo.string."GetBlockRestartInterval"   À  type.func() int   Ð  4type.func(*"".Options) int   à  J"".(*Options).GetBlockRestartInterval   ð  J"".(*Options).GetBlockRestartInterval     0go.string."GetBlockSize"      type.func() int   °  4type.func(*"".Options) int   À  4"".(*Options).GetBlockSize   Ð  4"".(*Options).GetBlockSize   à  <go.string."GetCachedOpenFiles"     type.func() int     4type.func(*"".Options) int      @"".(*Options).GetCachedOpenFiles   °  @"".(*Options).GetCachedOpenFiles   À  .go.string."GetComparer"   à  type.func() github.com/syndtr/goleveldb/leveldb/comparer.Comparer   ð  type.func(*"".Options) github.com/syndtr/goleveldb/leveldb/comparer.Comparer     2"".(*Options).GetComparer     2"".(*Options).GetComparer      4go.string."GetCompression"   À  4type.func() "".Compression   Ð  Jtype.func(*"".Options) "".Compression   à  8"".(*Options).GetCompression   ð  8"".(*Options).GetCompression     6go.string."GetErrorIfExist"       type.func() bool   °  6type.func(*"".Options) bool   À  :"".(*Options).GetErrorIfExist   Ð  :"".(*Options).GetErrorIfExist   à  :go.string."GetErrorIfMissing"      type.func() bool     6type.func(*"".Options) bool      >"".(*Options).GetErrorIfMissing   °  >"".(*Options).GetErrorIfMissing   À  *go.string."GetFilter"   à  ztype.func() github.com/syndtr/goleveldb/leveldb/filter.Filter   ð  type.func(*"".Options) github.com/syndtr/goleveldb/leveldb/filter.Filter   	  ."".(*Options).GetFilter   	  ."".(*Options).GetFilter    	  *go.string."GetStrict"   À	  2type.func("".Strict) bool   Ð	  Ltype.func(*"".Options, "".Strict) bool   à	  ."".(*Options).GetStrict   ð	  ."".(*Options).GetStrict   
  4go.string."GetWriteBuffer"    
  type.func() int   °
  4type.func(*"".Options) int   À
  8"".(*Options).GetWriteBuffer   Ð
  8"".(*Options).GetWriteBuffer   þTgclocalsÂ·3280bececceccd33cb74587feedb1f9f           þTgclocalsÂ·c34189e3b824b0bbe5cf2ca4e567d435         &    þTgclocalsÂ·3280bececceccd33cb74587feedb1f9f           þTgclocalsÂ·42ea2d2340f90cf3f379f66fe4b2d382         ¦    þ0type..alg."".ReadOptions @  @                                   2type..hash."".ReadOptions     .type..eq."".ReadOptions       runtime.memprint   0  $runtime.memcopy128   þ.type..gc."".ReadOptions                     þ6go.string."opt.ReadOptions" @  @               opt.ReadOptions    6go.string."opt.ReadOptions"   þ2go.string."DontFillCache" @  <               DontFillCache    2go.string."DontFillCache"   þ.go.string."ReadOptions" @  8               ReadOptions    .go.string."ReadOptions"   þ&type."".ReadOptions             y0½                                                                                                                                                                                                 0type..alg."".ReadOptions   0  .type..gc."".ReadOptions   @  6go.string."opt.ReadOptions"   `  (type.*"".ReadOptions   p  "runtime.zerovalue   ° &type."".ReadOptions   °  2go.string."DontFillCache"   Ð  type.bool     $go.string."Strict"      type."".Strict   PÐ &type."".ReadOptions   Ð  .go.string."ReadOptions"   à  "go.importpath."".   ð  &type."".ReadOptions   þ0type..gc.*"".ReadOptions @  @                               þ8go.string."*opt.ReadOptions" P  B               *opt.ReadOptions    8go.string."*opt.ReadOptions"   þFtype..gc.func(*"".ReadOptions) bool @  @                               þNgo.string."func(*opt.ReadOptions) bool" `  X               func(*opt.ReadOptions) bool    Ngo.string."func(*opt.ReadOptions) bool"   þ>type.func(*"".ReadOptions) bool          {R»                                                                                                                      À  runtime.algarray   0  Ftype..gc.func(*"".ReadOptions) bool   @  Ngo.string."func(*opt.ReadOptions) bool"   `  Pgo.weak.type.*func(*"".ReadOptions) bool   p  "runtime.zerovalue   ð >type.func(*"".ReadOptions) bool   À >type.func(*"".ReadOptions) bool   ð  (type.*"".ReadOptions     type.bool   þ\type..gc.func(*"".ReadOptions, "".Strict) bool @  @                               þfgo.string."func(*opt.ReadOptions, opt.Strict) bool" p  p        '       func(*opt.ReadOptions, opt.Strict) bool    fgo.string."func(*opt.ReadOptions, opt.Strict) bool"   þTtype.func(*"".ReadOptions, "".Strict) bool            ~n                                                                                                                              À  runtime.algarray   0  \type..gc.func(*"".ReadOptions, "".Strict) bool   @  fgo.string."func(*opt.ReadOptions, opt.Strict) bool"   `  fgo.weak.type.*func(*"".ReadOptions, "".Strict) bool   p  "runtime.zerovalue   ð Ttype.func(*"".ReadOptions, "".Strict) bool   À Ttype.func(*"".ReadOptions, "".Strict) bool   ð  (type.*"".ReadOptions     type."".Strict     type.bool   þ8go.string."GetDontFillCache" P  B               GetDontFillCache    8go.string."GetDontFillCache"   þ(type.*"".ReadOptions             ®ýÄÚ                                                                                                                                                                                               $ À  runtime.algarray   0  0type..gc.*"".ReadOptions   @  8go.string."*opt.ReadOptions"   `  :go.weak.type.**"".ReadOptions   p  "runtime.zerovalue     &type."".ReadOptions   P (type.*"".ReadOptions   °à (type.*"".ReadOptions   à  8go.string."GetDontFillCache"      type.func() bool     >type.func(*"".ReadOptions) bool      D"".(*ReadOptions).GetDontFillCache   °  D"".(*ReadOptions).GetDontFillCache   À  *go.string."GetStrict"   à  2type.func("".Strict) bool   ð  Ttype.func(*"".ReadOptions, "".Strict) bool     6"".(*ReadOptions).GetStrict     6"".(*ReadOptions).GetStrict   þ0type..gc."".WriteOptions                     þ8go.string."opt.WriteOptions" P  B               opt.WriteOptions    8go.string."opt.WriteOptions"   þ go.string."Sync" 0  *               Sync     go.string."Sync"   þ0go.string."WriteOptions" @  :               WriteOptions    0go.string."WriteOptions"   þ(type."".WriteOptions  Ð  Ð       oÏ¦                                                                                                                                                          runtime.algarray   0  0type..gc."".WriteOptions   @  8go.string."opt.WriteOptions"   `  *type.*"".WriteOptions   p  "runtime.zerovalue   ° (type."".WriteOptions   °   go.string."Sync"   Ð  type.bool   P (type."".WriteOptions     0go.string."WriteOptions"     "go.importpath."".    Ð (type."".WriteOptions   þ2type..gc.*"".WriteOptions @  @                               þ:go.string."*opt.WriteOptions" P  D               *opt.WriteOptions    :go.string."*opt.WriteOptions"   þHtype..gc.func(*"".WriteOptions) bool @  @                               þPgo.string."func(*opt.WriteOptions) bool" `  Z               func(*opt.WriteOptions) bool    Pgo.string."func(*opt.WriteOptions) bool"   þ@type.func(*"".WriteOptions) bool          ¦Á                                                                                                                      À  runtime.algarray   0  Htype..gc.func(*"".WriteOptions) bool   @  Pgo.string."func(*opt.WriteOptions) bool"   `  Rgo.weak.type.*func(*"".WriteOptions) bool   p  "runtime.zerovalue   ð @type.func(*"".WriteOptions) bool   À @type.func(*"".WriteOptions) bool   ð  *type.*"".WriteOptions     type.bool   þ&go.string."GetSync" 0  0               GetSync    &go.string."GetSync"   þ*type.*"".WriteOptions  À  À       ÀØÙÃ                                                                                                                                                À  runtime.algarray   0  2type..gc.*"".WriteOptions   @  :go.string."*opt.WriteOptions"   `  <go.weak.type.**"".WriteOptions   p  "runtime.zerovalue     (type."".WriteOptions   P *type.*"".WriteOptions   °à *type.*"".WriteOptions   à  &go.string."GetSync"      type.func() bool     @type.func(*"".WriteOptions) bool      4"".(*WriteOptions).GetSync   °  4"".(*WriteOptions).GetSync   þ(type..gc.*"".noCache @  @                               þ0go.string."*opt.noCache" @  :               *opt.noCache    0go.string."*opt.noCache"   þ&go.string."noCache" 0  0               noCache    &go.string."noCache"   þ.go.string."SetCapacity" @  8               SetCapacity    .go.string."SetCapacity"   þTgclocalsÂ·3280bececceccd33cb74587feedb1f9f           þTgclocalsÂ·cd30d2bcfdea04ed7c49639580b4bd08             þ(go.string."Capacity" @  2               Capacity    (go.string."Capacity"   þTgclocalsÂ·3280bececceccd33cb74587feedb1f9f           þTgclocalsÂ·06cab038d51064a089bda21fa03e00f7             þ go.string."Used" 0  *               Used     go.string."Used"   þTgclocalsÂ·3280bececceccd33cb74587feedb1f9f           þTgclocalsÂ·06cab038d51064a089bda21fa03e00f7             þ go.string."Size" 0  *               Size     go.string."Size"   þTgclocalsÂ·3280bececceccd33cb74587feedb1f9f           þTgclocalsÂ·06cab038d51064a089bda21fa03e00f7             þ,go.string."NumObjects" @  6        
       NumObjects    ,go.string."NumObjects"   þTgclocalsÂ·3280bececceccd33cb74587feedb1f9f           þTgclocalsÂ·06cab038d51064a089bda21fa03e00f7             þ0go.string."GetNamespace" @  :               GetNamespace    0go.string."GetNamespace"   þTgclocalsÂ·d64e51a4c4bfeaa840e480961ec6b0b3              þTgclocalsÂ·6a2e5ab2d393a1bfd331903fbd0fd425             þ4go.string."PurgeNamespace" @  >               PurgeNamespace    4go.string."PurgeNamespace"   þTgclocalsÂ·3280bececceccd33cb74587feedb1f9f           þTgclocalsÂ·c34189e3b824b0bbe5cf2ca4e567d435         &    þ0go.string."ZapNamespace" @  :               ZapNamespace    0go.string."ZapNamespace"   þTgclocalsÂ·3280bececceccd33cb74587feedb1f9f           þTgclocalsÂ·cd30d2bcfdea04ed7c49639580b4bd08             þ"go.string."Purge" 0  ,               Purge    "go.string."Purge"   þTgclocalsÂ·3280bececceccd33cb74587feedb1f9f           þTgclocalsÂ·e8c55b930b09fa5028b5e4b78b8932dc         
    þgo.string."Zap" 0  (               Zap    go.string."Zap"   þTgclocalsÂ·3280bececceccd33cb74587feedb1f9f           þTgclocalsÂ·519efd86263089ddb84df3cfe7fd2992             þ<type..gc.func(*"".noCache) int @  @                               þDgo.string."func(*opt.noCache) int" P  N               func(*opt.noCache) int    Dgo.string."func(*opt.noCache) int"   þ4type.func(*"".noCache) int          ìØËë                                                                                                                      À  runtime.algarray   0  <type..gc.func(*"".noCache) int   @  Dgo.string."func(*opt.noCache) int"   `  Fgo.weak.type.*func(*"".noCache) int   p  "runtime.zerovalue   ð 4type.func(*"".noCache) int   À 4type.func(*"".noCache) int   ð   type.*"".noCache     type.int   þ¬type..gc.func(*"".noCache, uint64) github.com/syndtr/goleveldb/leveldb/cache.Namespace @  @                               þlgo.string."func(*opt.noCache, uint64) cache.Namespace"   v        *       func(*opt.noCache, uint64) cache.Namespace    lgo.string."func(*opt.noCache, uint64) cache.Namespace"   þ¤type.func(*"".noCache, uint64) github.com/syndtr/goleveldb/leveldb/cache.Namespace            AD                                                                                                                              À  runtime.algarray   0  ¬type..gc.func(*"".noCache, uint64) github.com/syndtr/goleveldb/leveldb/cache.Namespace   @  lgo.string."func(*opt.noCache, uint64) cache.Namespace"   `  ¶go.weak.type.*func(*"".noCache, uint64) github.com/syndtr/goleveldb/leveldb/cache.Namespace   p  "runtime.zerovalue   ð ¤type.func(*"".noCache, uint64) github.com/syndtr/goleveldb/leveldb/cache.Namespace   À ¤type.func(*"".noCache, uint64) github.com/syndtr/goleveldb/leveldb/cache.Namespace   ð   type.*"".noCache     type.uint64     ptype.github.com/syndtr/goleveldb/leveldb/cache.Namespace   þtype..gc.func(*"".noCache, github.com/syndtr/goleveldb/leveldb/cache.PurgeFin) @  @                               þ\go.string."func(*opt.noCache, cache.PurgeFin)" p  f        "       func(*opt.noCache, cache.PurgeFin)    \go.string."func(*opt.noCache, cache.PurgeFin)"   þtype.func(*"".noCache, github.com/syndtr/goleveldb/leveldb/cache.PurgeFin)          ù                                                                                                                        À  runtime.algarray   0  type..gc.func(*"".noCache, github.com/syndtr/goleveldb/leveldb/cache.PurgeFin)   @  \go.string."func(*opt.noCache, cache.PurgeFin)"   `  ¦go.weak.type.*func(*"".noCache, github.com/syndtr/goleveldb/leveldb/cache.PurgeFin)   p  "runtime.zerovalue   ð type.func(*"".noCache, github.com/syndtr/goleveldb/leveldb/cache.PurgeFin)   À type.func(*"".noCache, github.com/syndtr/goleveldb/leveldb/cache.PurgeFin)   ð   type.*"".noCache     ntype.github.com/syndtr/goleveldb/leveldb/cache.PurgeFin   þ¬type..gc.func(*"".noCache, uint64, github.com/syndtr/goleveldb/leveldb/cache.PurgeFin) @  @                               þlgo.string."func(*opt.noCache, uint64, cache.PurgeFin)"   v        *       func(*opt.noCache, uint64, cache.PurgeFin)    lgo.string."func(*opt.noCache, uint64, cache.PurgeFin)"   þ¤type.func(*"".noCache, uint64, github.com/syndtr/goleveldb/leveldb/cache.PurgeFin)            a9                                                                                                                                À  runtime.algarray   0  ¬type..gc.func(*"".noCache, uint64, github.com/syndtr/goleveldb/leveldb/cache.PurgeFin)   @  lgo.string."func(*opt.noCache, uint64, cache.PurgeFin)"   `  ¶go.weak.type.*func(*"".noCache, uint64, github.com/syndtr/goleveldb/leveldb/cache.PurgeFin)   p  "runtime.zerovalue   ð ¤type.func(*"".noCache, uint64, github.com/syndtr/goleveldb/leveldb/cache.PurgeFin)   À  ¤type.func(*"".noCache, uint64, github.com/syndtr/goleveldb/leveldb/cache.PurgeFin)   ð   type.*"".noCache     type.uint64     ntype.github.com/syndtr/goleveldb/leveldb/cache.PurgeFin   þ>type..gc.func(*"".noCache, int) @  @                               þFgo.string."func(*opt.noCache, int)" P  P               func(*opt.noCache, int)    Fgo.string."func(*opt.noCache, int)"   þ6type.func(*"".noCache, int)          #ôó¬                                                                                                                        À  runtime.algarray   0  >type..gc.func(*"".noCache, int)   @  Fgo.string."func(*opt.noCache, int)"   `  Hgo.weak.type.*func(*"".noCache, int)   p  "runtime.zerovalue   ð 6type.func(*"".noCache, int)   À 6type.func(*"".noCache, int)   ð   type.*"".noCache     type.int   þ4type..gc.func(*"".noCache) @  @                               þ<go.string."func(*opt.noCache)" P  F               func(*opt.noCache)    <go.string."func(*opt.noCache)"   þ,type.func(*"".noCache)          Ú§                                                                                                                À  runtime.algarray   0  4type..gc.func(*"".noCache)   @  <go.string."func(*opt.noCache)"   `  >go.weak.type.*func(*"".noCache)   p  "runtime.zerovalue   ð ,type.func(*"".noCache)   À ,type.func(*"".noCache)   ð   type.*"".noCache   þDtype..gc.func(*"".noCache, uint64) @  @                               þLgo.string."func(*opt.noCache, uint64)" `  V               func(*opt.noCache, uint64)    Lgo.string."func(*opt.noCache, uint64)"   þ<type.func(*"".noCache, uint64)          °2Ö                                                                                                                        À  runtime.algarray   0  Dtype..gc.func(*"".noCache, uint64)   @  Lgo.string."func(*opt.noCache, uint64)"   `  Ngo.weak.type.*func(*"".noCache, uint64)   p  "runtime.zerovalue   ð <type.func(*"".noCache, uint64)   À <type.func(*"".noCache, uint64)   ð   type.*"".noCache     type.uint64   þtype..gc.func(uint64) github.com/syndtr/goleveldb/leveldb/cache.Namespace @  @                               þPgo.string."func(uint64) cache.Namespace" `  Z               func(uint64) cache.Namespace    Pgo.string."func(uint64) cache.Namespace"   þtype.func(uint64) github.com/syndtr/goleveldb/leveldb/cache.Namespace          QÏ                                                                                                                      À  runtime.algarray   0  type..gc.func(uint64) github.com/syndtr/goleveldb/leveldb/cache.Namespace   @  Pgo.string."func(uint64) cache.Namespace"   `  go.weak.type.*func(uint64) github.com/syndtr/goleveldb/leveldb/cache.Namespace   p  "runtime.zerovalue   ð type.func(uint64) github.com/syndtr/goleveldb/leveldb/cache.Namespace   À type.func(uint64) github.com/syndtr/goleveldb/leveldb/cache.Namespace   ð  type.uint64     ptype.github.com/syndtr/goleveldb/leveldb/cache.Namespace   þtype..gc.func(github.com/syndtr/goleveldb/leveldb/cache.PurgeFin) @  @                               þ@go.string."func(cache.PurgeFin)" P  J               func(cache.PurgeFin)    @go.string."func(cache.PurgeFin)"   þztype.func(github.com/syndtr/goleveldb/leveldb/cache.PurgeFin)          !Ì&¬                                                                                                                À  runtime.algarray   0  type..gc.func(github.com/syndtr/goleveldb/leveldb/cache.PurgeFin)   @  @go.string."func(cache.PurgeFin)"   `  go.weak.type.*func(github.com/syndtr/goleveldb/leveldb/cache.PurgeFin)   p  "runtime.zerovalue   ð ztype.func(github.com/syndtr/goleveldb/leveldb/cache.PurgeFin)   À ztype.func(github.com/syndtr/goleveldb/leveldb/cache.PurgeFin)   ð  ntype.github.com/syndtr/goleveldb/leveldb/cache.PurgeFin   þtype..gc.func(uint64, github.com/syndtr/goleveldb/leveldb/cache.PurgeFin) @  @                               þPgo.string."func(uint64, cache.PurgeFin)" `  Z               func(uint64, cache.PurgeFin)    Pgo.string."func(uint64, cache.PurgeFin)"   þtype.func(uint64, github.com/syndtr/goleveldb/leveldb/cache.PurgeFin)          «çO                                                                                                                        À  runtime.algarray   0  type..gc.func(uint64, github.com/syndtr/goleveldb/leveldb/cache.PurgeFin)   @  Pgo.string."func(uint64, cache.PurgeFin)"   `  go.weak.type.*func(uint64, github.com/syndtr/goleveldb/leveldb/cache.PurgeFin)   p  "runtime.zerovalue   ð type.func(uint64, github.com/syndtr/goleveldb/leveldb/cache.PurgeFin)   À type.func(uint64, github.com/syndtr/goleveldb/leveldb/cache.PurgeFin)   ð  type.uint64     ntype.github.com/syndtr/goleveldb/leveldb/cache.PurgeFin   þ$type..gc.func(int) @  @                               þ*go.string."func(int)" @  4        	       func(int)    *go.string."func(int)"   þtype.func(int)          æñ                                                                                                                À  runtime.algarray   0  $type..gc.func(int)   @  *go.string."func(int)"   `  .go.weak.type.*func(int)   p  "runtime.zerovalue   ð type.func(int)   À type.func(int)   ð  type.int   þtype..gc.func() @  @                               þ$go.string."func()" 0  .               func()    $go.string."func()"   þtype.func() ð  ð       ö¼ö                                                                                                          À  runtime.algarray   0  type..gc.func()   @  $go.string."func()"   `  (go.weak.type.*func()   p  "runtime.zerovalue   ð type.func()   Àð type.func()   þ*type..gc.func(uint64) @  @                               þ0go.string."func(uint64)" @  :               func(uint64)    0go.string."func(uint64)"   þ"type.func(uint64)          G'Ö                                                                                                                À  runtime.algarray   0  *type..gc.func(uint64)   @  0go.string."func(uint64)"   `  4go.weak.type.*func(uint64)   p  "runtime.zerovalue   ð "type.func(uint64)   À "type.func(uint64)   ð  type.uint64   þ type.*"".noCache   	   	       þ;ÏJ                                                                                 
       
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                       t À  runtime.algarray   0  (type..gc.*"".noCache   @  0go.string."*opt.noCache"   `  2go.weak.type.**"".noCache   p  "runtime.zerovalue     type."".noCache   P  type.*"".noCache   °à  type.*"".noCache   à  (go.string."Capacity"     type.func() int     4type.func(*"".noCache) int      ,"".(*noCache).Capacity   °  ,"".(*noCache).Capacity   À  0go.string."GetNamespace"   à  type.func(uint64) github.com/syndtr/goleveldb/leveldb/cache.Namespace   ð  ¤type.func(*"".noCache, uint64) github.com/syndtr/goleveldb/leveldb/cache.Namespace     4"".(*noCache).GetNamespace     4"".(*noCache).GetNamespace      ,go.string."NumObjects"   À  type.func() int   Ð  4type.func(*"".noCache) int   à  0"".(*noCache).NumObjects   ð  0"".(*noCache).NumObjects     "go.string."Purge"      ztype.func(github.com/syndtr/goleveldb/leveldb/cache.PurgeFin)   °  type.func(*"".noCache, github.com/syndtr/goleveldb/leveldb/cache.PurgeFin)   À  &"".(*noCache).Purge   Ð  &"".(*noCache).Purge   à  4go.string."PurgeNamespace"     type.func(uint64, github.com/syndtr/goleveldb/leveldb/cache.PurgeFin)     ¤type.func(*"".noCache, uint64, github.com/syndtr/goleveldb/leveldb/cache.PurgeFin)      8"".(*noCache).PurgeNamespace   °  8"".(*noCache).PurgeNamespace   À  .go.string."SetCapacity"   à  type.func(int)   ð  6type.func(*"".noCache, int)     2"".(*noCache).SetCapacity     2"".(*noCache).SetCapacity       go.string."Size"   À  type.func() int   Ð  4type.func(*"".noCache) int   à  $"".(*noCache).Size   ð  $"".(*noCache).Size      go.string."Used"      type.func() int   °  4type.func(*"".noCache) int   À  $"".(*noCache).Used   Ð  $"".(*noCache).Used   à  go.string."Zap"     type.func()     ,type.func(*"".noCache)      """.(*noCache).Zap   °  """.(*noCache).Zap   À  0go.string."ZapNamespace"   à  "type.func(uint64)   ð  <type.func(*"".noCache, uint64)   	  4"".(*noCache).ZapNamespace   	  4"".(*noCache).ZapNamespace   þ&type..gc."".noCache                      þ.go.string."opt.noCache" @  8               opt.noCache    .go.string."opt.noCache"   þTgclocalsÂ·3280bececceccd33cb74587feedb1f9f           þTgclocalsÂ·b7bb1decaed4396e7ccc4ad632a53ab8             þTgclocalsÂ·3280bececceccd33cb74587feedb1f9f           þTgclocalsÂ·9308e7ef08d2cc2f72ae1228688dacf9             þTgclocalsÂ·3280bececceccd33cb74587feedb1f9f           þTgclocalsÂ·9308e7ef08d2cc2f72ae1228688dacf9             þTgclocalsÂ·3280bececceccd33cb74587feedb1f9f           þTgclocalsÂ·9308e7ef08d2cc2f72ae1228688dacf9             þTgclocalsÂ·3280bececceccd33cb74587feedb1f9f           þTgclocalsÂ·9308e7ef08d2cc2f72ae1228688dacf9             þTgclocalsÂ·d64e51a4c4bfeaa840e480961ec6b0b3              þTgclocalsÂ·693fd2e6f4da98598ef49a51d91c93cd             þTgclocalsÂ·3280bececceccd33cb74587feedb1f9f           þTgclocalsÂ·791c81008460df34b82004848a9f44bf         %    þTgclocalsÂ·3280bececceccd33cb74587feedb1f9f           þTgclocalsÂ·b7bb1decaed4396e7ccc4ad632a53ab8             þTgclocalsÂ·3280bececceccd33cb74587feedb1f9f           þTgclocalsÂ·a037fff0187c50f783b94becc61a2c3d         	    þTgclocalsÂ·3280bececceccd33cb74587feedb1f9f           þTgclocalsÂ·5d05a78f811f5c3f62710534cdce0004             þ:type..gc.func("".noCache) int @  @                               þBgo.string."func(opt.noCache) int" P  L               func(opt.noCache) int    Bgo.string."func(opt.noCache) int"   þ2type.func("".noCache) int          Ûn@~                                                                                                                      À  runtime.algarray   0  :type..gc.func("".noCache) int   @  Bgo.string."func(opt.noCache) int"   `  Dgo.weak.type.*func("".noCache) int   p  "runtime.zerovalue   ð 2type.func("".noCache) int   À 2type.func("".noCache) int   ð  type."".noCache     type.int   þªtype..gc.func("".noCache, uint64) github.com/syndtr/goleveldb/leveldb/cache.Namespace @  @                               þjgo.string."func(opt.noCache, uint64) cache.Namespace"   t        )       func(opt.noCache, uint64) cache.Namespace    jgo.string."func(opt.noCache, uint64) cache.Namespace"   þ¢type.func("".noCache, uint64) github.com/syndtr/goleveldb/leveldb/cache.Namespace            ï                                                                                                                              À  runtime.algarray   0  ªtype..gc.func("".noCache, uint64) github.com/syndtr/goleveldb/leveldb/cache.Namespace   @  jgo.string."func(opt.noCache, uint64) cache.Namespace"   `  ´go.weak.type.*func("".noCache, uint64) github.com/syndtr/goleveldb/leveldb/cache.Namespace   p  "runtime.zerovalue   ð ¢type.func("".noCache, uint64) github.com/syndtr/goleveldb/leveldb/cache.Namespace   À ¢type.func("".noCache, uint64) github.com/syndtr/goleveldb/leveldb/cache.Namespace   ð  type."".noCache     type.uint64     ptype.github.com/syndtr/goleveldb/leveldb/cache.Namespace   þtype..gc.func("".noCache, github.com/syndtr/goleveldb/leveldb/cache.PurgeFin) @  @                               þZgo.string."func(opt.noCache, cache.PurgeFin)" p  d        !       func(opt.noCache, cache.PurgeFin)    Zgo.string."func(opt.noCache, cache.PurgeFin)"   þtype.func("".noCache, github.com/syndtr/goleveldb/leveldb/cache.PurgeFin)          IçH                                                                                                                        À  runtime.algarray   0  type..gc.func("".noCache, github.com/syndtr/goleveldb/leveldb/cache.PurgeFin)   @  Zgo.string."func(opt.noCache, cache.PurgeFin)"   `  ¤go.weak.type.*func("".noCache, github.com/syndtr/goleveldb/leveldb/cache.PurgeFin)   p  "runtime.zerovalue   ð type.func("".noCache, github.com/syndtr/goleveldb/leveldb/cache.PurgeFin)   À type.func("".noCache, github.com/syndtr/goleveldb/leveldb/cache.PurgeFin)   ð  type."".noCache     ntype.github.com/syndtr/goleveldb/leveldb/cache.PurgeFin   þªtype..gc.func("".noCache, uint64, github.com/syndtr/goleveldb/leveldb/cache.PurgeFin) @  @                               þjgo.string."func(opt.noCache, uint64, cache.PurgeFin)"   t        )       func(opt.noCache, uint64, cache.PurgeFin)    jgo.string."func(opt.noCache, uint64, cache.PurgeFin)"   þ¢type.func("".noCache, uint64, github.com/syndtr/goleveldb/leveldb/cache.PurgeFin)            ­ß                                                                                                                                À  runtime.algarray   0  ªtype..gc.func("".noCache, uint64, github.com/syndtr/goleveldb/leveldb/cache.PurgeFin)   @  jgo.string."func(opt.noCache, uint64, cache.PurgeFin)"   `  ´go.weak.type.*func("".noCache, uint64, github.com/syndtr/goleveldb/leveldb/cache.PurgeFin)   p  "runtime.zerovalue   ð ¢type.func("".noCache, uint64, github.com/syndtr/goleveldb/leveldb/cache.PurgeFin)   À  ¢type.func("".noCache, uint64, github.com/syndtr/goleveldb/leveldb/cache.PurgeFin)   ð  type."".noCache     type.uint64     ntype.github.com/syndtr/goleveldb/leveldb/cache.PurgeFin   þ<type..gc.func("".noCache, int) @  @                               þDgo.string."func(opt.noCache, int)" P  N               func(opt.noCache, int)    Dgo.string."func(opt.noCache, int)"   þ4type.func("".noCache, int)          º)±                                                                                                                        À  runtime.algarray   0  <type..gc.func("".noCache, int)   @  Dgo.string."func(opt.noCache, int)"   `  Fgo.weak.type.*func("".noCache, int)   p  "runtime.zerovalue   ð 4type.func("".noCache, int)   À 4type.func("".noCache, int)   ð  type."".noCache     type.int   þ2type..gc.func("".noCache) @  @                               þ:go.string."func(opt.noCache)" P  D               func(opt.noCache)    :go.string."func(opt.noCache)"   þ*type.func("".noCache)          Ø©£                                                                                                                À  runtime.algarray   0  2type..gc.func("".noCache)   @  :go.string."func(opt.noCache)"   `  <go.weak.type.*func("".noCache)   p  "runtime.zerovalue   ð *type.func("".noCache)   À *type.func("".noCache)   ð  type."".noCache   þBtype..gc.func("".noCache, uint64) @  @                               þJgo.string."func(opt.noCache, uint64)" `  T               func(opt.noCache, uint64)    Jgo.string."func(opt.noCache, uint64)"   þ:type.func("".noCache, uint64)          M?jW                                                                                                                        À  runtime.algarray   0  Btype..gc.func("".noCache, uint64)   @  Jgo.string."func(opt.noCache, uint64)"   `  Lgo.weak.type.*func("".noCache, uint64)   p  "runtime.zerovalue   ð :type.func("".noCache, uint64)   À :type.func("".noCache, uint64)   ð  type."".noCache     type.uint64   þtype."".noCache  À	  À	        ßH\                                                                                                 
       
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                       x @  runtime.algarray   0  &type..gc."".noCache   @  .go.string."opt.noCache"   `   type.*"".noCache   p  "runtime.zerovalue   ° type."".noCache   P° type."".noCache   °  &go.string."noCache"   À  "go.importpath."".   Ð type."".noCache     (go.string."Capacity"      type.func() int   °  2type.func("".noCache) int   À  ,"".noCache.CapacityÂ·i   Ð  &"".noCache.Capacity   à  0go.string."GetNamespace"     type.func(uint64) github.com/syndtr/goleveldb/leveldb/cache.Namespace     ¢type.func("".noCache, uint64) github.com/syndtr/goleveldb/leveldb/cache.Namespace      4"".noCache.GetNamespaceÂ·i   °  ."".noCache.GetNamespace   À  ,go.string."NumObjects"   à  type.func() int   ð  2type.func("".noCache) int     0"".noCache.NumObjectsÂ·i     *"".noCache.NumObjects      "go.string."Purge"   À  ztype.func(github.com/syndtr/goleveldb/leveldb/cache.PurgeFin)   Ð  type.func("".noCache, github.com/syndtr/goleveldb/leveldb/cache.PurgeFin)   à  &"".noCache.PurgeÂ·i   ð   "".noCache.Purge     4go.string."PurgeNamespace"      type.func(uint64, github.com/syndtr/goleveldb/leveldb/cache.PurgeFin)   °  ¢type.func("".noCache, uint64, github.com/syndtr/goleveldb/leveldb/cache.PurgeFin)   À  8"".noCache.PurgeNamespaceÂ·i   Ð  2"".noCache.PurgeNamespace   à  .go.string."SetCapacity"     type.func(int)     4type.func("".noCache, int)      2"".noCache.SetCapacityÂ·i   °  ,"".noCache.SetCapacity   À   go.string."Size"   à  type.func() int   ð  2type.func("".noCache) int     $"".noCache.SizeÂ·i     "".noCache.Size       go.string."Used"   À  type.func() int   Ð  2type.func("".noCache) int   à  $"".noCache.UsedÂ·i   ð  "".noCache.Used     go.string."Zap"      type.func()   °  *type.func("".noCache)   À  """.noCache.ZapÂ·i   Ð  "".noCache.Zap   à  0go.string."ZapNamespace"   	  "type.func(uint64)   	  :type.func("".noCache, uint64)    	  4"".noCache.ZapNamespaceÂ·i   °	  ."".noCache.ZapNamespace   þtype..gc.uint8                     þ type..gc.[]uint8 P  P       
                               0  type..gc.uint8   þ&go.string."[]uint8" 0  0               []uint8    &go.string."[]uint8"   þtype.[]uint8          ß~.8                                                          À  runtime.algarray   0   type..gc.[]uint8   @  &go.string."[]uint8"   `  *go.weak.type.*[]uint8   p  "runtime.zerovalue     type.uint8   þ6go.typelink.[]uint8/[]uint8              type.[]uint8   þ"type..gc.[8]uint8                     þ(go.string."[8]uint8" @  2               [8]uint8    (go.string."[8]uint8"   þtype.[8]uint8 °  °       >ù0´                                                                         À  runtime.algarray   0  "type..gc.[8]uint8   @  (go.string."[8]uint8"   `  ,go.weak.type.*[8]uint8   p  "runtime.zerovalue     type.uint8     type.[]uint8   þ:go.typelink.[8]uint8/[8]uint8              type.[8]uint8   þ&go.string."runtime" 0  0               runtime    &go.string."runtime"   þ,go.importpath.runtime.                       &go.string."runtime"   þjgo.string."github.com/syndtr/goleveldb/leveldb/cache"   t        )       github.com/syndtr/goleveldb/leveldb/cache    jgo.string."github.com/syndtr/goleveldb/leveldb/cache"   þpgo.importpath.github.com/syndtr/goleveldb/leveldb/cache.             )          jgo.string."github.com/syndtr/goleveldb/leveldb/cache"   þlgo.string."github.com/syndtr/goleveldb/leveldb/filter"   v        *       github.com/syndtr/goleveldb/leveldb/filter    lgo.string."github.com/syndtr/goleveldb/leveldb/filter"   þrgo.importpath.github.com/syndtr/goleveldb/leveldb/filter.             *          lgo.string."github.com/syndtr/goleveldb/leveldb/filter"   þpgo.string."github.com/syndtr/goleveldb/leveldb/comparer"   z        ,       github.com/syndtr/goleveldb/leveldb/comparer    pgo.string."github.com/syndtr/goleveldb/leveldb/comparer"   þvgo.importpath.github.com/syndtr/goleveldb/leveldb/comparer.             ,          pgo.string."github.com/syndtr/goleveldb/leveldb/comparer"   þ6"".(*Compression).StringÂ·f              0"".(*Compression).String   þ(runtime.panicwrapÂ·f              "runtime.panicwrap   þ8type..hash."".ReadOptionsÂ·f              2type..hash."".ReadOptions   þ$runtime.memhashÂ·f              runtime.memhash   þ4type..eq."".ReadOptionsÂ·f              .type..eq."".ReadOptions   þ8"".(*noCache).SetCapacityÂ·f              2"".(*noCache).SetCapacity   þ2"".(*noCache).CapacityÂ·f              ,"".(*noCache).Capacity   þ*"".(*noCache).UsedÂ·f              $"".(*noCache).Used   þ*"".(*noCache).SizeÂ·f              $"".(*noCache).Size   þ6"".(*noCache).NumObjectsÂ·f              0"".(*noCache).NumObjects   þ:"".(*noCache).GetNamespaceÂ·f              4"".(*noCache).GetNamespace   þ>"".(*noCache).PurgeNamespaceÂ·f              8"".(*noCache).PurgeNamespace   þ:"".(*noCache).ZapNamespaceÂ·f              4"".(*noCache).ZapNamespace   þ,"".(*noCache).PurgeÂ·f              &"".(*noCache).Purge   þ("".(*noCache).ZapÂ·f              """.(*noCache).Zap   þ8"".noCache.SetCapacityÂ·iÂ·f              2"".noCache.SetCapacityÂ·i   þ2"".noCache.CapacityÂ·iÂ·f              ,"".noCache.CapacityÂ·i   þ*"".noCache.UsedÂ·iÂ·f              $"".noCache.UsedÂ·i   þ*"".noCache.SizeÂ·iÂ·f              $"".noCache.SizeÂ·i   þ6"".noCache.NumObjectsÂ·iÂ·f              0"".noCache.NumObjectsÂ·i   þ:"".noCache.GetNamespaceÂ·iÂ·f              4"".noCache.GetNamespaceÂ·i   þ>"".noCache.PurgeNamespaceÂ·iÂ·f              8"".noCache.PurgeNamespaceÂ·i   þ:"".noCache.ZapNamespaceÂ·iÂ·f              4"".noCache.ZapNamespaceÂ·i   þ,"".noCache.PurgeÂ·iÂ·f              &"".noCache.PurgeÂ·i   þ("".noCache.ZapÂ·iÂ·f              """.noCache.ZapÂ·i   þ"runtime.zerovalue      ÿÿgo13ld 