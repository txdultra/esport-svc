// Autogenerated by Thrift Compiler (0.9.2)
// DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING

package service

import (
	"bytes"
	"fmt"

	"github.com/thrift"
)

// (needed to ensure safety because of naive import list construction.)
var _ = thrift.ZERO
var _ = fmt.Printf
var _ = bytes.Equal

var GoUnusedProtection__ int

type Member struct {
	Uid           int64  `thrift:"Uid,1" json:"Uid"`
	UserName      string `thrift:"UserName,2" json:"UserName"`
	NickName      string `thrift:"NickName,3" json:"NickName"`
	Email         string `thrift:"Email,4" json:"Email"`
	CreateTime    int64  `thrift:"CreateTime,5" json:"CreateTime"`
	Avatar        int64  `thrift:"Avatar,6" json:"Avatar"`
	PushId        string `thrift:"PushId,7" json:"PushId"`
	PushChannelId string `thrift:"PushChannelId,8" json:"PushChannelId"`
	PushProxy     int32  `thrift:"PushProxy,9" json:"PushProxy"`
	DeviceType    string `thrift:"DeviceType,10" json:"DeviceType"`
	Certified     bool   `thrift:"Certified,11" json:"Certified"`
}

func NewMember() *Member {
	return &Member{}
}

func (p *Member) GetUid() int64 {
	return p.Uid
}

func (p *Member) GetUserName() string {
	return p.UserName
}

func (p *Member) GetNickName() string {
	return p.NickName
}

func (p *Member) GetEmail() string {
	return p.Email
}

func (p *Member) GetCreateTime() int64 {
	return p.CreateTime
}

func (p *Member) GetAvatar() int64 {
	return p.Avatar
}

func (p *Member) GetPushId() string {
	return p.PushId
}

func (p *Member) GetPushChannelId() string {
	return p.PushChannelId
}

func (p *Member) GetPushProxy() int32 {
	return p.PushProxy
}

func (p *Member) GetDeviceType() string {
	return p.DeviceType
}

func (p *Member) GetCertified() bool {
	return p.Certified
}
func (p *Member) Read(iprot thrift.TProtocol) error {
	if _, err := iprot.ReadStructBegin(); err != nil {
		return fmt.Errorf("%T read error: %s", p, err)
	}
	for {
		_, fieldTypeId, fieldId, err := iprot.ReadFieldBegin()
		if err != nil {
			return fmt.Errorf("%T field %d read error: %s", p, fieldId, err)
		}
		if fieldTypeId == thrift.STOP {
			break
		}
		switch fieldId {
		case 1:
			if err := p.ReadField1(iprot); err != nil {
				return err
			}
		case 2:
			if err := p.ReadField2(iprot); err != nil {
				return err
			}
		case 3:
			if err := p.ReadField3(iprot); err != nil {
				return err
			}
		case 4:
			if err := p.ReadField4(iprot); err != nil {
				return err
			}
		case 5:
			if err := p.ReadField5(iprot); err != nil {
				return err
			}
		case 6:
			if err := p.ReadField6(iprot); err != nil {
				return err
			}
		case 7:
			if err := p.ReadField7(iprot); err != nil {
				return err
			}
		case 8:
			if err := p.ReadField8(iprot); err != nil {
				return err
			}
		case 9:
			if err := p.ReadField9(iprot); err != nil {
				return err
			}
		case 10:
			if err := p.ReadField10(iprot); err != nil {
				return err
			}
		case 11:
			if err := p.ReadField11(iprot); err != nil {
				return err
			}
		default:
			if err := iprot.Skip(fieldTypeId); err != nil {
				return err
			}
		}
		if err := iprot.ReadFieldEnd(); err != nil {
			return err
		}
	}
	if err := iprot.ReadStructEnd(); err != nil {
		return fmt.Errorf("%T read struct end error: %s", p, err)
	}
	return nil
}

func (p *Member) ReadField1(iprot thrift.TProtocol) error {
	if v, err := iprot.ReadI64(); err != nil {
		return fmt.Errorf("error reading field 1: %s", err)
	} else {
		p.Uid = v
	}
	return nil
}

func (p *Member) ReadField2(iprot thrift.TProtocol) error {
	if v, err := iprot.ReadString(); err != nil {
		return fmt.Errorf("error reading field 2: %s", err)
	} else {
		p.UserName = v
	}
	return nil
}

func (p *Member) ReadField3(iprot thrift.TProtocol) error {
	if v, err := iprot.ReadString(); err != nil {
		return fmt.Errorf("error reading field 3: %s", err)
	} else {
		p.NickName = v
	}
	return nil
}

func (p *Member) ReadField4(iprot thrift.TProtocol) error {
	if v, err := iprot.ReadString(); err != nil {
		return fmt.Errorf("error reading field 4: %s", err)
	} else {
		p.Email = v
	}
	return nil
}

func (p *Member) ReadField5(iprot thrift.TProtocol) error {
	if v, err := iprot.ReadI64(); err != nil {
		return fmt.Errorf("error reading field 5: %s", err)
	} else {
		p.CreateTime = v
	}
	return nil
}

func (p *Member) ReadField6(iprot thrift.TProtocol) error {
	if v, err := iprot.ReadI64(); err != nil {
		return fmt.Errorf("error reading field 6: %s", err)
	} else {
		p.Avatar = v
	}
	return nil
}

func (p *Member) ReadField7(iprot thrift.TProtocol) error {
	if v, err := iprot.ReadString(); err != nil {
		return fmt.Errorf("error reading field 7: %s", err)
	} else {
		p.PushId = v
	}
	return nil
}

func (p *Member) ReadField8(iprot thrift.TProtocol) error {
	if v, err := iprot.ReadString(); err != nil {
		return fmt.Errorf("error reading field 8: %s", err)
	} else {
		p.PushChannelId = v
	}
	return nil
}

func (p *Member) ReadField9(iprot thrift.TProtocol) error {
	if v, err := iprot.ReadI32(); err != nil {
		return fmt.Errorf("error reading field 9: %s", err)
	} else {
		p.PushProxy = v
	}
	return nil
}

func (p *Member) ReadField10(iprot thrift.TProtocol) error {
	if v, err := iprot.ReadString(); err != nil {
		return fmt.Errorf("error reading field 10: %s", err)
	} else {
		p.DeviceType = v
	}
	return nil
}

func (p *Member) ReadField11(iprot thrift.TProtocol) error {
	if v, err := iprot.ReadBool(); err != nil {
		return fmt.Errorf("error reading field 11: %s", err)
	} else {
		p.Certified = v
	}
	return nil
}

func (p *Member) Write(oprot thrift.TProtocol) error {
	if err := oprot.WriteStructBegin("Member"); err != nil {
		return fmt.Errorf("%T write struct begin error: %s", p, err)
	}
	if err := p.writeField1(oprot); err != nil {
		return err
	}
	if err := p.writeField2(oprot); err != nil {
		return err
	}
	if err := p.writeField3(oprot); err != nil {
		return err
	}
	if err := p.writeField4(oprot); err != nil {
		return err
	}
	if err := p.writeField5(oprot); err != nil {
		return err
	}
	if err := p.writeField6(oprot); err != nil {
		return err
	}
	if err := p.writeField7(oprot); err != nil {
		return err
	}
	if err := p.writeField8(oprot); err != nil {
		return err
	}
	if err := p.writeField9(oprot); err != nil {
		return err
	}
	if err := p.writeField10(oprot); err != nil {
		return err
	}
	if err := p.writeField11(oprot); err != nil {
		return err
	}
	if err := oprot.WriteFieldStop(); err != nil {
		return fmt.Errorf("write field stop error: %s", err)
	}
	if err := oprot.WriteStructEnd(); err != nil {
		return fmt.Errorf("write struct stop error: %s", err)
	}
	return nil
}

func (p *Member) writeField1(oprot thrift.TProtocol) (err error) {
	if err := oprot.WriteFieldBegin("Uid", thrift.I64, 1); err != nil {
		return fmt.Errorf("%T write field begin error 1:Uid: %s", p, err)
	}
	if err := oprot.WriteI64(int64(p.Uid)); err != nil {
		return fmt.Errorf("%T.Uid (1) field write error: %s", p, err)
	}
	if err := oprot.WriteFieldEnd(); err != nil {
		return fmt.Errorf("%T write field end error 1:Uid: %s", p, err)
	}
	return err
}

func (p *Member) writeField2(oprot thrift.TProtocol) (err error) {
	if err := oprot.WriteFieldBegin("UserName", thrift.STRING, 2); err != nil {
		return fmt.Errorf("%T write field begin error 2:UserName: %s", p, err)
	}
	if err := oprot.WriteString(string(p.UserName)); err != nil {
		return fmt.Errorf("%T.UserName (2) field write error: %s", p, err)
	}
	if err := oprot.WriteFieldEnd(); err != nil {
		return fmt.Errorf("%T write field end error 2:UserName: %s", p, err)
	}
	return err
}

func (p *Member) writeField3(oprot thrift.TProtocol) (err error) {
	if err := oprot.WriteFieldBegin("NickName", thrift.STRING, 3); err != nil {
		return fmt.Errorf("%T write field begin error 3:NickName: %s", p, err)
	}
	if err := oprot.WriteString(string(p.NickName)); err != nil {
		return fmt.Errorf("%T.NickName (3) field write error: %s", p, err)
	}
	if err := oprot.WriteFieldEnd(); err != nil {
		return fmt.Errorf("%T write field end error 3:NickName: %s", p, err)
	}
	return err
}

func (p *Member) writeField4(oprot thrift.TProtocol) (err error) {
	if err := oprot.WriteFieldBegin("Email", thrift.STRING, 4); err != nil {
		return fmt.Errorf("%T write field begin error 4:Email: %s", p, err)
	}
	if err := oprot.WriteString(string(p.Email)); err != nil {
		return fmt.Errorf("%T.Email (4) field write error: %s", p, err)
	}
	if err := oprot.WriteFieldEnd(); err != nil {
		return fmt.Errorf("%T write field end error 4:Email: %s", p, err)
	}
	return err
}

func (p *Member) writeField5(oprot thrift.TProtocol) (err error) {
	if err := oprot.WriteFieldBegin("CreateTime", thrift.I64, 5); err != nil {
		return fmt.Errorf("%T write field begin error 5:CreateTime: %s", p, err)
	}
	if err := oprot.WriteI64(int64(p.CreateTime)); err != nil {
		return fmt.Errorf("%T.CreateTime (5) field write error: %s", p, err)
	}
	if err := oprot.WriteFieldEnd(); err != nil {
		return fmt.Errorf("%T write field end error 5:CreateTime: %s", p, err)
	}
	return err
}

func (p *Member) writeField6(oprot thrift.TProtocol) (err error) {
	if err := oprot.WriteFieldBegin("Avatar", thrift.I64, 6); err != nil {
		return fmt.Errorf("%T write field begin error 6:Avatar: %s", p, err)
	}
	if err := oprot.WriteI64(int64(p.Avatar)); err != nil {
		return fmt.Errorf("%T.Avatar (6) field write error: %s", p, err)
	}
	if err := oprot.WriteFieldEnd(); err != nil {
		return fmt.Errorf("%T write field end error 6:Avatar: %s", p, err)
	}
	return err
}

func (p *Member) writeField7(oprot thrift.TProtocol) (err error) {
	if err := oprot.WriteFieldBegin("PushId", thrift.STRING, 7); err != nil {
		return fmt.Errorf("%T write field begin error 7:PushId: %s", p, err)
	}
	if err := oprot.WriteString(string(p.PushId)); err != nil {
		return fmt.Errorf("%T.PushId (7) field write error: %s", p, err)
	}
	if err := oprot.WriteFieldEnd(); err != nil {
		return fmt.Errorf("%T write field end error 7:PushId: %s", p, err)
	}
	return err
}

func (p *Member) writeField8(oprot thrift.TProtocol) (err error) {
	if err := oprot.WriteFieldBegin("PushChannelId", thrift.STRING, 8); err != nil {
		return fmt.Errorf("%T write field begin error 8:PushChannelId: %s", p, err)
	}
	if err := oprot.WriteString(string(p.PushChannelId)); err != nil {
		return fmt.Errorf("%T.PushChannelId (8) field write error: %s", p, err)
	}
	if err := oprot.WriteFieldEnd(); err != nil {
		return fmt.Errorf("%T write field end error 8:PushChannelId: %s", p, err)
	}
	return err
}

func (p *Member) writeField9(oprot thrift.TProtocol) (err error) {
	if err := oprot.WriteFieldBegin("PushProxy", thrift.I32, 9); err != nil {
		return fmt.Errorf("%T write field begin error 9:PushProxy: %s", p, err)
	}
	if err := oprot.WriteI32(int32(p.PushProxy)); err != nil {
		return fmt.Errorf("%T.PushProxy (9) field write error: %s", p, err)
	}
	if err := oprot.WriteFieldEnd(); err != nil {
		return fmt.Errorf("%T write field end error 9:PushProxy: %s", p, err)
	}
	return err
}

func (p *Member) writeField10(oprot thrift.TProtocol) (err error) {
	if err := oprot.WriteFieldBegin("DeviceType", thrift.STRING, 10); err != nil {
		return fmt.Errorf("%T write field begin error 10:DeviceType: %s", p, err)
	}
	if err := oprot.WriteString(string(p.DeviceType)); err != nil {
		return fmt.Errorf("%T.DeviceType (10) field write error: %s", p, err)
	}
	if err := oprot.WriteFieldEnd(); err != nil {
		return fmt.Errorf("%T write field end error 10:DeviceType: %s", p, err)
	}
	return err
}

func (p *Member) writeField11(oprot thrift.TProtocol) (err error) {
	if err := oprot.WriteFieldBegin("Certified", thrift.BOOL, 11); err != nil {
		return fmt.Errorf("%T write field begin error 11:Certified: %s", p, err)
	}
	if err := oprot.WriteBool(bool(p.Certified)); err != nil {
		return fmt.Errorf("%T.Certified (11) field write error: %s", p, err)
	}
	if err := oprot.WriteFieldEnd(); err != nil {
		return fmt.Errorf("%T write field end error 11:Certified: %s", p, err)
	}
	return err
}

func (p *Member) String() string {
	if p == nil {
		return "<nil>"
	}
	return fmt.Sprintf("Member(%+v)", *p)
}

type Result_ struct {
	Code    int32   `thrift:"Code,1" json:"Code"`
	ErrorA1 string  `thrift:"Error,2" json:"Error"`
	Member  *Member `thrift:"Member,3" json:"Member"`
}

func NewResult_() *Result_ {
	return &Result_{}
}

func (p *Result_) GetCode() int32 {
	return p.Code
}

func (p *Result_) GetErrorA1() string {
	return p.ErrorA1
}

var Result__Member_DEFAULT *Member

func (p *Result_) GetMember() *Member {
	if !p.IsSetMember() {
		return Result__Member_DEFAULT
	}
	return p.Member
}
func (p *Result_) IsSetMember() bool {
	return p.Member != nil
}

func (p *Result_) Read(iprot thrift.TProtocol) error {
	if _, err := iprot.ReadStructBegin(); err != nil {
		return fmt.Errorf("%T read error: %s", p, err)
	}
	for {
		_, fieldTypeId, fieldId, err := iprot.ReadFieldBegin()
		if err != nil {
			return fmt.Errorf("%T field %d read error: %s", p, fieldId, err)
		}
		if fieldTypeId == thrift.STOP {
			break
		}
		switch fieldId {
		case 1:
			if err := p.ReadField1(iprot); err != nil {
				return err
			}
		case 2:
			if err := p.ReadField2(iprot); err != nil {
				return err
			}
		case 3:
			if err := p.ReadField3(iprot); err != nil {
				return err
			}
		default:
			if err := iprot.Skip(fieldTypeId); err != nil {
				return err
			}
		}
		if err := iprot.ReadFieldEnd(); err != nil {
			return err
		}
	}
	if err := iprot.ReadStructEnd(); err != nil {
		return fmt.Errorf("%T read struct end error: %s", p, err)
	}
	return nil
}

func (p *Result_) ReadField1(iprot thrift.TProtocol) error {
	if v, err := iprot.ReadI32(); err != nil {
		return fmt.Errorf("error reading field 1: %s", err)
	} else {
		p.Code = v
	}
	return nil
}

func (p *Result_) ReadField2(iprot thrift.TProtocol) error {
	if v, err := iprot.ReadString(); err != nil {
		return fmt.Errorf("error reading field 2: %s", err)
	} else {
		p.ErrorA1 = v
	}
	return nil
}

func (p *Result_) ReadField3(iprot thrift.TProtocol) error {
	p.Member = &Member{}
	if err := p.Member.Read(iprot); err != nil {
		return fmt.Errorf("%T error reading struct: %s", p.Member, err)
	}
	return nil
}

func (p *Result_) Write(oprot thrift.TProtocol) error {
	if err := oprot.WriteStructBegin("Result"); err != nil {
		return fmt.Errorf("%T write struct begin error: %s", p, err)
	}
	if err := p.writeField1(oprot); err != nil {
		return err
	}
	if err := p.writeField2(oprot); err != nil {
		return err
	}
	if err := p.writeField3(oprot); err != nil {
		return err
	}
	if err := oprot.WriteFieldStop(); err != nil {
		return fmt.Errorf("write field stop error: %s", err)
	}
	if err := oprot.WriteStructEnd(); err != nil {
		return fmt.Errorf("write struct stop error: %s", err)
	}
	return nil
}

func (p *Result_) writeField1(oprot thrift.TProtocol) (err error) {
	if err := oprot.WriteFieldBegin("Code", thrift.I32, 1); err != nil {
		return fmt.Errorf("%T write field begin error 1:Code: %s", p, err)
	}
	if err := oprot.WriteI32(int32(p.Code)); err != nil {
		return fmt.Errorf("%T.Code (1) field write error: %s", p, err)
	}
	if err := oprot.WriteFieldEnd(); err != nil {
		return fmt.Errorf("%T write field end error 1:Code: %s", p, err)
	}
	return err
}

func (p *Result_) writeField2(oprot thrift.TProtocol) (err error) {
	if err := oprot.WriteFieldBegin("Error", thrift.STRING, 2); err != nil {
		return fmt.Errorf("%T write field begin error 2:Error: %s", p, err)
	}
	if err := oprot.WriteString(string(p.ErrorA1)); err != nil {
		return fmt.Errorf("%T.Error (2) field write error: %s", p, err)
	}
	if err := oprot.WriteFieldEnd(); err != nil {
		return fmt.Errorf("%T write field end error 2:Error: %s", p, err)
	}
	return err
}

func (p *Result_) writeField3(oprot thrift.TProtocol) (err error) {
	if p.IsSetMember() {
		if err := oprot.WriteFieldBegin("Member", thrift.STRUCT, 3); err != nil {
			return fmt.Errorf("%T write field begin error 3:Member: %s", p, err)
		}
		if err := p.Member.Write(oprot); err != nil {
			return fmt.Errorf("%T error writing struct: %s", p.Member, err)
		}
		if err := oprot.WriteFieldEnd(); err != nil {
			return fmt.Errorf("%T write field end error 3:Member: %s", p, err)
		}
	}
	return err
}

func (p *Result_) String() string {
	if p == nil {
		return "<nil>"
	}
	return fmt.Sprintf("Result_(%+v)", *p)
}
